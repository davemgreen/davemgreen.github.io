[
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %9:_(s8), %10:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <2 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 5,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v0.8b\nret",
  "giasm": "ushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v0.8b\nret",
  "giasm": "mov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v0.8b\nret",
  "giasm": "mov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "ushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 13,
  "gisize": 13,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nstp q1, q2, [x8, #16]\nstp q3, q4, [x8, #48]\nstp q5, q6, [x8, #80]\nstr q16, [x8, #240]\nldp q18, q16, [sp, #64]\nstr q0, [x8]\nstp q16, q17, [x8, #208]\nldp q17, q16, [sp, #32]\nstp q16, q18, [x8, #176]\nldp q18, q16, [sp]\nstp q7, q18, [x8, #112]\nstp q16, q17, [x8, #144]\nret",
  "giasm": "stp q0, q1, [x8]\nldp q0, q1, [sp]\nstp q2, q3, [x8, #32]\nstp q4, q5, [x8, #64]\nstp q7, q0, [x8, #112]\nldp q0, q2, [sp, #32]\nstr q6, [x8, #96]\nstp q1, q0, [x8, #144]\nldp q0, q1, [sp, #64]\nstp q2, q0, [x8, #176]\nldp q0, q2, [sp, #96]\nstp q1, q0, [x8, #208]\nstr q2, [x8, #240]\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "mov v1.h[0], v0.h[0]\nmov v1.h[1], v0.h[1]\nfmov d0, d1\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "mov v1.h[0], v0.h[0]\nmov v1.h[1], v0.h[1]\nfmov d0, d1\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "mov v1.h[0], v0.h[0]\nmov v1.h[1], v0.h[1]\nfmov d0, d1\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 13,
  "gisize": 13,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nstp q1, q2, [x8, #16]\nstp q3, q4, [x8, #48]\nstp q5, q6, [x8, #80]\nstr q16, [x8, #240]\nldp q18, q16, [sp, #64]\nstr q0, [x8]\nstp q16, q17, [x8, #208]\nldp q17, q16, [sp, #32]\nstp q16, q18, [x8, #176]\nldp q18, q16, [sp]\nstp q7, q18, [x8, #112]\nstp q16, q17, [x8, #144]\nret",
  "giasm": "stp q0, q1, [x8]\nldp q0, q1, [sp]\nstp q2, q3, [x8, #32]\nstp q4, q5, [x8, #64]\nstp q7, q0, [x8, #112]\nldp q0, q2, [sp, #32]\nstr q6, [x8, #96]\nstp q1, q0, [x8, #144]\nldp q0, q1, [sp, #64]\nstp q2, q0, [x8, #176]\nldp q0, q2, [sp, #96]\nstp q1, q0, [x8, #208]\nstr q2, [x8, #240]\nret",
  "ll": "define <32 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %9:_(s8), %10:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <2 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "umov w8, v0.h[0]\ndup v0.2s, w8\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.8b, v0.b[0]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.b[0]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.8b, v0.b[0]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.b[0]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.16b, v0.b[0]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.b[0]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.16b, v0.b[0]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %15:_(s8), %16:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <4 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.8b, v0.b[0]\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "umov w8, v0.b[0]\ndup v0.4h, w8\nret",
  "giasm": "dup v0.8b, v0.b[0]\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 10,
  "extrasize": 0,
  "asm": "umov w8, v0.b[0]\ndup v0.4h, w8\nret",
  "giasm": "dup v0.16b, v0.b[0]\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 10,
  "extrasize": 0,
  "asm": "umov w8, v0.b[0]\ndup v0.4h, w8\nret",
  "giasm": "dup v0.16b, v0.b[0]\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[0]\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %24:_(s8), %25:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <8 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[0]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.8b, v0.b[0]\nret",
  "ll": "define <8 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[0]\nret",
  "giasm": "dup v0.8b, v0.b[0]\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[0]\nret",
  "giasm": "dup v0.8b, v0.b[0]\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[0]\nret",
  "giasm": "dup v0.8b, v0.b[0]\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %28:_(s8), %29:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <16 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.16b, v0.b[0]\nret",
  "ll": "define <16 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nret",
  "giasm": "dup v0.16b, v0.b[0]\nret",
  "ll": "define <16 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nret",
  "giasm": "dup v0.16b, v0.b[0]\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nret",
  "giasm": "dup v0.16b, v0.b[0]\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %37:_(s8), %38:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <32 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.16b, v0.b[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <32 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.16b, v0.b[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <32 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.16b, v0.b[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <32 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.16b, v0.b[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\ndup v0.4h, v0.h[0]\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "umov w8, v0.h[0]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.4h, v0.h[0]\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.h[0]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.8h, v0.h[0]\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.h[0]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.8h, v0.h[0]\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.h[0]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.8h, v0.h[0]\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\ndup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\ndup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "dup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "dup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "dup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "dup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\ndup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "uzp1 v1.4h, v0.4h, v0.4h\ndup v0.8h, v1.h[0]\ndup v2.8h, v1.h[0]\nmov v1.16b, v0.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <32 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.8h, v0.h[0]\ndup v2.8h, v0.h[0]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <32 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.4s, v0.s[0]\ndup v2.4s, v0.s[0]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <16 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v1.4s, v0.s[0]\ndup v2.4s, v0.s[0]\ndup v4.4s, v0.s[0]\ndup v6.4s, v0.s[0]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nmov v5.16b, v4.16b\nmov v7.16b, v6.16b\nret",
  "ll": "define <32 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <2 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v1.8h, v0.h[0]\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v1.8h, v0.h[0]\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v1.8h, v0.h[0]\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[0]\nret",
  "giasm": "dup v0.4h, v0.h[0]\nret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "dup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "dup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "dup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "dup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nret",
  "giasm": "dup v0.8h, v0.h[0]\nret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.8h, v0.h[0]\ndup v2.8h, v0.h[0]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <32 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.8h, v0.h[0]\ndup v2.8h, v0.h[0]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <32 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[0]\nret",
  "giasm": "dup v0.2s, v0.s[0]\nret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nret",
  "giasm": "dup v0.4s, v0.s[0]\nret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.4s, v0.s[0]\ndup v2.4s, v0.s[0]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <16 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v1.4s, v0.s[0]\ndup v2.4s, v0.s[0]\ndup v4.4s, v0.s[0]\ndup v6.4s, v0.s[0]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nmov v5.16b, v4.16b\nmov v7.16b, v6.16b\nret",
  "ll": "define <32 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat0 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 0, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat0 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat0 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat0 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[0]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat0 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[0]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> <i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> zeroinitializer\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[1]\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %9:_(s8), %10:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <2 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> <i32 1, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> <i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "umov w8, v0.h[3]\ndup v0.2s, w8\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.8b, v0.b[3]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.b[3]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.8b, v0.b[3]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.b[3]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.16b, v0.b[3]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.b[3]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.16b, v0.b[3]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[2]\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %15:_(s8), %16:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <4 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.8b, v0.b[3]\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "umov w8, v0.b[3]\ndup v0.4h, w8\nret",
  "giasm": "dup v0.8b, v0.b[3]\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 10,
  "extrasize": 0,
  "asm": "umov w8, v0.b[3]\ndup v0.4h, w8\nret",
  "giasm": "dup v0.16b, v0.b[3]\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 10,
  "extrasize": 0,
  "asm": "umov w8, v0.b[3]\ndup v0.4h, w8\nret",
  "giasm": "dup v0.16b, v0.b[3]\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[4]\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %24:_(s8), %25:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <8 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[6]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.8b, v0.b[3]\nret",
  "ll": "define <8 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[3]\nret",
  "giasm": "dup v0.8b, v0.b[3]\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[3]\nret",
  "giasm": "dup v0.8b, v0.b[3]\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8b, v0.b[3]\nret",
  "giasm": "dup v0.8b, v0.b[3]\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[4]\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %28:_(s8), %29:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <16 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[6]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.16b, v0.b[3]\nret",
  "ll": "define <16 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[3]\nret",
  "giasm": "dup v0.16b, v0.b[3]\nret",
  "ll": "define <16 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[3]\nret",
  "giasm": "dup v0.16b, v0.b[3]\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[3]\nret",
  "giasm": "dup v0.16b, v0.b[3]\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[4]\nmov v1.16b, v0.16b\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %37:_(s8), %38:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <32 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[6]\nmov v1.16b, v0.16b\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\ndup v0.16b, v0.b[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <32 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.16b, v0.b[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <32 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.16b, v0.b[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <32 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.16b, v0.b[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.16b, v0.b[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[1]\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\ndup v0.4h, v0.h[1]\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> <i32 1, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> <i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "umov w8, v0.h[3]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.4h, v0.h[3]\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.h[3]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.8h, v0.h[3]\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.h[3]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.8h, v0.h[3]\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "umov w8, v0.h[3]\ndup v0.2s, w8\nret",
  "giasm": "dup v0.8h, v0.h[3]\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[2]\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\ndup v0.4h, v0.h[1]\nret",
  "ll": "define <4 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v0.4h, v0.h[3]\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v0.4h, v0.h[3]\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v0.4h, v0.h[3]\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v0.4h, v0.h[3]\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[2]\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\ndup v0.8h, v0.h[1]\nret",
  "ll": "define <8 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nret",
  "giasm": "dup v0.8h, v0.h[3]\nret",
  "ll": "define <8 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nret",
  "giasm": "dup v0.8h, v0.h[3]\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nret",
  "giasm": "dup v0.8h, v0.h[3]\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nret",
  "giasm": "dup v0.8h, v0.h[3]\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[2]\nmov v1.16b, v0.16b\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\ndup v0.8h, v0.h[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[2]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "uzp1 v1.4h, v0.4h, v0.4h\ndup v0.8h, v1.h[1]\ndup v2.8h, v1.h[1]\nmov v1.16b, v0.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <32 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.8h, v0.h[3]\ndup v2.8h, v0.h[3]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <32 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[1]\nret",
  "giasm": "dup v0.2s, v0.s[1]\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> <i32 1, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> <i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[3]\nret",
  "giasm": "dup v0.2s, v0.s[3]\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[3]\nret",
  "giasm": "dup v0.2s, v0.s[3]\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[3]\nret",
  "giasm": "dup v0.2s, v0.s[3]\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[3]\nret",
  "giasm": "dup v0.2s, v0.s[3]\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[1]\nret",
  "giasm": "dup v0.4s, v0.s[1]\nret",
  "ll": "define <4 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nret",
  "giasm": "dup v0.4s, v0.s[3]\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nret",
  "giasm": "dup v0.4s, v0.s[3]\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nret",
  "giasm": "dup v0.4s, v0.s[3]\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nret",
  "giasm": "dup v0.4s, v0.s[3]\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.4s, v0.s[1]\ndup v2.4s, v0.s[1]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <16 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v1.4s, v0.s[1]\ndup v2.4s, v0.s[1]\ndup v4.4s, v0.s[1]\ndup v6.4s, v0.s[1]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nmov v5.16b, v4.16b\nmov v7.16b, v6.16b\nret",
  "ll": "define <32 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nret",
  "giasm": "dup v0.2d, v0.d[1]\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> <i32 1, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> <i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[1]\nret",
  "giasm": "dup v0.4h, v0.h[1]\nret",
  "ll": "define <2 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> <i32 1, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> <i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v0.4h, v0.h[3]\nret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v1.8h, v0.h[3]\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v1.8h, v0.h[3]\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v1.8h, v0.h[3]\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[1]\nret",
  "giasm": "dup v0.4h, v0.h[1]\nret",
  "ll": "define <4 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v0.4h, v0.h[3]\nret",
  "ll": "define <4 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v0.4h, v0.h[3]\nret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v0.4h, v0.h[3]\nret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4h, v0.h[3]\nret",
  "giasm": "dup v0.4h, v0.h[3]\nret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[1]\nret",
  "giasm": "dup v0.8h, v0.h[1]\nret",
  "ll": "define <8 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nret",
  "giasm": "dup v0.8h, v0.h[3]\nret",
  "ll": "define <8 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nret",
  "giasm": "dup v0.8h, v0.h[3]\nret",
  "ll": "define <8 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nret",
  "giasm": "dup v0.8h, v0.h[3]\nret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nret",
  "giasm": "dup v0.8h, v0.h[3]\nret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.8h, v0.h[1]\ndup v2.8h, v0.h[1]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <32 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.8h, v0.h[3]\ndup v2.8h, v0.h[3]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <32 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.8h, v0.h[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <32 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[1]\nret",
  "giasm": "dup v0.2s, v0.s[1]\nret",
  "ll": "define <2 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> <i32 1, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> <i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[3]\nret",
  "giasm": "dup v0.2s, v0.s[3]\nret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[3]\nret",
  "giasm": "dup v0.2s, v0.s[3]\nret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[3]\nret",
  "giasm": "dup v0.2s, v0.s[3]\nret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2s, v0.s[3]\nret",
  "giasm": "dup v0.2s, v0.s[3]\nret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[1]\nret",
  "giasm": "dup v0.4s, v0.s[1]\nret",
  "ll": "define <4 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nret",
  "giasm": "dup v0.4s, v0.s[3]\nret",
  "ll": "define <4 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nret",
  "giasm": "dup v0.4s, v0.s[3]\nret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nret",
  "giasm": "dup v0.4s, v0.s[3]\nret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nret",
  "giasm": "dup v0.4s, v0.s[3]\nret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v1.4s, v0.s[1]\ndup v2.4s, v0.s[1]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nret",
  "ll": "define <16 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v1.4s, v0.s[1]\ndup v2.4s, v0.s[1]\ndup v4.4s, v0.s[1]\ndup v6.4s, v0.s[1]\nmov v0.16b, v1.16b\nmov v3.16b, v2.16b\nmov v5.16b, v4.16b\nmov v7.16b, v6.16b\nret",
  "ll": "define <32 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.4s, v0.s[3]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <32 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nret",
  "giasm": "dup v0.2d, v0.d[1]\nret",
  "ll": "define <2 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> <i32 1, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> <i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat3 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 3, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <4 x i32> <i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat3 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <8 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat3 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v0.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <16 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat3 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "giasm": "dup v0.2d, v1.d[1]\nmov v1.16b, v0.16b\nmov v2.16b, v0.16b\nmov v3.16b, v0.16b\nmov v4.16b, v0.16b\nmov v5.16b, v0.16b\nmov v6.16b, v0.16b\nmov v7.16b, v0.16b\nret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v0.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v0.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <32 x i32> <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splat3 v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 9,
  "extrasize": 0,
  "asm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "giasm": "dup v0.2d, v1.d[1]\nstp q0, q0, [x8]\nstp q0, q0, [x8, #32]\nstp q0, q0, [x8, #64]\nstp q0, q0, [x8, #96]\nstp q0, q0, [x8, #128]\nstp q0, q0, [x8, #160]\nstp q0, q0, [x8, #192]\nstp q0, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "zip1 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[4]\nfmov d0, d1\nret",
  "giasm": "mov v0.b[1], v0.b[4]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "zip1 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[8]\nfmov d0, d1\nret",
  "giasm": "mov v0.b[1], v0.b[8]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[0]\nmov v0.b[4], v1.b[0]\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "zip1 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 4,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[2], v0.b[4]\nmov v1.b[4], v0.b[1]\nmov v1.b[6], v0.b[5]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nmov v0.d[1], v0.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "zip1 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 4,
  "gisize": 12,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[2], v0.b[8]\nmov v1.b[4], v0.b[1]\nmov v1.b[6], v0.b[9]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b2, v0.b[0]\nmov v2.b[2], v1.b[0]\nmov v2.b[4], v0.b[1]\nmov v2.b[6], v1.b[1]\nfmov d0, d2\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "zip1 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "zip1 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "zip1 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[4]\nfmov d0, d1\nret",
  "giasm": "mov v0.h[1], v0.h[4]\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v1.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v2.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "zip1 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "zip1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.8h, v0.8h, v2.8h\nzip2 v1.8h, v0.8h, v2.8h\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.8h, v0.8h, v2.8h\nzip2 v1.8h, v0.8h, v2.8h\nmov v0.16b, v3.16b\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.4s, v0.4s, v2.4s\nzip2 v1.4s, v0.4s, v2.4s\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.4s, v0.4s, v2.4s\nzip2 v1.4s, v0.4s, v2.4s\nmov v0.16b, v3.16b\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.4s, v0.4s, v4.4s\nzip2 v1.4s, v0.4s, v4.4s\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.4s, v0.4s, v4.4s\nzip2 v1.4s, v0.4s, v4.4s\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "zip1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.4s, v0.4s, v4.4s\nzip2 v4.4s, v0.4s, v4.4s\nzip1 v2.4s, v1.4s, v5.4s\nzip2 v3.4s, v1.4s, v5.4s\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.4s, v0.4s, v4.4s\nzip2 v4.4s, v0.4s, v4.4s\nzip1 v2.4s, v1.4s, v5.4s\nzip2 v3.4s, v1.4s, v5.4s\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.2d, v0.2d, v2.2d\nzip2 v1.2d, v0.2d, v2.2d\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.2d, v0.2d, v2.2d\nzip2 v1.2d, v0.2d, v2.2d\nmov v0.16b, v3.16b\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v0.2d, v4.2d\nzip2 v1.2d, v0.2d, v4.2d\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.2d, v0.2d, v4.2d\nzip2 v1.2d, v0.2d, v4.2d\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nret",
  "giasm": "ldr q1, [sp]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.2d, v0.2d, v4.2d\nzip2 v4.2d, v0.2d, v4.2d\nzip1 v2.2d, v1.2d, v5.2d\nzip2 v3.2d, v1.2d, v5.2d\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.2d, v0.2d, v4.2d\nzip2 v4.2d, v0.2d, v4.2d\nzip1 v2.2d, v1.2d, v5.2d\nzip2 v3.2d, v1.2d, v5.2d\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q2, q3, [sp]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "zip1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "zip1 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "mov v0.h[1], v0.h[4]\nmov v1.h[0], v0.h[0]\nmov v1.h[1], v0.h[1]\nfmov d0, d1\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v1.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v2.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "zip1 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "zip1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.8h, v0.8h, v2.8h\nzip2 v1.8h, v0.8h, v2.8h\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.8h, v0.8h, v2.8h\nzip2 v1.8h, v0.8h, v2.8h\nmov v0.16b, v3.16b\nret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.4s, v0.4s, v2.4s\nzip2 v1.4s, v0.4s, v2.4s\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.4s, v0.4s, v2.4s\nzip2 v1.4s, v0.4s, v2.4s\nmov v0.16b, v3.16b\nret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.4s, v0.4s, v4.4s\nzip2 v1.4s, v0.4s, v4.4s\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.4s, v0.4s, v4.4s\nzip2 v1.4s, v0.4s, v4.4s\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "zip1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.4s, v0.4s, v4.4s\nzip2 v4.4s, v0.4s, v4.4s\nzip1 v2.4s, v1.4s, v5.4s\nzip2 v3.4s, v1.4s, v5.4s\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.4s, v0.4s, v4.4s\nzip2 v4.4s, v0.4s, v4.4s\nzip1 v2.4s, v1.4s, v5.4s\nzip2 v3.4s, v1.4s, v5.4s\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.2d, v0.2d, v2.2d\nzip2 v1.2d, v0.2d, v2.2d\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.2d, v0.2d, v2.2d\nzip2 v1.2d, v0.2d, v2.2d\nmov v0.16b, v3.16b\nret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v0.2d, v4.2d\nzip2 v1.2d, v0.2d, v4.2d\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.2d, v0.2d, v4.2d\nzip2 v1.2d, v0.2d, v4.2d\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nret",
  "giasm": "ldr q1, [sp]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.2d, v0.2d, v4.2d\nzip2 v4.2d, v0.2d, v4.2d\nzip1 v2.2d, v1.2d, v5.2d\nzip2 v3.2d, v1.2d, v5.2d\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.2d, v0.2d, v4.2d\nzip2 v4.2d, v0.2d, v4.2d\nzip1 v2.2d, v1.2d, v5.2d\nzip2 v3.2d, v1.2d, v5.2d\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q2, q3, [sp]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "zip1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp2 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "zip2 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 8,
  "extrasize": 0,
  "asm": "mov b1, v0.b[2]\nmov v1.b[4], v0.b[6]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nmov v0.d[1], v0.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 2, i32 6>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "zip2 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 7,
  "extrasize": 0,
  "asm": "mov b1, v0.b[4]\nmov v1.b[4], v0.b[12]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 4, i32 12>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[8]\nmov v0.b[4], v1.b[8]\nret",
  "giasm": "zip2 v0.16b, v0.16b, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 8, i32 24>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "zip2 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 4,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[2]\nmov v1.b[2], v0.b[6]\nmov v1.b[4], v0.b[3]\nmov v1.b[6], v0.b[7]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nmov v0.d[1], v0.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "zip2 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 4,
  "gisize": 12,
  "extrasize": 0,
  "asm": "mov b1, v0.b[4]\nmov v1.b[2], v0.b[12]\nmov v1.b[4], v0.b[5]\nmov v1.b[6], v0.b[13]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b2, v0.b[8]\nmov v2.b[2], v1.b[8]\nmov v2.b[4], v0.b[9]\nmov v2.b[6], v1.b[9]\nfmov d0, d2\nret",
  "giasm": "zip2 v0.16b, v0.16b, v1.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "zip2 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "zip2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "zip2 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "zip2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "zip2 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 7,
  "extrasize": 0,
  "asm": "mov h1, v0.h[2]\nmov v1.h[2], v0.h[6]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 2, i32 6>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[4]\nmov v0.h[2], v1.h[4]\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 4, i32 12>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v1.h[0]\nmov v0.h[2], v3.h[0]\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 8, i32 24>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "zip2 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v1.4h, v3.4h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "zip2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v1.8h, v3.8h\nzip2 v1.8h, v1.8h, v3.8h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nzip2 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 2, i32 6>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v1.2s, v3.2s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 4, i32 12>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v2.2s, v6.2s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 8, i32 24>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v1.4s, v3.4s\nzip2 v1.4s, v1.4s, v3.4s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nzip2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "zip2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.4s, v3.4s, v7.4s\nzip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nzip2 v3.4s, v3.4s, v7.4s\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nzip1 v2.4s, v3.4s, v7.4s\nzip2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v1.2d, v3.2d\nret",
  "giasm": "zip1 v0.2d, v1.2d, v3.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 2, i32 6>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v2.2d, v6.2d\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 4, i32 12>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q0, [sp, #64]\nzip1 v0.2d, v4.2d, v0.2d\nret",
  "giasm": "ldr q0, [sp, #64]\nzip1 v0.2d, v4.2d, v0.2d\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 8, i32 24>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v1.2d, v3.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "giasm": "zip1 v0.2d, v1.2d, v3.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.2d, v3.2d, v7.2d\nzip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nzip1 v2.2d, v3.2d, v7.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "zip2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nzip1 v4.2d, v6.2d, v16.2d\nzip2 v5.2d, v6.2d, v16.2d\nzip1 v6.2d, v7.2d, v17.2d\nzip2 v7.2d, v7.2d, v17.2d\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nzip1 v4.2d, v6.2d, v16.2d\nzip2 v5.2d, v6.2d, v16.2d\nzip1 v6.2d, v7.2d, v17.2d\nzip2 v7.2d, v7.2d, v17.2d\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "zip2 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v1.16b, { v0.16b, v1.16b }, v2.16b\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 2, i32 6>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip2 v1.8h, v0.8h, v1.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 4, i32 12>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v1.4h, v3.4h\nret",
  "giasm": "zip1 v1.8h, v1.8h, v3.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 8, i32 24>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "zip2 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v1.4h, v3.4h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "zip2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v1.8h, v3.8h\nzip2 v1.8h, v1.8h, v3.8h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nzip2 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 2, i32 6>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v1.2s, v3.2s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 4, i32 12>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v2.2s, v6.2s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 8, i32 24>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v1.4s, v3.4s\nzip2 v1.4s, v1.4s, v3.4s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nzip2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "zip2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.4s, v3.4s, v7.4s\nzip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nzip2 v3.4s, v3.4s, v7.4s\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nzip1 v2.4s, v3.4s, v7.4s\nzip2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v1.2d, v3.2d\nret",
  "giasm": "zip1 v0.2d, v1.2d, v3.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 2, i32 6>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v2.2d, v6.2d\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 4, i32 12>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q0, [sp, #64]\nzip1 v0.2d, v4.2d, v0.2d\nret",
  "giasm": "ldr q0, [sp, #64]\nzip1 v0.2d, v4.2d, v0.2d\nret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 8, i32 24>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v1.2d, v3.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "giasm": "zip1 v0.2d, v1.2d, v3.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.2d, v3.2d, v7.2d\nzip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nzip1 v2.2d, v3.2d, v7.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "zip2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nzip1 v4.2d, v6.2d, v16.2d\nzip2 v5.2d, v6.2d, v16.2d\nzip1 v6.2d, v7.2d, v17.2d\nzip2 v7.2d, v7.2d, v17.2d\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nzip1 v4.2d, v6.2d, v16.2d\nzip2 v5.2d, v6.2d, v16.2d\nzip1 v6.2d, v7.2d, v17.2d\nzip2 v7.2d, v7.2d, v17.2d\nret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.8b, v0.8h\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.8b, v0.8h\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "uzp1 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.4h, v0.4s\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.4h, v0.4s\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.4h, v0.4s\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "uzp1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.8h, v2.8h, v3.8h\nuzp1 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "uzp1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "uzp1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nzip1 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #64]\nzip1 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp]\nzip1 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #32]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v6.2d, v19.2d, v18.2d\nzip1 v7.2d, v17.2d, v16.2d\nzip1 v4.2d, v21.2d, v20.2d\nzip1 v5.2d, v23.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #32]\nzip1 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #64]\nzip1 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #96]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v4.2d, v16.2d, v17.2d\nzip1 v5.2d, v18.2d, v19.2d\nzip1 v6.2d, v20.2d, v21.2d\nzip1 v7.2d, v22.2d, v23.2d\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "uzp1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.8h, v2.8h, v3.8h\nuzp1 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "uzp1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "uzp1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nzip1 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #64]\nzip1 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp]\nzip1 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #32]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v6.2d, v19.2d, v18.2d\nzip1 v7.2d, v17.2d, v16.2d\nzip1 v4.2d, v21.2d, v20.2d\nzip1 v5.2d, v23.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #32]\nzip1 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #64]\nzip1 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #96]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v4.2d, v16.2d, v17.2d\nzip1 v5.2d, v18.2d, v19.2d\nzip1 v6.2d, v20.2d, v21.2d\nzip1 v7.2d, v22.2d, v23.2d\nret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp2 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev16 v0.8b, v0.8b\nret",
  "giasm": "uzp2 v0.8b, v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 10,
  "extrasize": 0,
  "asm": "rev16 v0.8b, v0.8b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 10,
  "extrasize": 0,
  "asm": "rev16 v0.8b, v0.8b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.16b, v0.16b, v0.16b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.16b, v0.16b, v0.16b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "uzp2 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "uzp2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.8h, v2.8h, v3.8h\nuzp2 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "uzp2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "uzp2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nzip2 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #64]\nzip2 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp]\nzip2 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #32]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v6.2d, v19.2d, v18.2d\nzip2 v7.2d, v17.2d, v16.2d\nzip2 v4.2d, v21.2d, v20.2d\nzip2 v5.2d, v23.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #32]\nzip2 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #64]\nzip2 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #96]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v4.2d, v16.2d, v17.2d\nzip2 v5.2d, v18.2d, v19.2d\nzip2 v6.2d, v20.2d, v21.2d\nzip2 v7.2d, v22.2d, v23.2d\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "uzp2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.8h, v2.8h, v3.8h\nuzp2 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "uzp2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "uzp2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nzip2 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #64]\nzip2 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp]\nzip2 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #32]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v6.2d, v19.2d, v18.2d\nzip2 v7.2d, v17.2d, v16.2d\nzip2 v4.2d, v21.2d, v20.2d\nzip2 v5.2d, v23.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #32]\nzip2 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #64]\nzip2 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #96]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v4.2d, v16.2d, v17.2d\nzip2 v5.2d, v18.2d, v19.2d\nzip2 v6.2d, v20.2d, v21.2d\nzip2 v7.2d, v22.2d, v23.2d\nret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "trn1 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[4]\nfmov d0, d1\nret",
  "giasm": "mov v0.b[1], v0.b[4]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "trn1 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[8]\nfmov d0, d1\nret",
  "giasm": "mov v0.b[1], v0.b[8]\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[0]\nmov v0.b[4], v1.b[0]\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "trn1 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 4,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[2], v0.b[4]\nmov v1.b[4], v0.b[2]\nmov v1.b[6], v0.b[6]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nmov v0.d[1], v0.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "trn1 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 4,
  "gisize": 12,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[2], v0.b[8]\nmov v1.b[4], v0.b[2]\nmov v1.b[6], v0.b[10]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "trn1 v4",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b2, v0.b[0]\nmov v2.b[2], v1.b[0]\nmov v2.b[4], v0.b[2]\nmov v2.b[6], v1.b[2]\nfmov d0, d2\nret",
  "giasm": "trn1 v0.16b, v0.16b, v1.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "trn1 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\ntrn1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "trn1 v8",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "trn1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "trn1 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "trn1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "trn1 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[4]\nfmov d0, d1\nret",
  "giasm": "mov v0.h[1], v0.h[4]\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v1.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v2.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "trn1 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\ntrn1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "trn1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.8h, v1.8h, v3.8h\ntrn1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\ntrn1 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.4s, v1.4s, v3.4s\ntrn1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v2.4s\ntrn1 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.4s, v1.4s, v5.4s\ntrn1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "trn1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn1 v2.4s, v2.4s, v6.4s\ntrn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v2.4s, v2.4s, v6.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v1.2d, v1.2d, v3.2d\nzip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v1.2d, v1.2d, v5.2d\nzip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\nzip1 v0.2d, v0.2d, v3.2d\nzip1 v1.2d, v1.2d, v2.2d\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v6.2d\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v7.2d\nzip1 v3.2d, v3.2d, v6.2d\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "trn1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\nzip1 v4.2d, v4.2d, v17.2d\nzip1 v0.2d, v0.2d, v19.2d\nzip1 v1.2d, v1.2d, v18.2d\nzip1 v5.2d, v5.2d, v16.2d\nzip1 v2.2d, v2.2d, v21.2d\nzip1 v3.2d, v3.2d, v20.2d\nzip1 v6.2d, v6.2d, v23.2d\nzip1 v7.2d, v7.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\nzip1 v0.2d, v0.2d, v16.2d\nzip1 v1.2d, v1.2d, v17.2d\nzip1 v2.2d, v2.2d, v18.2d\nzip1 v3.2d, v3.2d, v19.2d\nzip1 v4.2d, v4.2d, v20.2d\nzip1 v5.2d, v5.2d, v21.2d\nzip1 v6.2d, v6.2d, v22.2d\nzip1 v7.2d, v7.2d, v23.2d\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "trn1 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "mov v0.h[1], v0.h[4]\nmov v1.h[0], v0.h[0]\nmov v1.h[1], v0.h[1]\nfmov d0, d1\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v1.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v2.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "trn1 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\ntrn1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "trn1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.8h, v1.8h, v3.8h\ntrn1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\ntrn1 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.4s, v1.4s, v3.4s\ntrn1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v2.4s\ntrn1 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.4s, v1.4s, v5.4s\ntrn1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "trn1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn1 v2.4s, v2.4s, v6.4s\ntrn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v2.4s, v2.4s, v6.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 0, i32 4>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 0, i32 8>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 0, i32 16>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v1.2d, v1.2d, v3.2d\nzip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v1.2d, v1.2d, v5.2d\nzip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\nzip1 v0.2d, v0.2d, v3.2d\nzip1 v1.2d, v1.2d, v2.2d\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v6.2d\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v7.2d\nzip1 v3.2d, v3.2d, v6.2d\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "trn1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\nzip1 v4.2d, v4.2d, v17.2d\nzip1 v0.2d, v0.2d, v19.2d\nzip1 v1.2d, v1.2d, v18.2d\nzip1 v5.2d, v5.2d, v16.2d\nzip1 v2.2d, v2.2d, v21.2d\nzip1 v3.2d, v3.2d, v20.2d\nzip1 v6.2d, v6.2d, v23.2d\nzip1 v7.2d, v7.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\nzip1 v0.2d, v0.2d, v16.2d\nzip1 v1.2d, v1.2d, v17.2d\nzip1 v2.2d, v2.2d, v18.2d\nzip1 v3.2d, v3.2d, v19.2d\nzip1 v4.2d, v4.2d, v20.2d\nzip1 v5.2d, v5.2d, v21.2d\nzip1 v6.2d, v6.2d, v22.2d\nzip1 v7.2d, v7.2d, v23.2d\nret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp2 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "trn2 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 8,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[5]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nmov v0.d[1], v0.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 1, i32 5>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "trn2 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 7,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[9]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 1, i32 9>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "trn2 v2",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[1]\nmov v0.b[4], v1.b[1]\nret",
  "giasm": "trn2 v0.16b, v0.16b, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 1, i32 17>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "trn2 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 4,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[2], v0.b[5]\nmov v1.b[4], v0.b[3]\nmov v1.b[6], v0.b[7]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nmov v0.d[1], v0.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "trn2 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 4,
  "gisize": 12,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[2], v0.b[9]\nmov v1.b[4], v0.b[3]\nmov v1.b[6], v0.b[11]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "trn2 v4",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b2, v0.b[1]\nmov v2.b[2], v1.b[1]\nmov v2.b[4], v0.b[3]\nmov v2.b[6], v1.b[3]\nfmov d0, d2\nret",
  "giasm": "trn2 v0.16b, v0.16b, v1.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "trn2 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\ntrn2 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "trn2 v8",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "trn2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "trn2 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "trn2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "trn2 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 7,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[5]\nfmov d0, d1\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 1, i32 5>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nmov v0.h[2], v1.h[1]\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 1, i32 9>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nmov v0.h[2], v2.h[1]\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 1, i32 17>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "trn2 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\ntrn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "trn2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.8h, v1.8h, v3.8h\ntrn2 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\ntrn2 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 1, i32 5>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 1, i32 9>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 1, i32 17>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.4s, v1.4s, v3.4s\ntrn2 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\ntrn2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.4s, v1.4s, v5.4s\ntrn2 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "trn2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn2 v2.4s, v2.4s, v6.4s\ntrn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v2.4s, v2.4s, v6.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 1, i32 5>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 1, i32 9>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 1, i32 17>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v1.2d, v1.2d, v3.2d\nzip2 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v1.2d, v1.2d, v5.2d\nzip2 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\nzip2 v0.2d, v0.2d, v3.2d\nzip2 v1.2d, v1.2d, v2.2d\nret",
  "giasm": "ldp q2, q3, [sp]\nzip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v6.2d\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v7.2d\nzip2 v3.2d, v3.2d, v6.2d\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "trn2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\nzip2 v4.2d, v4.2d, v17.2d\nzip2 v0.2d, v0.2d, v19.2d\nzip2 v1.2d, v1.2d, v18.2d\nzip2 v5.2d, v5.2d, v16.2d\nzip2 v2.2d, v2.2d, v21.2d\nzip2 v3.2d, v3.2d, v20.2d\nzip2 v6.2d, v6.2d, v23.2d\nzip2 v7.2d, v7.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\nzip2 v0.2d, v0.2d, v16.2d\nzip2 v1.2d, v1.2d, v17.2d\nzip2 v2.2d, v2.2d, v18.2d\nzip2 v3.2d, v3.2d, v19.2d\nzip2 v4.2d, v4.2d, v20.2d\nzip2 v5.2d, v5.2d, v21.2d\nzip2 v6.2d, v6.2d, v22.2d\nzip2 v7.2d, v7.2d, v23.2d\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "trn2 v2",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\ntrn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v1.16b, { v0.16b, v1.16b }, v2.16b\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 1, i32 5>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v1.8h, v0.8h, v1.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 1, i32 9>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn2 v1.8h, v0.8h, v2.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 1, i32 17>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "trn2 v4",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\ntrn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "trn2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.8h, v1.8h, v3.8h\ntrn2 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\ntrn2 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 1, i32 5>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 1, i32 9>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 1, i32 17>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.4s, v1.4s, v3.4s\ntrn2 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\ntrn2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.4s, v1.4s, v5.4s\ntrn2 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "trn2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn2 v2.4s, v2.4s, v6.4s\ntrn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v2.4s, v2.4s, v6.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 1, i32 5>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 1, i32 9>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 1, i32 17>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v1.2d, v1.2d, v3.2d\nzip2 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v1.2d, v1.2d, v5.2d\nzip2 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\nzip2 v0.2d, v0.2d, v3.2d\nzip2 v1.2d, v1.2d, v2.2d\nret",
  "giasm": "ldp q2, q3, [sp]\nzip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v6.2d\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v7.2d\nzip2 v3.2d, v3.2d, v6.2d\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "trn2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\nzip2 v4.2d, v4.2d, v17.2d\nzip2 v0.2d, v0.2d, v19.2d\nzip2 v1.2d, v1.2d, v18.2d\nzip2 v5.2d, v5.2d, v16.2d\nzip2 v2.2d, v2.2d, v21.2d\nzip2 v3.2d, v3.2d, v20.2d\nzip2 v6.2d, v6.2d, v23.2d\nzip2 v7.2d, v7.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\nzip2 v0.2d, v0.2d, v16.2d\nzip2 v1.2d, v1.2d, v17.2d\nzip2 v2.2d, v2.2d, v18.2d\nzip2 v3.2d, v3.2d, v19.2d\nzip2 v4.2d, v4.2d, v20.2d\nzip2 v5.2d, v5.2d, v21.2d\nzip2 v6.2d, v6.2d, v22.2d\nzip2 v7.2d, v7.2d, v23.2d\nret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %9:_(s8), %10:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <2 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nrev16 v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev16 v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev16 v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev16 v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nrev32 v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov b1, v0.b[3]\nmov v1.b[2], v0.b[2]\nmov v1.b[4], v0.b[1]\nmov v1.b[6], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b1, v0.b[3]\nmov v1.b[2], v0.b[2]\nmov v1.b[4], v0.b[1]\nmov v1.b[6], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b1, v0.b[3]\nmov v1.b[2], v0.b[2]\nmov v1.b[4], v0.b[1]\nmov v1.b[6], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "reverse v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.8b, v0.8b\nret",
  "giasm": "rev64 v0.8b, v0.8b\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "reverse v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.8b, v0.8b\nret",
  "giasm": "rev64 v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "reverse v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.8b, v0.8b\nret",
  "giasm": "rev64 v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "reverse v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.16b, v0.16b\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.16b, v0.16b\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "reverse v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.16b, v0.16b\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.16b, v0.16b\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "reverse v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.16b, v1.16b\nrev64 v2.16b, v0.16b\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.16b, v1.16b\nrev64 v2.16b, v0.16b\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nrev32 v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.4h, v0.4h\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "reverse v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.2s, v0.2s\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 16,
  "gisize": 16,
  "extrasize": 0,
  "asm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "giasm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "giasm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "giasm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 29,
  "gisize": 29,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v4.16b, v4.16b, v4.16b, #8\nstp q1, q0, [x8, #224]\next v0.16b, v5.16b, v5.16b, #8\next v1.16b, v6.16b, v6.16b, #8\nstr q2, [x8, #208]\nldp q2, q5, [sp]\next v6.16b, v7.16b, v7.16b, #8\nstp q4, q3, [x8, #176]\nldp q3, q4, [sp, #32]\next v2.16b, v2.16b, v2.16b, #8\next v5.16b, v5.16b, v5.16b, #8\nstp q1, q0, [x8, #144]\next v0.16b, v3.16b, v3.16b, #8\nldp q1, q3, [sp, #64]\next v4.16b, v4.16b, v4.16b, #8\nstp q2, q6, [x8, #112]\nldp q2, q6, [sp, #96]\next v1.16b, v1.16b, v1.16b, #8\next v3.16b, v3.16b, v3.16b, #8\nstp q0, q5, [x8, #80]\next v2.16b, v2.16b, v2.16b, #8\next v0.16b, v6.16b, v6.16b, #8\nstp q1, q4, [x8, #48]\nstp q2, q3, [x8, #16]\nstr q0, [x8]\nret",
  "giasm": "ldp q17, q16, [sp, #96]\next v7.16b, v7.16b, v7.16b, #8\nldp q19, q18, [sp, #64]\next v6.16b, v6.16b, v6.16b, #8\nldp q21, q20, [sp, #32]\next v5.16b, v5.16b, v5.16b, #8\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v17.16b, v17.16b, #8\next v4.16b, v4.16b, v4.16b, #8\next v18.16b, v18.16b, v18.16b, #8\next v19.16b, v19.16b, v19.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v20.16b, v20.16b, v20.16b, #8\next v21.16b, v21.16b, v21.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nstp q6, q5, [x8, #144]\nstr q16, [x8]\nldp q22, q16, [sp]\nstp q17, q18, [x8, #16]\nstp q19, q20, [x8, #48]\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v22.16b, v22.16b, #8\nstp q4, q3, [x8, #176]\nstp q2, q1, [x8, #208]\nstr q0, [x8, #240]\nstp q21, q16, [x8, #80]\nstp q17, q7, [x8, #112]\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v1.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v1.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v1.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.4h, v0.4h\nret",
  "ll": "define <4 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "reverse v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <32 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.2s, v0.2s\nret",
  "ll": "define <2 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 16,
  "gisize": 16,
  "extrasize": 0,
  "asm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "giasm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "ll": "define <32 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "giasm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "ll": "define <16 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "giasm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "ll": "define <16 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 29,
  "gisize": 29,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v4.16b, v4.16b, v4.16b, #8\nstp q1, q0, [x8, #224]\next v0.16b, v5.16b, v5.16b, #8\next v1.16b, v6.16b, v6.16b, #8\nstr q2, [x8, #208]\nldp q2, q5, [sp]\next v6.16b, v7.16b, v7.16b, #8\nstp q4, q3, [x8, #176]\nldp q3, q4, [sp, #32]\next v2.16b, v2.16b, v2.16b, #8\next v5.16b, v5.16b, v5.16b, #8\nstp q1, q0, [x8, #144]\next v0.16b, v3.16b, v3.16b, #8\nldp q1, q3, [sp, #64]\next v4.16b, v4.16b, v4.16b, #8\nstp q2, q6, [x8, #112]\nldp q2, q6, [sp, #96]\next v1.16b, v1.16b, v1.16b, #8\next v3.16b, v3.16b, v3.16b, #8\nstp q0, q5, [x8, #80]\next v2.16b, v2.16b, v2.16b, #8\next v0.16b, v6.16b, v6.16b, #8\nstp q1, q4, [x8, #48]\nstp q2, q3, [x8, #16]\nstr q0, [x8]\nret",
  "giasm": "ldp q17, q16, [sp, #96]\next v7.16b, v7.16b, v7.16b, #8\nldp q19, q18, [sp, #64]\next v6.16b, v6.16b, v6.16b, #8\nldp q21, q20, [sp, #32]\next v5.16b, v5.16b, v5.16b, #8\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v17.16b, v17.16b, #8\next v4.16b, v4.16b, v4.16b, #8\next v18.16b, v18.16b, v18.16b, #8\next v19.16b, v19.16b, v19.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v20.16b, v20.16b, v20.16b, #8\next v21.16b, v21.16b, v21.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nstp q6, q5, [x8, #144]\nstr q16, [x8]\nldp q22, q16, [sp]\nstp q17, q18, [x8, #16]\nstp q19, q20, [x8, #48]\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v22.16b, v22.16b, #8\nstp q4, q3, [x8, #176]\nstp q2, q1, [x8, #208]\nstr q0, [x8, #240]\nstp q21, q16, [x8, #80]\nstp q17, q7, [x8, #112]\nret",
  "ll": "define <32 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i8>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %9:_(s8), %10:_(s8) = G_UNMERGE_VALUES %2:_(<2 x s8>) (in function: test)",
  "ll": "define <2 x i8> @test(<2 x i8> %a) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i8>",
  "variant": "splice2 v4",
  "codesize": 3,
  "thru": 3,
  "lat": 3,
  "sizelat": 3,
  "size": 1,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nadrp x8, .LCPI0_0\nldr d1, [x8, :lo12:.LCPI0_0]\nmov v0.d[1], v0.d[0]\ntbl v0.16b, { v0.16b }, v1.16b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 3 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i8>",
  "variant": "splice2 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.8b, v0.8b, v0.8b, #2\nret",
  "giasm": "ext v0.8b, v0.8b, v0.8b, #2\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i8>",
  "variant": "splice2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #2\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #2\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i8>",
  "variant": "splice2 v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #2\next v1.16b, v1.16b, v0.16b, #2\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #2\next v1.16b, v1.16b, v0.16b, #2\nmov v0.16b, v2.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i16>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i16>",
  "variant": "splice2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "giasm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i16>",
  "variant": "splice2 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #4\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #4\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i16>",
  "variant": "splice2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v0.16b, #4\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v0.16b, #4\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i16>",
  "variant": "splice2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v4.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v2.16b, #4\next v2.16b, v2.16b, v3.16b, #4\next v3.16b, v3.16b, v0.16b, #4\nmov v0.16b, v4.16b\nret",
  "giasm": "ext v4.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v2.16b, #4\next v2.16b, v2.16b, v3.16b, #4\next v3.16b, v3.16b, v0.16b, #4\nmov v0.16b, v4.16b\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i32>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<2 x i32> %a) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i32>",
  "variant": "splice2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i32>",
  "variant": "splice2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i32>",
  "variant": "splice2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v4.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v0.16b, #8\nmov v0.16b, v4.16b\nret",
  "giasm": "ext v4.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v0.16b, #8\nmov v0.16b, v4.16b\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i32>",
  "variant": "splice2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v16.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v4.16b, #8\next v4.16b, v4.16b, v5.16b, #8\next v5.16b, v5.16b, v6.16b, #8\next v6.16b, v6.16b, v7.16b, #8\next v7.16b, v7.16b, v0.16b, #8\nmov v0.16b, v16.16b\nret",
  "giasm": "ext v16.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v4.16b, #8\next v4.16b, v4.16b, v5.16b, #8\next v5.16b, v5.16b, v6.16b, #8\next v6.16b, v6.16b, v7.16b, #8\next v7.16b, v7.16b, v0.16b, #8\nmov v0.16b, v16.16b\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x i64>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<2 x i64> %a) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x i64>",
  "variant": "splice2 v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "mov v2.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "giasm": "mov v2.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x i64>",
  "variant": "splice2 v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "mov v4.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nret",
  "giasm": "mov v4.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x i64>",
  "variant": "splice2 v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v16.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nmov v4.16b, v5.16b\nmov v5.16b, v6.16b\nmov v6.16b, v7.16b\nmov v7.16b, v16.16b\nret",
  "giasm": "mov v16.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nmov v4.16b, v5.16b\nmov v5.16b, v6.16b\nmov v6.16b, v7.16b\nmov v7.16b, v16.16b\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x i64>",
  "variant": "splice2 v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nstp q1, q2, [x8]\nstp q3, q4, [x8, #32]\nstp q5, q6, [x8, #64]\nstp q16, q0, [x8, #224]\nldp q16, q0, [sp, #64]\nstp q0, q17, [x8, #192]\nldp q17, q0, [sp, #32]\nstp q0, q16, [x8, #160]\nldp q16, q0, [sp]\nstp q7, q16, [x8, #96]\nstp q0, q17, [x8, #128]\nret",
  "giasm": "stp q1, q2, [x8]\nldp q1, q2, [sp]\nstp q3, q4, [x8, #32]\nstp q5, q6, [x8, #64]\nstp q7, q1, [x8, #96]\nldp q1, q3, [sp, #32]\nstp q2, q1, [x8, #128]\nldp q1, q2, [sp, #64]\nstp q3, q1, [x8, #160]\nldp q1, q3, [sp, #96]\nstp q2, q1, [x8, #192]\nstp q3, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x half>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x half> @test(<2 x half> %a) {\n  %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x half>",
  "variant": "splice2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "giasm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "ll": "define <4 x half> @test(<4 x half> %a) {\n  %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x half>",
  "variant": "splice2 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #4\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #4\nret",
  "ll": "define <8 x half> @test(<8 x half> %a) {\n  %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x half>",
  "variant": "splice2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v0.16b, #4\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v0.16b, #4\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x half> @test(<16 x half> %a) {\n  %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x half>",
  "variant": "splice2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v4.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v2.16b, #4\next v2.16b, v2.16b, v3.16b, #4\next v3.16b, v3.16b, v0.16b, #4\nmov v0.16b, v4.16b\nret",
  "giasm": "ext v4.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v2.16b, #4\next v2.16b, v2.16b, v3.16b, #4\next v3.16b, v3.16b, v0.16b, #4\nmov v0.16b, v4.16b\nret",
  "ll": "define <32 x half> @test(<32 x half> %a) {\n  %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x float>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<2 x float> %a) {\n  %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x float>",
  "variant": "splice2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<4 x float> %a) {\n  %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x float>",
  "variant": "splice2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x float> @test(<8 x float> %a) {\n  %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x float>",
  "variant": "splice2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v4.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v0.16b, #8\nmov v0.16b, v4.16b\nret",
  "giasm": "ext v4.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v0.16b, #8\nmov v0.16b, v4.16b\nret",
  "ll": "define <16 x float> @test(<16 x float> %a) {\n  %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x float>",
  "variant": "splice2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v16.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v4.16b, #8\next v4.16b, v4.16b, v5.16b, #8\next v5.16b, v5.16b, v6.16b, #8\next v6.16b, v6.16b, v7.16b, #8\next v7.16b, v7.16b, v0.16b, #8\nmov v0.16b, v16.16b\nret",
  "giasm": "ext v16.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v4.16b, #8\next v4.16b, v4.16b, v5.16b, #8\next v5.16b, v5.16b, v6.16b, #8\next v6.16b, v6.16b, v7.16b, #8\next v7.16b, v7.16b, v0.16b, #8\nmov v0.16b, v16.16b\nret",
  "ll": "define <32 x float> @test(<32 x float> %a) {\n  %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<2 x double>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<2 x double> %a) {\n  %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> poison, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<4 x double>",
  "variant": "splice2 v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "mov v2.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "giasm": "mov v2.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<4 x double> %a) {\n  %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> poison, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<8 x double>",
  "variant": "splice2 v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "mov v4.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nret",
  "giasm": "mov v4.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<8 x double> %a) {\n  %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> poison, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<16 x double>",
  "variant": "splice2 v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v16.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nmov v4.16b, v5.16b\nmov v5.16b, v6.16b\nmov v6.16b, v7.16b\nmov v7.16b, v16.16b\nret",
  "giasm": "mov v16.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nmov v4.16b, v5.16b\nmov v5.16b, v6.16b\nmov v6.16b, v7.16b\nmov v7.16b, v16.16b\nret",
  "ll": "define <16 x double> @test(<16 x double> %a) {\n  %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> poison, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleu",
  "ty": "<32 x double>",
  "variant": "splice2 v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nstp q1, q2, [x8]\nstp q3, q4, [x8, #32]\nstp q5, q6, [x8, #64]\nstp q16, q0, [x8, #224]\nldp q16, q0, [sp, #64]\nstp q0, q17, [x8, #192]\nldp q17, q0, [sp, #32]\nstp q0, q16, [x8, #160]\nldp q16, q0, [sp]\nstp q7, q16, [x8, #96]\nstp q0, q17, [x8, #128]\nret",
  "giasm": "stp q1, q2, [x8]\nldp q1, q2, [sp]\nstp q3, q4, [x8, #32]\nstp q5, q6, [x8, #64]\nstp q7, q1, [x8, #96]\nldp q1, q3, [sp, #32]\nstp q2, q1, [x8, #128]\nldp q1, q2, [sp, #64]\nstp q3, q1, [x8, #160]\nldp q1, q3, [sp, #96]\nstp q2, q1, [x8, #192]\nstp q3, q0, [x8, #224]\nret",
  "ll": "define <32 x double> @test(<32 x double> %a) {\n  %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> poison, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %11:_(s8), %12:_(s8) = G_UNMERGE_VALUES %6:_(<2 x s8>) (in function: test)",
  "ll": "define <2 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 5,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "identity v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 6,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "mov w8, v0.s[1]\nmov w9, v1.s[1]\nmov v0.h[1], w8\nfmov w8, s1\nmov v0.h[2], w8\nmov v0.h[3], w9\nret",
  "ll": "define <4 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v0.8b\nret",
  "giasm": "ushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v0.8b\nret",
  "giasm": "mov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v0.8b\nret",
  "giasm": "mov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "identity v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "uzp1 v1.8b, v1.8b, v0.8b\nuzp1 v0.8b, v0.8b, v0.8b\nfmov w8, s1\nmov v0.s[1], w8\nret",
  "ll": "define <8 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "identity v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[1], v1.d[0]\nret",
  "giasm": "mov v0.d[1], v1.d[0]\nret",
  "ll": "define <16 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "identity v32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "ushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 4,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[1]\nfmov d0, d1\nret",
  "giasm": "umov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp1 v1.4h, v1.4h, v0.4h\nuzp1 v0.4h, v0.4h, v0.4h\nfmov w8, s1\nmov v0.s[1], w8\nret",
  "ll": "define <4 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "identity v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[1], v1.d[0]\nret",
  "giasm": "mov v0.d[1], v1.d[0]\nret",
  "ll": "define <8 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "identity v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "identity v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[1], v1.d[0]\nret",
  "giasm": "mov v0.d[1], v1.d[0]\nret",
  "ll": "define <4 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "identity v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "identity v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "identity v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "identity v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "identity v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "identity v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "identity v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 13,
  "gisize": 13,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nstp q1, q2, [x8, #16]\nstp q3, q4, [x8, #48]\nstp q5, q6, [x8, #80]\nstr q16, [x8, #240]\nldp q18, q16, [sp, #64]\nstr q0, [x8]\nstp q16, q17, [x8, #208]\nldp q17, q16, [sp, #32]\nstp q16, q18, [x8, #176]\nldp q18, q16, [sp]\nstp q7, q18, [x8, #112]\nstp q16, q17, [x8, #144]\nret",
  "giasm": "stp q0, q1, [x8]\nldp q0, q1, [sp]\nstp q2, q3, [x8, #32]\nstp q4, q5, [x8, #64]\nstp q7, q0, [x8, #112]\nldp q0, q2, [sp, #32]\nstr q6, [x8, #96]\nstp q1, q0, [x8, #144]\nldp q0, q1, [sp, #64]\nstp q2, q0, [x8, #176]\nldp q0, q2, [sp, #96]\nstp q1, q0, [x8, #208]\nstr q2, [x8, #240]\nret",
  "ll": "define <32 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 15,
  "gisize": 15,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\nstp q1, q2, [x8, #16]\nstp q3, q4, [x8, #48]\nstp q5, q6, [x8, #80]\nstr q16, [x8, #240]\nldp q18, q16, [sp, #80]\nstr q0, [x8]\nstp q16, q17, [x8, #208]\nldp q17, q16, [sp, #48]\nstp q16, q18, [x8, #176]\nldp q18, q16, [sp, #16]\nstp q7, q18, [x8, #112]\nstp q16, q17, [x8, #144]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nstp q0, q1, [x8]\nldp q0, q1, [sp, #16]\nstp q2, q3, [x8, #32]\nstp q4, q5, [x8, #64]\nstp q7, q0, [x8, #112]\nldp q0, q2, [sp, #48]\nstr q6, [x8, #96]\nstp q1, q0, [x8, #144]\nldp q0, q1, [sp, #80]\nstp q2, q0, [x8, #176]\nldp q0, q2, [sp, #112]\nstp q1, q0, [x8, #208]\nstr q2, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "mov v1.h[0], v0.h[0]\nmov v1.h[1], v0.h[1]\nfmov d0, d1\nret",
  "ll": "define <2 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "mov v1.h[0], v0.h[0]\nmov v1.h[1], v0.h[1]\nfmov d0, d1\nret",
  "ll": "define <2 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "mov v1.h[0], v0.h[0]\nmov v1.h[1], v0.h[1]\nfmov d0, d1\nret",
  "ll": "define <2 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "fmov w8, s1\nmov v0.s[1], w8\nret",
  "ll": "define <4 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "identity v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[1], v1.d[0]\nret",
  "giasm": "mov v0.d[1], v1.d[0]\nret",
  "ll": "define <8 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "identity v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "identity v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[1], v1.d[0]\nret",
  "giasm": "mov v0.d[1], v1.d[0]\nret",
  "ll": "define <4 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "identity v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "identity v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "identity v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <32 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "identity v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "identity v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <4 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "identity v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 0, i32 1, i32 2, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "identity v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <8 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "identity v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "identity v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <16 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "identity v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "identity v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 13,
  "gisize": 13,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nstp q1, q2, [x8, #16]\nstp q3, q4, [x8, #48]\nstp q5, q6, [x8, #80]\nstr q16, [x8, #240]\nldp q18, q16, [sp, #64]\nstr q0, [x8]\nstp q16, q17, [x8, #208]\nldp q17, q16, [sp, #32]\nstp q16, q18, [x8, #176]\nldp q18, q16, [sp]\nstp q7, q18, [x8, #112]\nstp q16, q17, [x8, #144]\nret",
  "giasm": "stp q0, q1, [x8]\nldp q0, q1, [sp]\nstp q2, q3, [x8, #32]\nstp q4, q5, [x8, #64]\nstp q7, q0, [x8, #112]\nldp q0, q2, [sp, #32]\nstr q6, [x8, #96]\nstp q1, q0, [x8, #144]\nldp q0, q1, [sp, #64]\nstp q2, q0, [x8, #176]\nldp q0, q2, [sp, #96]\nstp q1, q0, [x8, #208]\nstr q2, [x8, #240]\nret",
  "ll": "define <32 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "identity v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 15,
  "gisize": 15,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\nstp q1, q2, [x8, #16]\nstp q3, q4, [x8, #48]\nstp q5, q6, [x8, #80]\nstr q16, [x8, #240]\nldp q18, q16, [sp, #80]\nstr q0, [x8]\nstp q16, q17, [x8, #208]\nldp q17, q16, [sp, #48]\nstp q16, q18, [x8, #176]\nldp q18, q16, [sp, #16]\nstp q7, q18, [x8, #112]\nstp q16, q17, [x8, #144]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nstp q0, q1, [x8]\nldp q0, q1, [sp, #16]\nstp q2, q3, [x8, #32]\nstp q4, q5, [x8, #64]\nstp q7, q0, [x8, #112]\nldp q0, q2, [sp, #48]\nstr q6, [x8, #96]\nstp q1, q0, [x8, #144]\nldp q0, q1, [sp, #80]\nstp q2, q0, [x8, #176]\nldp q0, q2, [sp, #112]\nstp q1, q0, [x8, #208]\nstr q2, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "mov w8, v0.s[1]\nmov w9, v1.s[1]\nmov v0.b[1], w8\nmov v1.b[1], w9\nzip1 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 7,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v1.h[0]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v1.8b, v1.8b, v0.8b\nzip1 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[0]\nmov v0.b[4], v1.b[0]\nret",
  "giasm": "zip1 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[0]\nmov v0.b[4], v1.b[0]\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[0]\nmov v0.b[4], v2.b[0]\nret",
  "giasm": "zip1 v0.16b, v0.16b, v2.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v1.8b, v1.8b, v0.8b\nzip1 v0.8b, v0.8b, v1.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov b2, v0.b[0]\nmov v2.b[2], v1.b[0]\nmov v2.b[4], v0.b[1]\nmov v2.b[6], v1.b[1]\nfmov d0, d2\nret",
  "giasm": "zip1 v0.8b, v0.8b, v1.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b2, v0.b[0]\nmov v2.b[2], v1.b[0]\nmov v2.b[4], v0.b[1]\nmov v2.b[6], v1.b[1]\nfmov d0, d2\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[2], v2.b[0]\nmov v1.b[4], v0.b[1]\nmov v1.b[6], v2.b[1]\nfmov d0, d1\nret",
  "giasm": "zip1 v0.16b, v0.16b, v2.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "zip1 v0.8b, v0.8b, v1.8b\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v0.8b, v2.8b\nret",
  "giasm": "zip1 v0.16b, v0.16b, v2.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "zip1 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip1 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.16b, v0.16b, v2.16b\nret",
  "giasm": "zip1 v0.16b, v0.16b, v2.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip1 v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.16b, v0.16b, v2.16b\nzip2 v1.16b, v0.16b, v2.16b\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.16b, v0.16b, v2.16b\nzip2 v1.16b, v0.16b, v2.16b\nmov v0.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nuzp1 v1.4h, v1.4h, v0.4h\nzip1 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v1.h[0]\nret",
  "giasm": "zip1 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v1.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v2.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v4.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v4.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v4.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "zip1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.8h, v0.8h, v2.8h\nzip2 v1.8h, v0.8h, v2.8h\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.8h, v0.8h, v2.8h\nzip2 v1.8h, v0.8h, v2.8h\nmov v0.16b, v3.16b\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.8h, v0.8h, v4.8h\nzip2 v1.8h, v0.8h, v4.8h\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.8h, v0.8h, v4.8h\nzip2 v1.8h, v0.8h, v4.8h\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip1 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.8h, v0.8h, v4.8h\nzip2 v4.8h, v0.8h, v4.8h\nzip1 v2.8h, v1.8h, v5.8h\nzip2 v3.8h, v1.8h, v5.8h\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.8h, v0.8h, v4.8h\nzip2 v4.8h, v0.8h, v4.8h\nzip1 v2.8h, v1.8h, v5.8h\nzip2 v3.8h, v1.8h, v5.8h\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr d1, [sp]\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.4s, v0.4s, v2.4s\nzip2 v1.4s, v0.4s, v2.4s\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.4s, v0.4s, v2.4s\nzip2 v1.4s, v0.4s, v2.4s\nmov v0.16b, v3.16b\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.4s, v0.4s, v4.4s\nzip2 v1.4s, v0.4s, v4.4s\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.4s, v0.4s, v4.4s\nzip2 v1.4s, v0.4s, v4.4s\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v2.4s, v0.4s, v1.4s\nzip2 v1.4s, v0.4s, v1.4s\nmov v0.16b, v2.16b\nret",
  "giasm": "ldr q1, [sp]\nzip1 v2.4s, v0.4s, v1.4s\nzip2 v1.4s, v0.4s, v1.4s\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "zip1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.4s, v0.4s, v4.4s\nzip2 v4.4s, v0.4s, v4.4s\nzip1 v2.4s, v1.4s, v5.4s\nzip2 v3.4s, v1.4s, v5.4s\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.4s, v0.4s, v4.4s\nzip2 v4.4s, v0.4s, v4.4s\nzip1 v2.4s, v1.4s, v5.4s\nzip2 v3.4s, v1.4s, v5.4s\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q2, q3, [sp]\nzip1 v4.4s, v0.4s, v2.4s\nzip2 v5.4s, v0.4s, v2.4s\nzip1 v2.4s, v1.4s, v3.4s\nzip2 v3.4s, v1.4s, v3.4s\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v4.4s, v0.4s, v2.4s\nzip2 v5.4s, v0.4s, v2.4s\nzip1 v2.4s, v1.4s, v3.4s\nzip2 v3.4s, v1.4s, v3.4s\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip1 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.4s, v0.4s, v4.4s\nzip2 v17.4s, v0.4s, v4.4s\nzip1 v18.4s, v1.4s, v5.4s\nzip2 v19.4s, v1.4s, v5.4s\nzip1 v4.4s, v2.4s, v6.4s\nzip2 v5.4s, v2.4s, v6.4s\nzip1 v6.4s, v3.4s, v7.4s\nzip2 v7.4s, v3.4s, v7.4s\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.4s, v0.4s, v4.4s\nzip2 v17.4s, v0.4s, v4.4s\nzip1 v18.4s, v1.4s, v5.4s\nzip2 v19.4s, v1.4s, v5.4s\nzip1 v4.4s, v2.4s, v6.4s\nzip2 v5.4s, v2.4s, v6.4s\nzip1 v6.4s, v3.4s, v7.4s\nzip2 v7.4s, v3.4s, v7.4s\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.2d, v0.2d, v2.2d\nzip2 v1.2d, v0.2d, v2.2d\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.2d, v0.2d, v2.2d\nzip2 v1.2d, v0.2d, v2.2d\nmov v0.16b, v3.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v0.2d, v4.2d\nzip2 v1.2d, v0.2d, v4.2d\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.2d, v0.2d, v4.2d\nzip2 v1.2d, v0.2d, v4.2d\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nret",
  "giasm": "ldr q1, [sp]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.2d, v0.2d, v4.2d\nzip2 v4.2d, v0.2d, v4.2d\nzip1 v2.2d, v1.2d, v5.2d\nzip2 v3.2d, v1.2d, v5.2d\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.2d, v0.2d, v4.2d\nzip2 v4.2d, v0.2d, v4.2d\nzip1 v2.2d, v1.2d, v5.2d\nzip2 v3.2d, v1.2d, v5.2d\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q2, q3, [sp]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 7,
  "gisize": 7,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q2, q3, [sp, #144]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q2, q3, [sp, #144]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "zip1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q6, q7, [sp, #176]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q6, q7, [sp, #176]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip1 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 32,
  "gisize": 32,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #240]\nzip2 v18.2d, v7.2d, v16.2d\nzip1 v7.2d, v7.2d, v16.2d\nzip2 v19.2d, v6.2d, v17.2d\nzip1 v6.2d, v6.2d, v17.2d\nldp q17, q16, [sp, #208]\nzip2 v20.2d, v5.2d, v16.2d\nstp q7, q18, [x8, #224]\nzip1 v5.2d, v5.2d, v16.2d\nldr q7, [sp, #192]\nzip2 v16.2d, v4.2d, v17.2d\nzip1 v4.2d, v4.2d, v17.2d\nstp q6, q19, [x8, #192]\nldr q6, [sp, #176]\nzip2 v17.2d, v3.2d, v7.2d\nzip1 v3.2d, v3.2d, v7.2d\nstp q5, q20, [x8, #160]\nldr q5, [sp, #160]\nzip2 v7.2d, v2.2d, v6.2d\nstp q4, q16, [x8, #128]\nldr q4, [sp, #144]\nzip1 v2.2d, v2.2d, v6.2d\nzip2 v6.2d, v1.2d, v5.2d\nzip1 v1.2d, v1.2d, v5.2d\nstp q3, q17, [x8, #96]\nzip2 v3.2d, v0.2d, v4.2d\nzip1 v0.2d, v0.2d, v4.2d\nstp q2, q7, [x8, #64]\nstp q1, q6, [x8, #32]\nstp q0, q3, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #144]\nzip1 v18.2d, v0.2d, v16.2d\nzip2 v0.2d, v0.2d, v16.2d\nzip1 v19.2d, v1.2d, v17.2d\nzip2 v1.2d, v1.2d, v17.2d\nldp q16, q17, [sp, #176]\nzip1 v20.2d, v2.2d, v16.2d\nstp q18, q0, [x8]\nzip2 v2.2d, v2.2d, v16.2d\nldr q0, [sp, #208]\nzip1 v16.2d, v3.2d, v17.2d\nzip2 v3.2d, v3.2d, v17.2d\nstp q19, q1, [x8, #32]\nldr q1, [sp, #224]\nzip1 v17.2d, v4.2d, v0.2d\nzip2 v0.2d, v4.2d, v0.2d\nstp q20, q2, [x8, #64]\nldr q2, [sp, #240]\nzip1 v4.2d, v5.2d, v1.2d\nstp q16, q3, [x8, #96]\nldr q3, [sp, #256]\nzip2 v1.2d, v5.2d, v1.2d\nzip1 v5.2d, v6.2d, v2.2d\nzip2 v2.2d, v6.2d, v2.2d\nstp q17, q0, [x8, #128]\nzip1 v0.2d, v7.2d, v3.2d\nzip2 v3.2d, v7.2d, v3.2d\nstp q4, q1, [x8, #160]\nstp q5, q2, [x8, #192]\nstp q0, q3, [x8, #224]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v1.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v2.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v4.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v4.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v4.4h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "zip1 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "zip1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.8h, v0.8h, v2.8h\nzip2 v1.8h, v0.8h, v2.8h\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.8h, v0.8h, v2.8h\nzip2 v1.8h, v0.8h, v2.8h\nmov v0.16b, v3.16b\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.8h, v0.8h, v4.8h\nzip2 v1.8h, v0.8h, v4.8h\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.8h, v0.8h, v4.8h\nzip2 v1.8h, v0.8h, v4.8h\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip1 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.8h, v0.8h, v4.8h\nzip2 v4.8h, v0.8h, v4.8h\nzip1 v2.8h, v1.8h, v5.8h\nzip2 v3.8h, v1.8h, v5.8h\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.8h, v0.8h, v4.8h\nzip2 v4.8h, v0.8h, v4.8h\nzip1 v2.8h, v1.8h, v5.8h\nzip2 v3.8h, v1.8h, v5.8h\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <32 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr d1, [sp]\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v3.4s, v0.4s, v2.4s\nzip2 v1.4s, v0.4s, v2.4s\nmov v0.16b, v3.16b\nret",
  "giasm": "zip1 v3.4s, v0.4s, v2.4s\nzip2 v1.4s, v0.4s, v2.4s\nmov v0.16b, v3.16b\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.4s, v0.4s, v4.4s\nzip2 v1.4s, v0.4s, v4.4s\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.4s, v0.4s, v4.4s\nzip2 v1.4s, v0.4s, v4.4s\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v2.4s, v0.4s, v1.4s\nzip2 v1.4s, v0.4s, v1.4s\nmov v0.16b, v2.16b\nret",
  "giasm": "ldr q1, [sp]\nzip1 v2.4s, v0.4s, v1.4s\nzip2 v1.4s, v0.4s, v1.4s\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "zip1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.4s, v0.4s, v4.4s\nzip2 v4.4s, v0.4s, v4.4s\nzip1 v2.4s, v1.4s, v5.4s\nzip2 v3.4s, v1.4s, v5.4s\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.4s, v0.4s, v4.4s\nzip2 v4.4s, v0.4s, v4.4s\nzip1 v2.4s, v1.4s, v5.4s\nzip2 v3.4s, v1.4s, v5.4s\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <16 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q2, q3, [sp]\nzip1 v4.4s, v0.4s, v2.4s\nzip2 v5.4s, v0.4s, v2.4s\nzip1 v2.4s, v1.4s, v3.4s\nzip2 v3.4s, v1.4s, v3.4s\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v4.4s, v0.4s, v2.4s\nzip2 v5.4s, v0.4s, v2.4s\nzip1 v2.4s, v1.4s, v3.4s\nzip2 v3.4s, v1.4s, v3.4s\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <16 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip1 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.4s, v0.4s, v4.4s\nzip2 v17.4s, v0.4s, v4.4s\nzip1 v18.4s, v1.4s, v5.4s\nzip2 v19.4s, v1.4s, v5.4s\nzip1 v4.4s, v2.4s, v6.4s\nzip2 v5.4s, v2.4s, v6.4s\nzip1 v6.4s, v3.4s, v7.4s\nzip2 v7.4s, v3.4s, v7.4s\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.4s, v0.4s, v4.4s\nzip2 v17.4s, v0.4s, v4.4s\nzip1 v18.4s, v1.4s, v5.4s\nzip2 v19.4s, v1.4s, v5.4s\nzip1 v4.4s, v2.4s, v6.4s\nzip2 v5.4s, v2.4s, v6.4s\nzip1 v6.4s, v3.4s, v7.4s\nzip2 v7.4s, v3.4s, v7.4s\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <32 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v1.2d, v0.2d, v2.2d\nzip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v3.2d, v0.2d, v2.2d\nzip2 v1.2d, v0.2d, v2.2d\nmov v0.16b, v3.16b\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 0, i32 4, i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v0.2d, v4.2d\nzip2 v1.2d, v0.2d, v4.2d\nmov v0.16b, v2.16b\nret",
  "giasm": "zip1 v2.2d, v0.2d, v4.2d\nzip2 v1.2d, v0.2d, v4.2d\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 0, i32 8, i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nret",
  "giasm": "ldr q1, [sp]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 0, i32 16, i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v2.2d, v0.2d, v1.2d\nzip2 v1.2d, v0.2d, v1.2d\nmov v0.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 0, i32 32, i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v6.2d, v0.2d, v4.2d\nzip2 v4.2d, v0.2d, v4.2d\nzip1 v2.2d, v1.2d, v5.2d\nzip2 v3.2d, v1.2d, v5.2d\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "zip1 v6.2d, v0.2d, v4.2d\nzip2 v4.2d, v0.2d, v4.2d\nzip1 v2.2d, v1.2d, v5.2d\nzip2 v3.2d, v1.2d, v5.2d\nmov v0.16b, v6.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q2, q3, [sp]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <8 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 7,
  "gisize": 7,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q2, q3, [sp, #144]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q2, q3, [sp, #144]\nzip1 v4.2d, v0.2d, v2.2d\nzip2 v5.2d, v0.2d, v2.2d\nzip1 v2.2d, v1.2d, v3.2d\nzip2 v3.2d, v1.2d, v3.2d\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "zip1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <16 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 4, i32 20, i32 5, i32 21, i32 6, i32 22, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q6, q7, [sp, #176]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q6, q7, [sp, #176]\nzip1 v16.2d, v0.2d, v4.2d\nzip2 v17.2d, v0.2d, v4.2d\nzip1 v18.2d, v1.2d, v5.2d\nzip2 v19.2d, v1.2d, v5.2d\nzip1 v4.2d, v2.2d, v6.2d\nzip2 v5.2d, v2.2d, v6.2d\nzip1 v6.2d, v3.2d, v7.2d\nzip2 v7.2d, v3.2d, v7.2d\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip1 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 32,
  "gisize": 32,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #240]\nzip2 v18.2d, v7.2d, v16.2d\nzip1 v7.2d, v7.2d, v16.2d\nzip2 v19.2d, v6.2d, v17.2d\nzip1 v6.2d, v6.2d, v17.2d\nldp q17, q16, [sp, #208]\nzip2 v20.2d, v5.2d, v16.2d\nstp q7, q18, [x8, #224]\nzip1 v5.2d, v5.2d, v16.2d\nldr q7, [sp, #192]\nzip2 v16.2d, v4.2d, v17.2d\nzip1 v4.2d, v4.2d, v17.2d\nstp q6, q19, [x8, #192]\nldr q6, [sp, #176]\nzip2 v17.2d, v3.2d, v7.2d\nzip1 v3.2d, v3.2d, v7.2d\nstp q5, q20, [x8, #160]\nldr q5, [sp, #160]\nzip2 v7.2d, v2.2d, v6.2d\nstp q4, q16, [x8, #128]\nldr q4, [sp, #144]\nzip1 v2.2d, v2.2d, v6.2d\nzip2 v6.2d, v1.2d, v5.2d\nzip1 v1.2d, v1.2d, v5.2d\nstp q3, q17, [x8, #96]\nzip2 v3.2d, v0.2d, v4.2d\nzip1 v0.2d, v0.2d, v4.2d\nstp q2, q7, [x8, #64]\nstp q1, q6, [x8, #32]\nstp q0, q3, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #144]\nzip1 v18.2d, v0.2d, v16.2d\nzip2 v0.2d, v0.2d, v16.2d\nzip1 v19.2d, v1.2d, v17.2d\nzip2 v1.2d, v1.2d, v17.2d\nldp q16, q17, [sp, #176]\nzip1 v20.2d, v2.2d, v16.2d\nstp q18, q0, [x8]\nzip2 v2.2d, v2.2d, v16.2d\nldr q0, [sp, #208]\nzip1 v16.2d, v3.2d, v17.2d\nzip2 v3.2d, v3.2d, v17.2d\nstp q19, q1, [x8, #32]\nldr q1, [sp, #224]\nzip1 v17.2d, v4.2d, v0.2d\nzip2 v0.2d, v4.2d, v0.2d\nstp q20, q2, [x8, #64]\nldr q2, [sp, #240]\nzip1 v4.2d, v5.2d, v1.2d\nstp q16, q3, [x8, #96]\nldr q3, [sp, #256]\nzip2 v1.2d, v5.2d, v1.2d\nzip1 v5.2d, v6.2d, v2.2d\nzip2 v2.2d, v6.2d, v2.2d\nstp q17, q0, [x8, #128]\nzip1 v0.2d, v7.2d, v3.2d\nzip2 v3.2d, v7.2d, v3.2d\nstp q4, q1, [x8, #160]\nstp q5, q2, [x8, #192]\nstp q0, q3, [x8, #224]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 0, i32 32, i32 1, i32 33, i32 2, i32 34, i32 3, i32 35, i32 4, i32 36, i32 5, i32 37, i32 6, i32 38, i32 7, i32 39, i32 8, i32 40, i32 9, i32 41, i32 10, i32 42, i32 11, i32 43, i32 12, i32 44, i32 13, i32 45, i32 14, i32 46, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "mov w8, v0.s[1]\nmov w9, v1.s[1]\nmov v0.b[1], w8\nmov v1.b[1], w9\ntrn2 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov h0, v0.h[2]\nmov v0.h[2], v1.h[2]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nadrp x8, .LCPI0_0\nuzp1 v1.8b, v1.8b, v0.8b\nmov v0.d[1], v1.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 2, i32 6>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[4]\nmov v0.b[4], v1.b[4]\nret",
  "giasm": "zip2 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 4, i32 12>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[8]\nmov v0.b[4], v1.b[8]\nret",
  "giasm": "zip2 v0.16b, v0.16b, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 8, i32 24>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v1.b[0]\nmov v0.b[4], v3.b[0]\nret",
  "giasm": "zip1 v0.16b, v1.16b, v3.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 16, i32 48>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 16, i32 48>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 7,
  "extrasize": 0,
  "asm": "zip2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nadrp x8, .LCPI0_0\nuzp1 v1.8b, v1.8b, v0.8b\nmov v0.d[1], v1.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov b2, v0.b[4]\nmov v2.b[2], v1.b[4]\nmov v2.b[4], v0.b[5]\nmov v2.b[6], v1.b[5]\nfmov d0, d2\nret",
  "giasm": "zip2 v0.8b, v0.8b, v1.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b2, v0.b[8]\nmov v2.b[2], v1.b[8]\nmov v2.b[4], v0.b[9]\nmov v2.b[6], v1.b[9]\nfmov d0, d2\nret",
  "giasm": "zip2 v0.16b, v0.16b, v1.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b0, v1.b[0]\nmov v0.b[2], v3.b[0]\nmov v0.b[4], v1.b[1]\nmov v0.b[6], v3.b[1]\nret",
  "giasm": "zip1 v0.16b, v1.16b, v3.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "zip2 v0.8b, v0.8b, v1.8b\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nzip1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "zip2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8b, v1.8b, v3.8b\nret",
  "giasm": "zip1 v0.16b, v1.16b, v3.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "zip2 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "zip2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip2 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.16b, v1.16b, v3.16b\nret",
  "giasm": "zip1 v0.16b, v1.16b, v3.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "zip2 v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.16b, v1.16b, v3.16b\nzip2 v1.16b, v1.16b, v3.16b\nret",
  "giasm": "zip1 v0.16b, v1.16b, v3.16b\nzip2 v1.16b, v1.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nuzp1 v1.4h, v1.4h, v0.4h\ntrn2 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h0, v0.h[2]\nmov v0.h[2], v1.h[2]\nret",
  "giasm": "zip2 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 2, i32 6>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[4]\nmov v0.h[2], v1.h[4]\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 4, i32 12>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v1.h[0]\nmov v0.h[2], v3.h[0]\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 8, i32 24>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v2.h[0]\nmov v0.h[2], v6.h[0]\nret",
  "giasm": "zip1 v0.8h, v2.8h, v6.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 16, i32 48>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 16, i32 48>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nzip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v1.4h, v3.4h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v2.4h, v6.4h\nret",
  "giasm": "zip1 v0.8h, v2.8h, v6.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v2.8h, v6.8h\nret",
  "giasm": "zip1 v0.8h, v2.8h, v6.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "zip2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v1.8h, v3.8h\nzip2 v1.8h, v1.8h, v3.8h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nzip2 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v2.8h, v6.8h\nzip2 v1.8h, v2.8h, v6.8h\nret",
  "giasm": "zip1 v0.8h, v2.8h, v6.8h\nzip2 v1.8h, v2.8h, v6.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "zip2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.8h, v3.8h, v7.8h\nzip1 v0.8h, v2.8h, v6.8h\nzip2 v1.8h, v2.8h, v6.8h\nzip2 v3.8h, v3.8h, v7.8h\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.8h, v2.8h, v6.8h\nzip2 v1.8h, v2.8h, v6.8h\nzip1 v2.8h, v3.8h, v7.8h\nzip2 v3.8h, v3.8h, v7.8h\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 2, i32 6>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v1.2s, v3.2s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 4, i32 12>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v2.2s, v6.2s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 8, i32 24>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr d0, [sp, #64]\nzip1 v0.2s, v4.2s, v0.2s\nret",
  "giasm": "ldr q0, [sp, #64]\nzip1 v0.4s, v4.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 16, i32 48>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 16, i32 48>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q0, [sp, #64]\nzip1 v0.4s, v4.4s, v0.4s\nret",
  "giasm": "ldr q0, [sp, #64]\nzip1 v0.4s, v4.4s, v0.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v1.4s, v3.4s\nzip2 v1.4s, v1.4s, v3.4s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nzip2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp, #64]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nret",
  "giasm": "ldr q1, [sp, #64]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "zip2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.4s, v3.4s, v7.4s\nzip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nzip2 v3.4s, v3.4s, v7.4s\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nzip1 v2.4s, v3.4s, v7.4s\nzip2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nzip1 v2.4s, v5.4s, v3.4s\nzip2 v3.4s, v5.4s, v3.4s\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nzip1 v2.4s, v5.4s, v3.4s\nzip2 v3.4s, v5.4s, v3.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "zip2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nzip1 v2.4s, v5.4s, v3.4s\nzip2 v3.4s, v5.4s, v3.4s\nzip1 v4.4s, v6.4s, v16.4s\nzip2 v5.4s, v6.4s, v16.4s\nzip1 v6.4s, v7.4s, v17.4s\nzip2 v7.4s, v7.4s, v17.4s\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nzip1 v2.4s, v5.4s, v3.4s\nzip2 v3.4s, v5.4s, v3.4s\nzip1 v4.4s, v6.4s, v16.4s\nzip2 v5.4s, v6.4s, v16.4s\nzip1 v6.4s, v7.4s, v17.4s\nzip2 v7.4s, v7.4s, v17.4s\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v1.2d, v3.2d\nret",
  "giasm": "zip1 v0.2d, v1.2d, v3.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 2, i32 6>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v2.2d, v6.2d\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 4, i32 12>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q0, [sp, #64]\nzip1 v0.2d, v4.2d, v0.2d\nret",
  "giasm": "ldr q0, [sp, #64]\nzip1 v0.2d, v4.2d, v0.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 8, i32 24>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q0, [sp, #272]\nldr q1, [sp, #16]\nzip1 v0.2d, v1.2d, v0.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q0, [sp, #16]\nldr q1, [sp, #272]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 16, i32 48>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 16, i32 48>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v1.2d, v3.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "giasm": "zip1 v0.2d, v1.2d, v3.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #272]\nldr q2, [sp, #16]\nzip1 v0.2d, v2.2d, v1.2d\nzip2 v1.2d, v2.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #16]\nldr q2, [sp, #272]\nzip1 v0.2d, v1.2d, v2.2d\nzip2 v1.2d, v1.2d, v2.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.2d, v3.2d, v7.2d\nzip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nzip1 v2.2d, v3.2d, v7.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q1, q4, [sp, #16]\nldp q2, q3, [sp, #272]\nzip1 v0.2d, v1.2d, v2.2d\nzip2 v1.2d, v1.2d, v2.2d\nzip1 v2.2d, v4.2d, v3.2d\nzip2 v3.2d, v4.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q1, q4, [sp, #272]\nldp q2, q3, [sp, #16]\nzip1 v0.2d, v2.2d, v1.2d\nzip2 v1.2d, v2.2d, v1.2d\nzip1 v2.2d, v3.2d, v4.2d\nzip2 v3.2d, v3.2d, v4.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "zip2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nzip1 v4.2d, v6.2d, v16.2d\nzip2 v5.2d, v6.2d, v16.2d\nzip1 v6.2d, v7.2d, v17.2d\nzip2 v7.2d, v7.2d, v17.2d\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nzip1 v4.2d, v6.2d, v16.2d\nzip2 v5.2d, v6.2d, v16.2d\nzip1 v6.2d, v7.2d, v17.2d\nzip2 v7.2d, v7.2d, v17.2d\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q1, q3, [sp, #272]\nldp q2, q4, [sp, #16]\nldp q5, q7, [sp, #304]\nldp q6, q16, [sp, #48]\nzip1 v0.2d, v2.2d, v1.2d\nzip2 v1.2d, v2.2d, v1.2d\nzip1 v2.2d, v4.2d, v3.2d\nzip2 v3.2d, v4.2d, v3.2d\nzip1 v4.2d, v6.2d, v5.2d\nzip2 v5.2d, v6.2d, v5.2d\nzip1 v6.2d, v16.2d, v7.2d\nzip2 v7.2d, v16.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q1, q4, [sp, #272]\nldp q2, q3, [sp, #16]\nldp q5, q7, [sp, #48]\nldp q6, q16, [sp, #304]\nzip1 v0.2d, v2.2d, v1.2d\nzip2 v1.2d, v2.2d, v1.2d\nzip1 v2.2d, v3.2d, v4.2d\nzip2 v3.2d, v3.2d, v4.2d\nzip1 v4.2d, v5.2d, v6.2d\nzip2 v5.2d, v5.2d, v6.2d\nzip1 v6.2d, v7.2d, v16.2d\nzip2 v7.2d, v7.2d, v16.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "zip2 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 38,
  "gisize": 38,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q3, q0, [sp, #112]\nldp q2, q1, [sp, #368]\nldp q7, q6, [sp, #336]\nzip2 v4.2d, v0.2d, v1.2d\nzip1 v0.2d, v0.2d, v1.2d\nzip2 v5.2d, v3.2d, v2.2d\nzip1 v2.2d, v3.2d, v2.2d\nldp q3, q1, [sp, #80]\nzip2 v16.2d, v1.2d, v6.2d\nzip1 v1.2d, v1.2d, v6.2d\nstp q5, q0, [x8, #208]\nzip2 v0.2d, v3.2d, v7.2d\nldp q6, q5, [sp, #304]\nstr q4, [x8, #240]\nldr q4, [sp, #64]\nzip1 v3.2d, v3.2d, v7.2d\nstr q2, [x8, #192]\nldr q2, [sp, #48]\nzip2 v7.2d, v4.2d, v5.2d\nzip1 v4.2d, v4.2d, v5.2d\nstr q16, [x8, #176]\nstp q0, q1, [x8, #144]\nzip2 v1.2d, v2.2d, v6.2d\nzip1 v2.2d, v2.2d, v6.2d\nldp q5, q0, [sp, #272]\nldr q16, [sp, #32]\nstr q3, [x8, #128]\nldr q3, [sp, #16]\nstp q4, q7, [x8, #96]\nzip2 v6.2d, v16.2d, v0.2d\nzip1 v0.2d, v16.2d, v0.2d\nzip2 v4.2d, v3.2d, v5.2d\nstp q2, q1, [x8, #64]\nzip1 v1.2d, v3.2d, v5.2d\nstp q0, q6, [x8, #32]\nstp q1, q4, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q0, q3, [sp, #272]\nldp q1, q2, [sp, #16]\nldp q6, q7, [sp, #48]\nzip1 v4.2d, v1.2d, v0.2d\nzip2 v0.2d, v1.2d, v0.2d\nzip1 v5.2d, v2.2d, v3.2d\nzip2 v2.2d, v2.2d, v3.2d\nldp q1, q3, [sp, #304]\nzip1 v16.2d, v6.2d, v1.2d\nzip2 v1.2d, v6.2d, v1.2d\nstp q0, q5, [x8, #16]\nzip1 v0.2d, v7.2d, v3.2d\nldp q5, q6, [sp, #80]\nstr q4, [x8]\nldr q4, [sp, #336]\nzip2 v3.2d, v7.2d, v3.2d\nstr q2, [x8, #48]\nldr q2, [sp, #352]\nzip1 v7.2d, v5.2d, v4.2d\nzip2 v4.2d, v5.2d, v4.2d\nstr q16, [x8, #64]\nstp q1, q0, [x8, #80]\nzip1 v1.2d, v6.2d, v2.2d\nzip2 v2.2d, v6.2d, v2.2d\nldp q0, q5, [sp, #112]\nldr q16, [sp, #368]\nstr q3, [x8, #112]\nldr q3, [sp, #384]\nstp q7, q4, [x8, #128]\nzip1 v6.2d, v0.2d, v16.2d\nzip2 v0.2d, v0.2d, v16.2d\nzip1 v4.2d, v5.2d, v3.2d\nstp q1, q2, [x8, #160]\nzip2 v1.2d, v5.2d, v3.2d\nstp q6, q0, [x8, #192]\nstp q4, q1, [x8, #224]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 1,
  "extrasize": 0,
  "asm": "dup v1.4h, v1.h[2]\ndup v0.4h, v0.h[2]\nzip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 2, i32 6>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ext v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nzip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip2 v1.8h, v0.8h, v1.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 4, i32 12>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v1.4h, v3.4h\nret",
  "giasm": "zip1 v1.8h, v1.8h, v3.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 8, i32 24>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v2.4h, v6.4h\nret",
  "giasm": "zip1 v1.8h, v2.8h, v6.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 16, i32 48>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 16, i32 48>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nzip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v1.4h, v3.4h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v2.4h, v6.4h\nret",
  "giasm": "zip1 v0.8h, v2.8h, v6.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "zip2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v2.8h, v6.8h\nret",
  "giasm": "zip1 v0.8h, v2.8h, v6.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "zip2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v1.8h, v3.8h\nzip2 v1.8h, v1.8h, v3.8h\nret",
  "giasm": "zip1 v0.8h, v1.8h, v3.8h\nzip2 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.8h, v2.8h, v6.8h\nzip2 v1.8h, v2.8h, v6.8h\nret",
  "giasm": "zip1 v0.8h, v2.8h, v6.8h\nzip2 v1.8h, v2.8h, v6.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "zip2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.8h, v3.8h, v7.8h\nzip1 v0.8h, v2.8h, v6.8h\nzip2 v1.8h, v2.8h, v6.8h\nzip2 v3.8h, v3.8h, v7.8h\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.8h, v2.8h, v6.8h\nzip2 v1.8h, v2.8h, v6.8h\nzip1 v2.8h, v3.8h, v7.8h\nzip2 v3.8h, v3.8h, v7.8h\nret",
  "ll": "define <32 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 2, i32 6>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v1.2s, v3.2s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 4, i32 12>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v2.2s, v6.2s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 8, i32 24>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr d0, [sp, #64]\nzip1 v0.2s, v4.2s, v0.2s\nret",
  "giasm": "ldr q0, [sp, #64]\nzip1 v0.4s, v4.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 16, i32 48>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 16, i32 48>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "zip2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q0, [sp, #64]\nzip1 v0.4s, v4.4s, v0.4s\nret",
  "giasm": "ldr q0, [sp, #64]\nzip1 v0.4s, v4.4s, v0.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v1.4s, v3.4s\nzip2 v1.4s, v1.4s, v3.4s\nret",
  "giasm": "zip1 v0.4s, v1.4s, v3.4s\nzip2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp, #64]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nret",
  "giasm": "ldr q1, [sp, #64]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "zip2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.4s, v3.4s, v7.4s\nzip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nzip2 v3.4s, v3.4s, v7.4s\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.4s, v2.4s, v6.4s\nzip2 v1.4s, v2.4s, v6.4s\nzip1 v2.4s, v3.4s, v7.4s\nzip2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nzip1 v2.4s, v5.4s, v3.4s\nzip2 v3.4s, v5.4s, v3.4s\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nzip1 v2.4s, v5.4s, v3.4s\nzip2 v3.4s, v5.4s, v3.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "zip2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nzip1 v2.4s, v5.4s, v3.4s\nzip2 v3.4s, v5.4s, v3.4s\nzip1 v4.4s, v6.4s, v16.4s\nzip2 v5.4s, v6.4s, v16.4s\nzip1 v6.4s, v7.4s, v17.4s\nzip2 v7.4s, v7.4s, v17.4s\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.4s, v4.4s, v1.4s\nzip2 v1.4s, v4.4s, v1.4s\nzip1 v2.4s, v5.4s, v3.4s\nzip2 v3.4s, v5.4s, v3.4s\nzip1 v4.4s, v6.4s, v16.4s\nzip2 v5.4s, v6.4s, v16.4s\nzip1 v6.4s, v7.4s, v17.4s\nzip2 v7.4s, v7.4s, v17.4s\nret",
  "ll": "define <32 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v1.2d, v3.2d\nret",
  "giasm": "zip1 v0.2d, v1.2d, v3.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 2, i32 6>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v2.2d, v6.2d\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 4, i32 12>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 4, i32 12>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q0, [sp, #64]\nzip1 v0.2d, v4.2d, v0.2d\nret",
  "giasm": "ldr q0, [sp, #64]\nzip1 v0.2d, v4.2d, v0.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 8, i32 24>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 8, i32 24>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q0, [sp, #272]\nldr q1, [sp, #16]\nzip1 v0.2d, v1.2d, v0.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q0, [sp, #16]\nldr q1, [sp, #272]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 16, i32 48>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 16, i32 48>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v1.2d, v3.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "giasm": "zip1 v0.2d, v1.2d, v3.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 2, i32 6, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 4, i32 12, i32 5, i32 13>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldr q1, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 8, i32 24, i32 9, i32 25>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #272]\nldr q2, [sp, #16]\nzip1 v0.2d, v2.2d, v1.2d\nzip2 v1.2d, v2.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #16]\nldr q2, [sp, #272]\nzip1 v0.2d, v1.2d, v2.2d\nzip2 v1.2d, v1.2d, v2.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 16, i32 48, i32 17, i32 49>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v4.2d, v3.2d, v7.2d\nzip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nmov v2.16b, v4.16b\nret",
  "giasm": "zip1 v0.2d, v2.2d, v6.2d\nzip2 v1.2d, v2.2d, v6.2d\nzip1 v2.2d, v3.2d, v7.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q1, q4, [sp, #16]\nldp q2, q3, [sp, #272]\nzip1 v0.2d, v1.2d, v2.2d\nzip2 v1.2d, v1.2d, v2.2d\nzip1 v2.2d, v4.2d, v3.2d\nzip2 v3.2d, v4.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q1, q4, [sp, #272]\nldp q2, q3, [sp, #16]\nzip1 v0.2d, v2.2d, v1.2d\nzip2 v1.2d, v2.2d, v1.2d\nzip1 v2.2d, v3.2d, v4.2d\nzip2 v3.2d, v3.2d, v4.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "zip2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nzip1 v4.2d, v6.2d, v16.2d\nzip2 v5.2d, v6.2d, v16.2d\nzip1 v6.2d, v7.2d, v17.2d\nzip2 v7.2d, v7.2d, v17.2d\nret",
  "giasm": "ldp q1, q3, [sp, #64]\nldp q16, q17, [sp, #96]\nzip1 v0.2d, v4.2d, v1.2d\nzip2 v1.2d, v4.2d, v1.2d\nzip1 v2.2d, v5.2d, v3.2d\nzip2 v3.2d, v5.2d, v3.2d\nzip1 v4.2d, v6.2d, v16.2d\nzip2 v5.2d, v6.2d, v16.2d\nzip1 v6.2d, v7.2d, v17.2d\nzip2 v7.2d, v7.2d, v17.2d\nret",
  "ll": "define <16 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 8, i32 24, i32 9, i32 25, i32 10, i32 26, i32 11, i32 27, i32 12, i32 28, i32 13, i32 29, i32 14, i32 30, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q1, q3, [sp, #272]\nldp q2, q4, [sp, #16]\nldp q5, q7, [sp, #304]\nldp q6, q16, [sp, #48]\nzip1 v0.2d, v2.2d, v1.2d\nzip2 v1.2d, v2.2d, v1.2d\nzip1 v2.2d, v4.2d, v3.2d\nzip2 v3.2d, v4.2d, v3.2d\nzip1 v4.2d, v6.2d, v5.2d\nzip2 v5.2d, v6.2d, v5.2d\nzip1 v6.2d, v16.2d, v7.2d\nzip2 v7.2d, v16.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q1, q4, [sp, #272]\nldp q2, q3, [sp, #16]\nldp q5, q7, [sp, #48]\nldp q6, q16, [sp, #304]\nzip1 v0.2d, v2.2d, v1.2d\nzip2 v1.2d, v2.2d, v1.2d\nzip1 v2.2d, v3.2d, v4.2d\nzip2 v3.2d, v3.2d, v4.2d\nzip1 v4.2d, v5.2d, v6.2d\nzip2 v5.2d, v5.2d, v6.2d\nzip1 v6.2d, v7.2d, v16.2d\nzip2 v7.2d, v7.2d, v16.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "zip2 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 38,
  "gisize": 38,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q3, q0, [sp, #112]\nldp q2, q1, [sp, #368]\nldp q7, q6, [sp, #336]\nzip2 v4.2d, v0.2d, v1.2d\nzip1 v0.2d, v0.2d, v1.2d\nzip2 v5.2d, v3.2d, v2.2d\nzip1 v2.2d, v3.2d, v2.2d\nldp q3, q1, [sp, #80]\nzip2 v16.2d, v1.2d, v6.2d\nzip1 v1.2d, v1.2d, v6.2d\nstp q5, q0, [x8, #208]\nzip2 v0.2d, v3.2d, v7.2d\nldp q6, q5, [sp, #304]\nstr q4, [x8, #240]\nldr q4, [sp, #64]\nzip1 v3.2d, v3.2d, v7.2d\nstr q2, [x8, #192]\nldr q2, [sp, #48]\nzip2 v7.2d, v4.2d, v5.2d\nzip1 v4.2d, v4.2d, v5.2d\nstr q16, [x8, #176]\nstp q0, q1, [x8, #144]\nzip2 v1.2d, v2.2d, v6.2d\nzip1 v2.2d, v2.2d, v6.2d\nldp q5, q0, [sp, #272]\nldr q16, [sp, #32]\nstr q3, [x8, #128]\nldr q3, [sp, #16]\nstp q4, q7, [x8, #96]\nzip2 v6.2d, v16.2d, v0.2d\nzip1 v0.2d, v16.2d, v0.2d\nzip2 v4.2d, v3.2d, v5.2d\nstp q2, q1, [x8, #64]\nzip1 v1.2d, v3.2d, v5.2d\nstp q0, q6, [x8, #32]\nstp q1, q4, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q0, q3, [sp, #272]\nldp q1, q2, [sp, #16]\nldp q6, q7, [sp, #48]\nzip1 v4.2d, v1.2d, v0.2d\nzip2 v0.2d, v1.2d, v0.2d\nzip1 v5.2d, v2.2d, v3.2d\nzip2 v2.2d, v2.2d, v3.2d\nldp q1, q3, [sp, #304]\nzip1 v16.2d, v6.2d, v1.2d\nzip2 v1.2d, v6.2d, v1.2d\nstp q0, q5, [x8, #16]\nzip1 v0.2d, v7.2d, v3.2d\nldp q5, q6, [sp, #80]\nstr q4, [x8]\nldr q4, [sp, #336]\nzip2 v3.2d, v7.2d, v3.2d\nstr q2, [x8, #48]\nldr q2, [sp, #352]\nzip1 v7.2d, v5.2d, v4.2d\nzip2 v4.2d, v5.2d, v4.2d\nstr q16, [x8, #64]\nstp q1, q0, [x8, #80]\nzip1 v1.2d, v6.2d, v2.2d\nzip2 v2.2d, v6.2d, v2.2d\nldp q0, q5, [sp, #112]\nldr q16, [sp, #368]\nstr q3, [x8, #112]\nldr q3, [sp, #384]\nstp q7, q4, [x8, #128]\nzip1 v6.2d, v0.2d, v16.2d\nzip2 v0.2d, v0.2d, v16.2d\nzip1 v4.2d, v5.2d, v3.2d\nstp q1, q2, [x8, #160]\nzip2 v1.2d, v5.2d, v3.2d\nstp q6, q0, [x8, #192]\nstp q4, q1, [x8, #224]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 16, i32 48, i32 17, i32 49, i32 18, i32 50, i32 19, i32 51, i32 20, i32 52, i32 21, i32 53, i32 22, i32 54, i32 23, i32 55, i32 24, i32 56, i32 25, i32 57, i32 26, i32 58, i32 27, i32 59, i32 28, i32 60, i32 29, i32 61, i32 30, i32 62, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "mov w8, v0.s[1]\nmov w9, v1.s[1]\nmov v0.b[1], w8\nmov v1.b[1], w9\nzip1 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[4], v0.b[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 7,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nadrp x8, .LCPI0_0\nuzp1 v1.8b, v1.8b, v0.8b\nmov v0.d[1], v1.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 0,
  "gisize": 10,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v1.8b\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.8b, v0.8h\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.8b, v0.8h\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "uzp1 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp1 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp1 v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.16b, v2.16b, v3.16b\nuzp1 v0.16b, v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v1.16b\nuzp1 v1.16b, v2.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nuzp1 v1.4h, v1.4h, v0.4h\nzip1 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[0]\nmov v1.h[2], v0.h[2]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.4h, v0.4s\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.4h, v0.4s\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.4h, v0.4s\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "uzp1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.8h, v2.8h, v3.8h\nuzp1 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.8h, v2.8h, v3.8h\nuzp1 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp1 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "uzp1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp1 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q19, q18, [sp, #64]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q21, q20, [sp]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q23, q22, [sp, #32]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v6.4s, v19.4s, v18.4s\nuzp1 v7.4s, v17.4s, v16.4s\nuzp1 v4.4s, v21.4s, v20.4s\nuzp1 v5.4s, v23.4s, v22.4s\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v4.4s, v16.4s, v17.4s\nuzp1 v5.4s, v18.4s, v19.4s\nuzp1 v6.4s, v20.4s, v21.4s\nuzp1 v7.4s, v22.4s, v23.4s\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "uzp1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nzip1 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #64]\nzip1 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp]\nzip1 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #32]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v6.2d, v19.2d, v18.2d\nzip1 v7.2d, v17.2d, v16.2d\nzip1 v4.2d, v21.2d, v20.2d\nzip1 v5.2d, v23.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #32]\nzip1 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #64]\nzip1 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #96]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v4.2d, v16.2d, v17.2d\nzip1 v5.2d, v18.2d, v19.2d\nzip1 v6.2d, v20.2d, v21.2d\nzip1 v7.2d, v22.2d, v23.2d\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\nzip1 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #80]\nzip1 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp, #16]\nzip1 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #48]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v6.2d, v19.2d, v18.2d\nzip1 v7.2d, v17.2d, v16.2d\nzip1 v4.2d, v21.2d, v20.2d\nzip1 v5.2d, v23.2d, v22.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #16]\nzip1 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #48]\nzip1 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #80]\nzip1 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #112]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v4.2d, v16.2d, v17.2d\nzip1 v5.2d, v18.2d, v19.2d\nzip1 v6.2d, v20.2d, v21.2d\nzip1 v7.2d, v22.2d, v23.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp1 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 39,
  "gisize": 39,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #368]\nzip1 v6.2d, v6.2d, v7.2d\nldp q19, q18, [sp, #336]\nzip1 v4.2d, v4.2d, v5.2d\nldp q21, q20, [sp, #304]\nzip1 v2.2d, v2.2d, v3.2d\nldp q23, q22, [sp, #272]\nzip1 v16.2d, v17.2d, v16.2d\nldp q25, q24, [sp, #240]\nzip1 v18.2d, v19.2d, v18.2d\nldp q27, q26, [sp, #208]\nzip1 v20.2d, v21.2d, v20.2d\nldp q28, q17, [sp, #176]\nzip1 v22.2d, v23.2d, v22.2d\nzip1 v23.2d, v25.2d, v24.2d\nldp q29, q19, [sp, #144]\nzip1 v25.2d, v27.2d, v26.2d\nldp q30, q21, [sp, #112]\nzip1 v17.2d, v28.2d, v17.2d\nstr q16, [x8, #240]\nzip1 v0.2d, v0.2d, v1.2d\nldp q24, q16, [sp, #80]\nstp q20, q18, [x8, #208]\nldp q20, q18, [sp, #48]\nzip1 v19.2d, v29.2d, v19.2d\nstp q23, q22, [x8, #176]\nldp q23, q22, [sp, #16]\nzip1 v21.2d, v30.2d, v21.2d\nzip1 v16.2d, v24.2d, v16.2d\nstp q2, q4, [x8, #16]\nstp q17, q25, [x8, #144]\nzip1 v18.2d, v20.2d, v18.2d\nzip1 v17.2d, v23.2d, v22.2d\nstr q0, [x8]\nstp q21, q19, [x8, #112]\nstp q18, q16, [x8, #80]\nstp q6, q17, [x8, #48]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v2.2d, v2.2d, v3.2d\nzip1 v4.2d, v4.2d, v5.2d\nzip1 v0.2d, v0.2d, v1.2d\nldp q16, q17, [sp, #16]\nzip1 v6.2d, v6.2d, v7.2d\nldp q18, q19, [sp, #48]\nldp q20, q21, [sp, #80]\nldp q22, q23, [sp, #112]\nzip1 v7.2d, v16.2d, v17.2d\nldp q1, q24, [sp, #144]\nzip1 v17.2d, v18.2d, v19.2d\nstp q2, q4, [x8, #16]\nzip1 v2.2d, v20.2d, v21.2d\nzip1 v19.2d, v22.2d, v23.2d\nstr q0, [x8]\nzip1 v1.2d, v1.2d, v24.2d\nldp q0, q16, [sp, #240]\nldp q3, q25, [sp, #176]\nstp q6, q7, [x8, #48]\nldp q5, q26, [sp, #208]\nstp q17, q2, [x8, #80]\nldp q4, q18, [sp, #272]\nzip1 v0.2d, v0.2d, v16.2d\nldp q6, q7, [sp, #304]\nstp q19, q1, [x8, #112]\nldp q2, q17, [sp, #336]\nzip1 v3.2d, v3.2d, v25.2d\nldp q1, q16, [sp, #368]\nzip1 v5.2d, v5.2d, v26.2d\nzip1 v4.2d, v4.2d, v18.2d\nzip1 v6.2d, v6.2d, v7.2d\nzip1 v2.2d, v2.2d, v17.2d\nzip1 v1.2d, v1.2d, v16.2d\nstp q3, q5, [x8, #144]\nstp q0, q4, [x8, #176]\nstp q6, q2, [x8, #208]\nstr q1, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp1 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "uzp1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.8h, v2.8h, v3.8h\nuzp1 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.8h, v2.8h, v3.8h\nuzp1 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp1 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nret",
  "ll": "define <32 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "uzp1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp1 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q19, q18, [sp, #64]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q21, q20, [sp]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q23, q22, [sp, #32]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v6.4s, v19.4s, v18.4s\nuzp1 v7.4s, v17.4s, v16.4s\nuzp1 v4.4s, v21.4s, v20.4s\nuzp1 v5.4s, v23.4s, v22.4s\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v4.4s, v16.4s, v17.4s\nuzp1 v5.4s, v18.4s, v19.4s\nuzp1 v6.4s, v20.4s, v21.4s\nuzp1 v7.4s, v22.4s, v23.4s\nret",
  "ll": "define <32 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v2.2d, v2.2d, v3.2d\nzip1 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 0, i32 2, i32 4, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v0.2d, v0.2d, v1.2d\nzip1 v1.2d, v2.2d, v3.2d\nzip1 v2.2d, v4.2d, v5.2d\nzip1 v3.2d, v6.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "uzp1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q21, q16, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nldp q18, q17, [sp, #96]\nzip1 v1.2d, v2.2d, v3.2d\nldp q20, q19, [sp, #64]\nzip1 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #32]\nzip1 v16.2d, v21.2d, v16.2d\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v7.2d, v18.2d, v17.2d\nzip1 v6.2d, v20.2d, v19.2d\nzip1 v5.2d, v23.2d, v22.2d\nmov v4.16b, v16.16b\nret",
  "giasm": "ldp q16, q17, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #32]\nzip1 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #64]\nzip1 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #96]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v4.2d, v16.2d, v17.2d\nzip1 v5.2d, v18.2d, v19.2d\nzip1 v6.2d, v20.2d, v21.2d\nzip1 v7.2d, v22.2d, v23.2d\nret",
  "ll": "define <16 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\nzip1 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #80]\nzip1 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp, #16]\nzip1 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #48]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v6.2d, v19.2d, v18.2d\nzip1 v7.2d, v17.2d, v16.2d\nzip1 v4.2d, v21.2d, v20.2d\nzip1 v5.2d, v23.2d, v22.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #16]\nzip1 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #48]\nzip1 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #80]\nzip1 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #112]\nzip1 v3.2d, v6.2d, v7.2d\nzip1 v4.2d, v16.2d, v17.2d\nzip1 v5.2d, v18.2d, v19.2d\nzip1 v6.2d, v20.2d, v21.2d\nzip1 v7.2d, v22.2d, v23.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp1 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 39,
  "gisize": 39,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #368]\nzip1 v6.2d, v6.2d, v7.2d\nldp q19, q18, [sp, #336]\nzip1 v4.2d, v4.2d, v5.2d\nldp q21, q20, [sp, #304]\nzip1 v2.2d, v2.2d, v3.2d\nldp q23, q22, [sp, #272]\nzip1 v16.2d, v17.2d, v16.2d\nldp q25, q24, [sp, #240]\nzip1 v18.2d, v19.2d, v18.2d\nldp q27, q26, [sp, #208]\nzip1 v20.2d, v21.2d, v20.2d\nldp q28, q17, [sp, #176]\nzip1 v22.2d, v23.2d, v22.2d\nzip1 v23.2d, v25.2d, v24.2d\nldp q29, q19, [sp, #144]\nzip1 v25.2d, v27.2d, v26.2d\nldp q30, q21, [sp, #112]\nzip1 v17.2d, v28.2d, v17.2d\nstr q16, [x8, #240]\nzip1 v0.2d, v0.2d, v1.2d\nldp q24, q16, [sp, #80]\nstp q20, q18, [x8, #208]\nldp q20, q18, [sp, #48]\nzip1 v19.2d, v29.2d, v19.2d\nstp q23, q22, [x8, #176]\nldp q23, q22, [sp, #16]\nzip1 v21.2d, v30.2d, v21.2d\nzip1 v16.2d, v24.2d, v16.2d\nstp q2, q4, [x8, #16]\nstp q17, q25, [x8, #144]\nzip1 v18.2d, v20.2d, v18.2d\nzip1 v17.2d, v23.2d, v22.2d\nstr q0, [x8]\nstp q21, q19, [x8, #112]\nstp q18, q16, [x8, #80]\nstp q6, q17, [x8, #48]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip1 v2.2d, v2.2d, v3.2d\nzip1 v4.2d, v4.2d, v5.2d\nzip1 v0.2d, v0.2d, v1.2d\nldp q16, q17, [sp, #16]\nzip1 v6.2d, v6.2d, v7.2d\nldp q18, q19, [sp, #48]\nldp q20, q21, [sp, #80]\nldp q22, q23, [sp, #112]\nzip1 v7.2d, v16.2d, v17.2d\nldp q1, q24, [sp, #144]\nzip1 v17.2d, v18.2d, v19.2d\nstp q2, q4, [x8, #16]\nzip1 v2.2d, v20.2d, v21.2d\nzip1 v19.2d, v22.2d, v23.2d\nstr q0, [x8]\nzip1 v1.2d, v1.2d, v24.2d\nldp q0, q16, [sp, #240]\nldp q3, q25, [sp, #176]\nstp q6, q7, [x8, #48]\nldp q5, q26, [sp, #208]\nstp q17, q2, [x8, #80]\nldp q4, q18, [sp, #272]\nzip1 v0.2d, v0.2d, v16.2d\nldp q6, q7, [sp, #304]\nstp q19, q1, [x8, #112]\nldp q2, q17, [sp, #336]\nzip1 v3.2d, v3.2d, v25.2d\nldp q1, q16, [sp, #368]\nzip1 v5.2d, v5.2d, v26.2d\nzip1 v4.2d, v4.2d, v18.2d\nzip1 v6.2d, v6.2d, v7.2d\nzip1 v2.2d, v2.2d, v17.2d\nzip1 v1.2d, v1.2d, v16.2d\nstp q3, q5, [x8, #144]\nstp q0, q4, [x8, #176]\nstp q6, q2, [x8, #208]\nstr q1, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14, i32 16, i32 18, i32 20, i32 22, i32 24, i32 26, i32 28, i32 30, i32 32, i32 34, i32 36, i32 38, i32 40, i32 42, i32 44, i32 46, i32 48, i32 50, i32 52, i32 54, i32 56, i32 58, i32 60, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "mov w8, v0.s[1]\nmov w9, v1.s[1]\nmov v0.b[1], w8\nmov v1.b[1], w9\ntrn2 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp2 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.8b, v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 7,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nadrp x8, .LCPI0_0\nuzp1 v1.8b, v1.8b, v0.8b\nmov v0.d[1], v1.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev16 v0.8b, v0.8b\nret",
  "giasm": "uzp2 v0.8b, v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 10,
  "extrasize": 0,
  "asm": "rev16 v0.8b, v0.8b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 10,
  "extrasize": 0,
  "asm": "rev16 v0.8b, v0.8b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "uzp2 v0.8b, v0.8b, v1.8b\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.16b, v0.16b, v0.16b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.16b, v0.16b, v0.16b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "uzp2 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp2 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "uzp2 v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.16b, v2.16b, v3.16b\nuzp2 v0.16b, v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.16b, v0.16b, v1.16b\nuzp2 v1.16b, v2.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nuzp1 v1.4h, v1.4h, v0.4h\ntrn2 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[3]\nfmov d0, d1\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "uzp2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.8h, v2.8h, v3.8h\nuzp2 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.8h, v2.8h, v3.8h\nuzp2 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "uzp2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nuzp2 v2.8h, v4.8h, v5.8h\nuzp2 v3.8h, v6.8h, v7.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nuzp2 v2.8h, v4.8h, v5.8h\nuzp2 v3.8h, v6.8h, v7.8h\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "uzp2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "uzp2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nuzp2 v0.4s, v0.4s, v1.4s\nldp q19, q18, [sp, #64]\nuzp2 v1.4s, v2.4s, v3.4s\nldp q21, q20, [sp]\nuzp2 v2.4s, v4.4s, v5.4s\nldp q23, q22, [sp, #32]\nuzp2 v3.4s, v6.4s, v7.4s\nuzp2 v6.4s, v19.4s, v18.4s\nuzp2 v7.4s, v17.4s, v16.4s\nuzp2 v4.4s, v21.4s, v20.4s\nuzp2 v5.4s, v23.4s, v22.4s\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp2 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp2 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp2 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp2 v3.4s, v6.4s, v7.4s\nuzp2 v4.4s, v16.4s, v17.4s\nuzp2 v5.4s, v18.4s, v19.4s\nuzp2 v6.4s, v20.4s, v21.4s\nuzp2 v7.4s, v22.4s, v23.4s\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "uzp2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nzip2 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #64]\nzip2 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp]\nzip2 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #32]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v6.2d, v19.2d, v18.2d\nzip2 v7.2d, v17.2d, v16.2d\nzip2 v4.2d, v21.2d, v20.2d\nzip2 v5.2d, v23.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #32]\nzip2 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #64]\nzip2 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #96]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v4.2d, v16.2d, v17.2d\nzip2 v5.2d, v18.2d, v19.2d\nzip2 v6.2d, v20.2d, v21.2d\nzip2 v7.2d, v22.2d, v23.2d\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\nzip2 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #80]\nzip2 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp, #16]\nzip2 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #48]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v6.2d, v19.2d, v18.2d\nzip2 v7.2d, v17.2d, v16.2d\nzip2 v4.2d, v21.2d, v20.2d\nzip2 v5.2d, v23.2d, v22.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #16]\nzip2 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #48]\nzip2 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #80]\nzip2 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #112]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v4.2d, v16.2d, v17.2d\nzip2 v5.2d, v18.2d, v19.2d\nzip2 v6.2d, v20.2d, v21.2d\nzip2 v7.2d, v22.2d, v23.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "uzp2 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 39,
  "gisize": 39,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #368]\nzip2 v6.2d, v6.2d, v7.2d\nldp q19, q18, [sp, #336]\nzip2 v4.2d, v4.2d, v5.2d\nldp q21, q20, [sp, #304]\nzip2 v2.2d, v2.2d, v3.2d\nldp q23, q22, [sp, #272]\nzip2 v16.2d, v17.2d, v16.2d\nldp q25, q24, [sp, #240]\nzip2 v18.2d, v19.2d, v18.2d\nldp q27, q26, [sp, #208]\nzip2 v20.2d, v21.2d, v20.2d\nldp q28, q17, [sp, #176]\nzip2 v22.2d, v23.2d, v22.2d\nzip2 v23.2d, v25.2d, v24.2d\nldp q29, q19, [sp, #144]\nzip2 v25.2d, v27.2d, v26.2d\nldp q30, q21, [sp, #112]\nzip2 v17.2d, v28.2d, v17.2d\nstr q16, [x8, #240]\nzip2 v0.2d, v0.2d, v1.2d\nldp q24, q16, [sp, #80]\nstp q20, q18, [x8, #208]\nldp q20, q18, [sp, #48]\nzip2 v19.2d, v29.2d, v19.2d\nstp q23, q22, [x8, #176]\nldp q23, q22, [sp, #16]\nzip2 v21.2d, v30.2d, v21.2d\nzip2 v16.2d, v24.2d, v16.2d\nstp q2, q4, [x8, #16]\nstp q17, q25, [x8, #144]\nzip2 v18.2d, v20.2d, v18.2d\nzip2 v17.2d, v23.2d, v22.2d\nstr q0, [x8]\nstp q21, q19, [x8, #112]\nstp q18, q16, [x8, #80]\nstp q6, q17, [x8, #48]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v2.2d, v2.2d, v3.2d\nzip2 v4.2d, v4.2d, v5.2d\nzip2 v0.2d, v0.2d, v1.2d\nldp q16, q17, [sp, #16]\nzip2 v6.2d, v6.2d, v7.2d\nldp q18, q19, [sp, #48]\nldp q20, q21, [sp, #80]\nldp q22, q23, [sp, #112]\nzip2 v7.2d, v16.2d, v17.2d\nldp q1, q24, [sp, #144]\nzip2 v17.2d, v18.2d, v19.2d\nstp q2, q4, [x8, #16]\nzip2 v2.2d, v20.2d, v21.2d\nzip2 v19.2d, v22.2d, v23.2d\nstr q0, [x8]\nzip2 v1.2d, v1.2d, v24.2d\nldp q0, q16, [sp, #240]\nldp q3, q25, [sp, #176]\nstp q6, q7, [x8, #48]\nldp q5, q26, [sp, #208]\nstp q17, q2, [x8, #80]\nldp q4, q18, [sp, #272]\nzip2 v0.2d, v0.2d, v16.2d\nldp q6, q7, [sp, #304]\nstp q19, q1, [x8, #112]\nldp q2, q17, [sp, #336]\nzip2 v3.2d, v3.2d, v25.2d\nldp q1, q16, [sp, #368]\nzip2 v5.2d, v5.2d, v26.2d\nzip2 v4.2d, v4.2d, v18.2d\nzip2 v6.2d, v6.2d, v7.2d\nzip2 v2.2d, v2.2d, v17.2d\nzip2 v1.2d, v1.2d, v16.2d\nstp q3, q5, [x8, #144]\nstp q0, q4, [x8, #176]\nstp q6, q2, [x8, #208]\nstr q1, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v0.4h\nret",
  "giasm": "uzp2 v1.8h, v0.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "uzp2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.8h, v2.8h, v3.8h\nuzp2 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.8h, v2.8h, v3.8h\nuzp2 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "uzp2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nuzp2 v2.8h, v4.8h, v5.8h\nuzp2 v3.8h, v6.8h, v7.8h\nret",
  "giasm": "uzp2 v0.8h, v0.8h, v1.8h\nuzp2 v1.8h, v2.8h, v3.8h\nuzp2 v2.8h, v4.8h, v5.8h\nuzp2 v3.8h, v6.8h, v7.8h\nret",
  "ll": "define <32 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp2 v2.4s, v2.4s, v3.4s\nuzp2 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "uzp2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp2 v0.4s, v0.4s, v1.4s\nuzp2 v1.4s, v2.4s, v3.4s\nuzp2 v2.4s, v4.4s, v5.4s\nuzp2 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "uzp2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nuzp2 v0.4s, v0.4s, v1.4s\nldp q19, q18, [sp, #64]\nuzp2 v1.4s, v2.4s, v3.4s\nldp q21, q20, [sp]\nuzp2 v2.4s, v4.4s, v5.4s\nldp q23, q22, [sp, #32]\nuzp2 v3.4s, v6.4s, v7.4s\nuzp2 v6.4s, v19.4s, v18.4s\nuzp2 v7.4s, v17.4s, v16.4s\nuzp2 v4.4s, v21.4s, v20.4s\nuzp2 v5.4s, v23.4s, v22.4s\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp2 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp2 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp2 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp2 v3.4s, v6.4s, v7.4s\nuzp2 v4.4s, v16.4s, v17.4s\nuzp2 v5.4s, v18.4s, v19.4s\nuzp2 v6.4s, v20.4s, v21.4s\nuzp2 v7.4s, v22.4s, v23.4s\nret",
  "ll": "define <32 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v2.2d, v2.2d, v3.2d\nzip2 v0.2d, v0.2d, v1.2d\nmov v1.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 1, i32 3, i32 5, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v0.2d, v0.2d, v1.2d\nzip2 v1.2d, v2.2d, v3.2d\nzip2 v2.2d, v4.2d, v5.2d\nzip2 v3.2d, v6.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "uzp2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q21, q16, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nldp q18, q17, [sp, #96]\nzip2 v1.2d, v2.2d, v3.2d\nldp q20, q19, [sp, #64]\nzip2 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #32]\nzip2 v16.2d, v21.2d, v16.2d\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v7.2d, v18.2d, v17.2d\nzip2 v6.2d, v20.2d, v19.2d\nzip2 v5.2d, v23.2d, v22.2d\nmov v4.16b, v16.16b\nret",
  "giasm": "ldp q16, q17, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #32]\nzip2 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #64]\nzip2 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #96]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v4.2d, v16.2d, v17.2d\nzip2 v5.2d, v18.2d, v19.2d\nzip2 v6.2d, v20.2d, v21.2d\nzip2 v7.2d, v22.2d, v23.2d\nret",
  "ll": "define <16 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\nzip2 v0.2d, v0.2d, v1.2d\nldp q19, q18, [sp, #80]\nzip2 v1.2d, v2.2d, v3.2d\nldp q21, q20, [sp, #16]\nzip2 v2.2d, v4.2d, v5.2d\nldp q23, q22, [sp, #48]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v6.2d, v19.2d, v18.2d\nzip2 v7.2d, v17.2d, v16.2d\nzip2 v4.2d, v21.2d, v20.2d\nzip2 v5.2d, v23.2d, v22.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #16]\nzip2 v0.2d, v0.2d, v1.2d\nldp q18, q19, [sp, #48]\nzip2 v1.2d, v2.2d, v3.2d\nldp q20, q21, [sp, #80]\nzip2 v2.2d, v4.2d, v5.2d\nldp q22, q23, [sp, #112]\nzip2 v3.2d, v6.2d, v7.2d\nzip2 v4.2d, v16.2d, v17.2d\nzip2 v5.2d, v18.2d, v19.2d\nzip2 v6.2d, v20.2d, v21.2d\nzip2 v7.2d, v22.2d, v23.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "uzp2 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 39,
  "gisize": 39,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #368]\nzip2 v6.2d, v6.2d, v7.2d\nldp q19, q18, [sp, #336]\nzip2 v4.2d, v4.2d, v5.2d\nldp q21, q20, [sp, #304]\nzip2 v2.2d, v2.2d, v3.2d\nldp q23, q22, [sp, #272]\nzip2 v16.2d, v17.2d, v16.2d\nldp q25, q24, [sp, #240]\nzip2 v18.2d, v19.2d, v18.2d\nldp q27, q26, [sp, #208]\nzip2 v20.2d, v21.2d, v20.2d\nldp q28, q17, [sp, #176]\nzip2 v22.2d, v23.2d, v22.2d\nzip2 v23.2d, v25.2d, v24.2d\nldp q29, q19, [sp, #144]\nzip2 v25.2d, v27.2d, v26.2d\nldp q30, q21, [sp, #112]\nzip2 v17.2d, v28.2d, v17.2d\nstr q16, [x8, #240]\nzip2 v0.2d, v0.2d, v1.2d\nldp q24, q16, [sp, #80]\nstp q20, q18, [x8, #208]\nldp q20, q18, [sp, #48]\nzip2 v19.2d, v29.2d, v19.2d\nstp q23, q22, [x8, #176]\nldp q23, q22, [sp, #16]\nzip2 v21.2d, v30.2d, v21.2d\nzip2 v16.2d, v24.2d, v16.2d\nstp q2, q4, [x8, #16]\nstp q17, q25, [x8, #144]\nzip2 v18.2d, v20.2d, v18.2d\nzip2 v17.2d, v23.2d, v22.2d\nstr q0, [x8]\nstp q21, q19, [x8, #112]\nstp q18, q16, [x8, #80]\nstp q6, q17, [x8, #48]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nzip2 v2.2d, v2.2d, v3.2d\nzip2 v4.2d, v4.2d, v5.2d\nzip2 v0.2d, v0.2d, v1.2d\nldp q16, q17, [sp, #16]\nzip2 v6.2d, v6.2d, v7.2d\nldp q18, q19, [sp, #48]\nldp q20, q21, [sp, #80]\nldp q22, q23, [sp, #112]\nzip2 v7.2d, v16.2d, v17.2d\nldp q1, q24, [sp, #144]\nzip2 v17.2d, v18.2d, v19.2d\nstp q2, q4, [x8, #16]\nzip2 v2.2d, v20.2d, v21.2d\nzip2 v19.2d, v22.2d, v23.2d\nstr q0, [x8]\nzip2 v1.2d, v1.2d, v24.2d\nldp q0, q16, [sp, #240]\nldp q3, q25, [sp, #176]\nstp q6, q7, [x8, #48]\nldp q5, q26, [sp, #208]\nstp q17, q2, [x8, #80]\nldp q4, q18, [sp, #272]\nzip2 v0.2d, v0.2d, v16.2d\nldp q6, q7, [sp, #304]\nstp q19, q1, [x8, #112]\nldp q2, q17, [sp, #336]\nzip2 v3.2d, v3.2d, v25.2d\nldp q1, q16, [sp, #368]\nzip2 v5.2d, v5.2d, v26.2d\nzip2 v4.2d, v4.2d, v18.2d\nzip2 v6.2d, v6.2d, v7.2d\nzip2 v2.2d, v2.2d, v17.2d\nzip2 v1.2d, v1.2d, v16.2d\nstp q3, q5, [x8, #144]\nstp q0, q4, [x8, #176]\nstp q6, q2, [x8, #208]\nstr q1, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15, i32 17, i32 19, i32 21, i32 23, i32 25, i32 27, i32 29, i32 31, i32 33, i32 35, i32 37, i32 39, i32 41, i32 43, i32 45, i32 47, i32 49, i32 51, i32 53, i32 55, i32 57, i32 59, i32 61, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "mov w8, v0.s[1]\nmov w9, v1.s[1]\nmov v0.b[1], w8\nmov v1.b[1], w9\nzip1 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 7,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v1.h[0]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v1.8b, v1.8b, v0.8b\nzip1 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[0]\nmov v0.b[4], v1.b[0]\nret",
  "giasm": "zip1 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[0]\nmov v0.b[4], v1.b[0]\nret",
  "giasm": "zip1 v0.16b, v0.16b, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[0]\nmov v0.b[4], v2.b[0]\nret",
  "giasm": "zip1 v0.16b, v0.16b, v2.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v1.8b, v1.8b, v0.8b\ntrn1 v0.8b, v0.8b, v1.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 4,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov b2, v0.b[0]\nmov v2.b[2], v1.b[0]\nmov v2.b[4], v0.b[2]\nmov v2.b[6], v1.b[2]\nfmov d0, d2\nret",
  "giasm": "trn1 v0.8b, v0.8b, v1.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "trn1 v4",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b2, v0.b[0]\nmov v2.b[2], v1.b[0]\nmov v2.b[4], v0.b[2]\nmov v2.b[6], v1.b[2]\nfmov d0, d2\nret",
  "giasm": "trn1 v0.16b, v0.16b, v1.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn1 v4",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b1, v0.b[0]\nmov v1.b[2], v2.b[0]\nmov v1.b[4], v0.b[2]\nmov v1.b[6], v2.b[2]\nfmov d0, d1\nret",
  "giasm": "trn1 v0.16b, v0.16b, v2.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "trn1 v0.8b, v0.8b, v1.8b\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "trn1 v8",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "trn1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn1 v8",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8b, v0.8b, v2.8b\nret",
  "giasm": "trn1 v0.16b, v0.16b, v2.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "trn1 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "trn1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn1 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.16b, v0.16b, v2.16b\nret",
  "giasm": "trn1 v0.16b, v0.16b, v2.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn1 v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.16b, v1.16b, v3.16b\ntrn1 v0.16b, v0.16b, v2.16b\nret",
  "giasm": "trn1 v0.16b, v0.16b, v2.16b\ntrn1 v1.16b, v1.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nuzp1 v1.4h, v1.4h, v0.4h\nzip1 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v1.h[0]\nret",
  "giasm": "zip1 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v1.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v1.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v2.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v2.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[0]\nmov v0.h[2], v4.h[0]\nret",
  "giasm": "zip1 v0.8h, v0.8h, v4.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v4.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "trn1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.8h, v1.8h, v3.8h\ntrn1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\ntrn1 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.8h, v1.8h, v5.8h\ntrn1 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v4.8h\ntrn1 v1.8h, v1.8h, v5.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn1 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn1 v2.8h, v2.8h, v6.8h\ntrn1 v0.8h, v0.8h, v4.8h\ntrn1 v1.8h, v1.8h, v5.8h\ntrn1 v3.8h, v3.8h, v7.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v4.8h\ntrn1 v1.8h, v1.8h, v5.8h\ntrn1 v2.8h, v2.8h, v6.8h\ntrn1 v3.8h, v3.8h, v7.8h\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr d1, [sp]\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\ntrn1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "ldr q1, [sp]\ntrn1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.4s, v1.4s, v3.4s\ntrn1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v2.4s\ntrn1 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.4s, v1.4s, v5.4s\ntrn1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\ntrn1 v0.4s, v0.4s, v3.4s\ntrn1 v1.4s, v1.4s, v2.4s\nret",
  "giasm": "ldp q2, q3, [sp]\ntrn1 v0.4s, v0.4s, v2.4s\ntrn1 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "trn1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn1 v2.4s, v2.4s, v6.4s\ntrn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v2.4s, v2.4s, v6.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\ntrn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v2.4s, v2.4s, v7.4s\ntrn1 v3.4s, v3.4s, v6.4s\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\ntrn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v2.4s, v2.4s, v6.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn1 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\ntrn1 v4.4s, v4.4s, v17.4s\ntrn1 v0.4s, v0.4s, v19.4s\ntrn1 v1.4s, v1.4s, v18.4s\ntrn1 v5.4s, v5.4s, v16.4s\ntrn1 v2.4s, v2.4s, v21.4s\ntrn1 v3.4s, v3.4s, v20.4s\ntrn1 v6.4s, v6.4s, v23.4s\ntrn1 v7.4s, v7.4s, v22.4s\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\ntrn1 v0.4s, v0.4s, v16.4s\ntrn1 v1.4s, v1.4s, v17.4s\ntrn1 v2.4s, v2.4s, v18.4s\ntrn1 v3.4s, v3.4s, v19.4s\ntrn1 v4.4s, v4.4s, v20.4s\ntrn1 v5.4s, v5.4s, v21.4s\ntrn1 v6.4s, v6.4s, v22.4s\ntrn1 v7.4s, v7.4s, v23.4s\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v1.2d, v1.2d, v3.2d\nzip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v1.2d, v1.2d, v5.2d\nzip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\nzip1 v0.2d, v0.2d, v3.2d\nzip1 v1.2d, v1.2d, v2.2d\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q3, q2, [sp, #144]\nzip1 v0.2d, v0.2d, v3.2d\nzip1 v1.2d, v1.2d, v2.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q2, q3, [sp, #144]\nzip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v6.2d\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v7.2d\nzip1 v3.2d, v3.2d, v6.2d\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q7, q6, [sp, #176]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v7.2d\nzip1 v3.2d, v3.2d, v6.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q6, q7, [sp, #176]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "trn1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\nzip1 v4.2d, v4.2d, v17.2d\nzip1 v0.2d, v0.2d, v19.2d\nzip1 v1.2d, v1.2d, v18.2d\nzip1 v5.2d, v5.2d, v16.2d\nzip1 v2.2d, v2.2d, v21.2d\nzip1 v3.2d, v3.2d, v20.2d\nzip1 v6.2d, v6.2d, v23.2d\nzip1 v7.2d, v7.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\nzip1 v0.2d, v0.2d, v16.2d\nzip1 v1.2d, v1.2d, v17.2d\nzip1 v2.2d, v2.2d, v18.2d\nzip1 v3.2d, v3.2d, v19.2d\nzip1 v4.2d, v4.2d, v20.2d\nzip1 v5.2d, v5.2d, v21.2d\nzip1 v6.2d, v6.2d, v22.2d\nzip1 v7.2d, v7.2d, v23.2d\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #208]\nldp q19, q18, [sp, #144]\nldp q21, q20, [sp, #176]\nldp q23, q22, [sp, #240]\nzip1 v4.2d, v4.2d, v17.2d\nzip1 v0.2d, v0.2d, v19.2d\nzip1 v1.2d, v1.2d, v18.2d\nzip1 v5.2d, v5.2d, v16.2d\nzip1 v2.2d, v2.2d, v21.2d\nzip1 v3.2d, v3.2d, v20.2d\nzip1 v6.2d, v6.2d, v23.2d\nzip1 v7.2d, v7.2d, v22.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #144]\nldp q18, q19, [sp, #176]\nldp q20, q21, [sp, #208]\nldp q22, q23, [sp, #240]\nzip1 v0.2d, v0.2d, v16.2d\nzip1 v1.2d, v1.2d, v17.2d\nzip1 v2.2d, v2.2d, v18.2d\nzip1 v3.2d, v3.2d, v19.2d\nzip1 v4.2d, v4.2d, v20.2d\nzip1 v5.2d, v5.2d, v21.2d\nzip1 v6.2d, v6.2d, v22.2d\nzip1 v7.2d, v7.2d, v23.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn1 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 39,
  "gisize": 39,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #368]\nldp q19, q18, [sp, #112]\nldp q21, q20, [sp, #336]\nldp q23, q22, [sp, #80]\nzip1 v16.2d, v18.2d, v16.2d\nldp q24, q18, [sp, #304]\nzip1 v17.2d, v19.2d, v17.2d\nldp q25, q19, [sp, #48]\nzip1 v20.2d, v22.2d, v20.2d\nldp q26, q22, [sp, #272]\nzip1 v21.2d, v23.2d, v21.2d\nzip1 v18.2d, v19.2d, v18.2d\nstr q16, [x8, #240]\nzip1 v23.2d, v25.2d, v24.2d\nldp q19, q16, [sp, #16]\nstp q20, q17, [x8, #208]\nldp q20, q17, [sp, #240]\nzip1 v16.2d, v16.2d, v22.2d\nstp q18, q21, [x8, #176]\nzip1 v19.2d, v19.2d, v26.2d\nzip1 v7.2d, v7.2d, v17.2d\nldp q18, q17, [sp, #208]\nzip1 v6.2d, v6.2d, v20.2d\nstp q16, q23, [x8, #144]\nzip1 v5.2d, v5.2d, v17.2d\nzip1 v4.2d, v4.2d, v18.2d\nldp q17, q16, [sp, #176]\nstp q7, q19, [x8, #112]\nzip1 v3.2d, v3.2d, v16.2d\nldp q16, q7, [sp, #144]\nzip1 v2.2d, v2.2d, v17.2d\nstp q5, q6, [x8, #80]\nzip1 v1.2d, v1.2d, v7.2d\nzip1 v0.2d, v0.2d, v16.2d\nstp q3, q4, [x8, #48]\nstp q1, q2, [x8, #16]\nstr q0, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q18, q21, [sp, #144]\nldp q22, q24, [sp, #176]\nldp q16, q17, [sp, #16]\nzip1 v0.2d, v0.2d, v18.2d\nzip1 v1.2d, v1.2d, v21.2d\nldp q21, q26, [sp, #208]\nzip1 v2.2d, v2.2d, v22.2d\nzip1 v3.2d, v3.2d, v24.2d\nldp q19, q20, [sp, #48]\nldp q18, q23, [sp, #80]\nzip1 v4.2d, v4.2d, v21.2d\nstr q0, [x8]\nzip1 v5.2d, v5.2d, v26.2d\nldp q0, q21, [sp, #240]\nstp q1, q2, [x8, #16]\nldp q1, q2, [sp, #272]\nldp q22, q25, [sp, #112]\nzip1 v0.2d, v6.2d, v0.2d\nzip1 v6.2d, v7.2d, v21.2d\nstp q3, q4, [x8, #48]\nzip1 v1.2d, v16.2d, v1.2d\nldp q3, q4, [sp, #304]\nzip1 v2.2d, v17.2d, v2.2d\nzip1 v3.2d, v19.2d, v3.2d\nstp q5, q0, [x8, #80]\nzip1 v4.2d, v20.2d, v4.2d\nldp q0, q5, [sp, #336]\nstp q6, q1, [x8, #112]\nldp q1, q6, [sp, #368]\nzip1 v0.2d, v18.2d, v0.2d\nzip1 v5.2d, v23.2d, v5.2d\nstp q2, q3, [x8, #144]\nzip1 v1.2d, v22.2d, v1.2d\nzip1 v2.2d, v25.2d, v6.2d\nstp q4, q0, [x8, #176]\nstp q5, q1, [x8, #208]\nstr q2, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v1.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v2.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "zip1 v0.4h, v0.4h, v4.4h\nret",
  "giasm": "zip1 v1.8h, v0.8h, v4.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn1 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn1 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4h, v0.4h, v4.4h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn1 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "trn1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.8h, v1.8h, v3.8h\ntrn1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v2.8h\ntrn1 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn1 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.8h, v1.8h, v5.8h\ntrn1 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v4.8h\ntrn1 v1.8h, v1.8h, v5.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn1 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn1 v2.8h, v2.8h, v6.8h\ntrn1 v0.8h, v0.8h, v4.8h\ntrn1 v1.8h, v1.8h, v5.8h\ntrn1 v3.8h, v3.8h, v7.8h\nret",
  "giasm": "trn1 v0.8h, v0.8h, v4.8h\ntrn1 v1.8h, v1.8h, v5.8h\ntrn1 v2.8h, v2.8h, v6.8h\ntrn1 v3.8h, v3.8h, v7.8h\nret",
  "ll": "define <32 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "zip1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr d1, [sp]\nzip1 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn1 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\ntrn1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "ldr q1, [sp]\ntrn1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.4s, v1.4s, v3.4s\ntrn1 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v2.4s\ntrn1 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn1 v1.4s, v1.4s, v5.4s\ntrn1 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn1 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\ntrn1 v0.4s, v0.4s, v3.4s\ntrn1 v1.4s, v1.4s, v2.4s\nret",
  "giasm": "ldp q2, q3, [sp]\ntrn1 v0.4s, v0.4s, v2.4s\ntrn1 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "trn1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn1 v2.4s, v2.4s, v6.4s\ntrn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "giasm": "trn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v2.4s, v2.4s, v6.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn1 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\ntrn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v2.4s, v2.4s, v7.4s\ntrn1 v3.4s, v3.4s, v6.4s\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\ntrn1 v0.4s, v0.4s, v4.4s\ntrn1 v1.4s, v1.4s, v5.4s\ntrn1 v2.4s, v2.4s, v6.4s\ntrn1 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn1 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\ntrn1 v4.4s, v4.4s, v17.4s\ntrn1 v0.4s, v0.4s, v19.4s\ntrn1 v1.4s, v1.4s, v18.4s\ntrn1 v5.4s, v5.4s, v16.4s\ntrn1 v2.4s, v2.4s, v21.4s\ntrn1 v3.4s, v3.4s, v20.4s\ntrn1 v6.4s, v6.4s, v23.4s\ntrn1 v7.4s, v7.4s, v22.4s\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\ntrn1 v0.4s, v0.4s, v16.4s\ntrn1 v1.4s, v1.4s, v17.4s\ntrn1 v2.4s, v2.4s, v18.4s\ntrn1 v3.4s, v3.4s, v19.4s\ntrn1 v4.4s, v4.4s, v20.4s\ntrn1 v5.4s, v5.4s, v21.4s\ntrn1 v6.4s, v6.4s, v22.4s\ntrn1 v7.4s, v7.4s, v23.4s\nret",
  "ll": "define <32 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 2>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 2>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 0, i32 4>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 0, i32 4>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 0, i32 8>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 0, i32 8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip1 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 0, i32 16>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 0, i32 16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn1 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip1 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 0, i32 32>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 0, i32 32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v1.2d, v1.2d, v3.2d\nzip1 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 0, i32 4, i32 2, i32 6>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip1 v1.2d, v1.2d, v5.2d\nzip1 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 0, i32 8, i32 2, i32 10>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\nzip1 v0.2d, v0.2d, v3.2d\nzip1 v1.2d, v1.2d, v2.2d\nret",
  "giasm": "ldp q2, q3, [sp]\nzip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 0, i32 16, i32 2, i32 18>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn1 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q3, q2, [sp, #144]\nzip1 v0.2d, v0.2d, v3.2d\nzip1 v1.2d, v1.2d, v2.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q2, q3, [sp, #144]\nzip1 v0.2d, v0.2d, v2.2d\nzip1 v1.2d, v1.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 0, i32 32, i32 2, i32 34>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip1 v2.2d, v2.2d, v6.2d\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "giasm": "zip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 0, i32 8, i32 2, i32 10, i32 4, i32 12, i32 6, i32 14>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v7.2d\nzip1 v3.2d, v3.2d, v6.2d\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn1 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q7, q6, [sp, #176]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v7.2d\nzip1 v3.2d, v3.2d, v6.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q6, q7, [sp, #176]\nzip1 v0.2d, v0.2d, v4.2d\nzip1 v1.2d, v1.2d, v5.2d\nzip1 v2.2d, v2.2d, v6.2d\nzip1 v3.2d, v3.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "trn1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\nzip1 v4.2d, v4.2d, v17.2d\nzip1 v0.2d, v0.2d, v19.2d\nzip1 v1.2d, v1.2d, v18.2d\nzip1 v5.2d, v5.2d, v16.2d\nzip1 v2.2d, v2.2d, v21.2d\nzip1 v3.2d, v3.2d, v20.2d\nzip1 v6.2d, v6.2d, v23.2d\nzip1 v7.2d, v7.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\nzip1 v0.2d, v0.2d, v16.2d\nzip1 v1.2d, v1.2d, v17.2d\nzip1 v2.2d, v2.2d, v18.2d\nzip1 v3.2d, v3.2d, v19.2d\nzip1 v4.2d, v4.2d, v20.2d\nzip1 v5.2d, v5.2d, v21.2d\nzip1 v6.2d, v6.2d, v22.2d\nzip1 v7.2d, v7.2d, v23.2d\nret",
  "ll": "define <16 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 0, i32 16, i32 2, i32 18, i32 4, i32 20, i32 6, i32 22, i32 8, i32 24, i32 10, i32 26, i32 12, i32 28, i32 14, i32 30>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn1 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #208]\nldp q19, q18, [sp, #144]\nldp q21, q20, [sp, #176]\nldp q23, q22, [sp, #240]\nzip1 v4.2d, v4.2d, v17.2d\nzip1 v0.2d, v0.2d, v19.2d\nzip1 v1.2d, v1.2d, v18.2d\nzip1 v5.2d, v5.2d, v16.2d\nzip1 v2.2d, v2.2d, v21.2d\nzip1 v3.2d, v3.2d, v20.2d\nzip1 v6.2d, v6.2d, v23.2d\nzip1 v7.2d, v7.2d, v22.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #144]\nldp q18, q19, [sp, #176]\nldp q20, q21, [sp, #208]\nldp q22, q23, [sp, #240]\nzip1 v0.2d, v0.2d, v16.2d\nzip1 v1.2d, v1.2d, v17.2d\nzip1 v2.2d, v2.2d, v18.2d\nzip1 v3.2d, v3.2d, v19.2d\nzip1 v4.2d, v4.2d, v20.2d\nzip1 v5.2d, v5.2d, v21.2d\nzip1 v6.2d, v6.2d, v22.2d\nzip1 v7.2d, v7.2d, v23.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn1 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 39,
  "gisize": 39,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #368]\nldp q19, q18, [sp, #112]\nldp q21, q20, [sp, #336]\nldp q23, q22, [sp, #80]\nzip1 v16.2d, v18.2d, v16.2d\nldp q24, q18, [sp, #304]\nzip1 v17.2d, v19.2d, v17.2d\nldp q25, q19, [sp, #48]\nzip1 v20.2d, v22.2d, v20.2d\nldp q26, q22, [sp, #272]\nzip1 v21.2d, v23.2d, v21.2d\nzip1 v18.2d, v19.2d, v18.2d\nstr q16, [x8, #240]\nzip1 v23.2d, v25.2d, v24.2d\nldp q19, q16, [sp, #16]\nstp q20, q17, [x8, #208]\nldp q20, q17, [sp, #240]\nzip1 v16.2d, v16.2d, v22.2d\nstp q18, q21, [x8, #176]\nzip1 v19.2d, v19.2d, v26.2d\nzip1 v7.2d, v7.2d, v17.2d\nldp q18, q17, [sp, #208]\nzip1 v6.2d, v6.2d, v20.2d\nstp q16, q23, [x8, #144]\nzip1 v5.2d, v5.2d, v17.2d\nzip1 v4.2d, v4.2d, v18.2d\nldp q17, q16, [sp, #176]\nstp q7, q19, [x8, #112]\nzip1 v3.2d, v3.2d, v16.2d\nldp q16, q7, [sp, #144]\nzip1 v2.2d, v2.2d, v17.2d\nstp q5, q6, [x8, #80]\nzip1 v1.2d, v1.2d, v7.2d\nzip1 v0.2d, v0.2d, v16.2d\nstp q3, q4, [x8, #48]\nstp q1, q2, [x8, #16]\nstr q0, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q18, q21, [sp, #144]\nldp q22, q24, [sp, #176]\nldp q16, q17, [sp, #16]\nzip1 v0.2d, v0.2d, v18.2d\nzip1 v1.2d, v1.2d, v21.2d\nldp q21, q26, [sp, #208]\nzip1 v2.2d, v2.2d, v22.2d\nzip1 v3.2d, v3.2d, v24.2d\nldp q19, q20, [sp, #48]\nldp q18, q23, [sp, #80]\nzip1 v4.2d, v4.2d, v21.2d\nstr q0, [x8]\nzip1 v5.2d, v5.2d, v26.2d\nldp q0, q21, [sp, #240]\nstp q1, q2, [x8, #16]\nldp q1, q2, [sp, #272]\nldp q22, q25, [sp, #112]\nzip1 v0.2d, v6.2d, v0.2d\nzip1 v6.2d, v7.2d, v21.2d\nstp q3, q4, [x8, #48]\nzip1 v1.2d, v16.2d, v1.2d\nldp q3, q4, [sp, #304]\nzip1 v2.2d, v17.2d, v2.2d\nzip1 v3.2d, v19.2d, v3.2d\nstp q5, q0, [x8, #80]\nzip1 v4.2d, v20.2d, v4.2d\nldp q0, q5, [sp, #336]\nstp q6, q1, [x8, #112]\nldp q1, q6, [sp, #368]\nzip1 v0.2d, v18.2d, v0.2d\nzip1 v5.2d, v23.2d, v5.2d\nstp q2, q3, [x8, #144]\nzip1 v1.2d, v22.2d, v1.2d\nzip1 v2.2d, v25.2d, v6.2d\nstp q4, q0, [x8, #176]\nstp q5, q1, [x8, #208]\nstr q2, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 0, i32 32, i32 2, i32 34, i32 4, i32 36, i32 6, i32 38, i32 8, i32 40, i32 10, i32 42, i32 12, i32 44, i32 14, i32 46, i32 16, i32 48, i32 18, i32 50, i32 20, i32 52, i32 22, i32 54, i32 24, i32 56, i32 26, i32 58, i32 28, i32 60, i32 30, i32 62>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 9,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "mov w8, v0.s[1]\nmov w9, v1.s[1]\nmov v0.b[1], w8\nmov v1.b[1], w9\ntrn2 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "trn2 v2",
  "codesize": 6,
  "thru": 12,
  "lat": 12,
  "sizelat": 12,
  "size": 2,
  "gisize": 7,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nmov v0.h[2], v1.h[1]\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v1.8b, v1.8b, v0.8b\ntrn2 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 1, i32 5>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 6 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[1]\nmov v0.b[4], v1.b[1]\nret",
  "giasm": "trn2 v0.8b, v0.8b, v1.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 1, i32 9>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "trn2 v2",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[1]\nmov v0.b[4], v1.b[1]\nret",
  "giasm": "trn2 v0.16b, v0.16b, v1.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 1, i32 17>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn2 v2",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b0, v0.b[1]\nmov v0.b[4], v2.b[1]\nret",
  "giasm": "trn2 v0.16b, v0.16b, v2.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 1, i32 33>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nuzp1 v1.8b, v1.8b, v0.8b\ntrn2 v0.8b, v0.8b, v1.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 4,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov b2, v0.b[1]\nmov v2.b[2], v1.b[1]\nmov v2.b[4], v0.b[3]\nmov v2.b[6], v1.b[3]\nfmov d0, d2\nret",
  "giasm": "trn2 v0.8b, v0.8b, v1.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "trn2 v4",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b2, v0.b[1]\nmov v2.b[2], v1.b[1]\nmov v2.b[4], v0.b[3]\nmov v2.b[6], v1.b[3]\nfmov d0, d2\nret",
  "giasm": "trn2 v0.16b, v0.16b, v1.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn2 v4",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[2], v2.b[1]\nmov v1.b[4], v0.b[3]\nmov v1.b[6], v2.b[3]\nfmov d0, d1\nret",
  "giasm": "trn2 v0.16b, v0.16b, v2.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "trn2 v0.8b, v0.8b, v1.8b\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "trn2 v8",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8b, v0.8b, v1.8b\nret",
  "giasm": "trn2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn2 v8",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8b, v0.8b, v2.8b\nret",
  "giasm": "trn2 v0.16b, v0.16b, v2.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "trn2 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "trn2 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn2 v16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.16b, v0.16b, v2.16b\nret",
  "giasm": "trn2 v0.16b, v0.16b, v2.16b\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "trn2 v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.16b, v1.16b, v3.16b\ntrn2 v0.16b, v0.16b, v2.16b\nret",
  "giasm": "trn2 v0.16b, v0.16b, v2.16b\ntrn2 v1.16b, v1.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nuzp1 v1.4h, v1.4h, v0.4h\ntrn2 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nmov v0.h[2], v1.h[1]\nret",
  "giasm": "trn2 v0.4h, v0.4h, v1.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 1, i32 5>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nmov v0.h[2], v1.h[1]\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 1, i32 9>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nmov v0.h[2], v2.h[1]\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 1, i32 17>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nmov v0.h[2], v4.h[1]\nret",
  "giasm": "trn2 v0.8h, v0.8h, v4.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 1, i32 33>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v4.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "trn2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.8h, v1.8h, v3.8h\ntrn2 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\ntrn2 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.8h, v1.8h, v5.8h\ntrn2 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v4.8h\ntrn2 v1.8h, v1.8h, v5.8h\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "trn2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn2 v2.8h, v2.8h, v6.8h\ntrn2 v0.8h, v0.8h, v4.8h\ntrn2 v1.8h, v1.8h, v5.8h\ntrn2 v3.8h, v3.8h, v7.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v4.8h\ntrn2 v1.8h, v1.8h, v5.8h\ntrn2 v2.8h, v2.8h, v6.8h\ntrn2 v3.8h, v3.8h, v7.8h\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 1, i32 5>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 1, i32 9>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 1, i32 17>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr d1, [sp]\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "ldr q1, [sp]\ntrn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 1, i32 33>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\ntrn2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "ldr q1, [sp]\ntrn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.4s, v1.4s, v3.4s\ntrn2 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\ntrn2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.4s, v1.4s, v5.4s\ntrn2 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\ntrn2 v0.4s, v0.4s, v3.4s\ntrn2 v1.4s, v1.4s, v2.4s\nret",
  "giasm": "ldp q2, q3, [sp]\ntrn2 v0.4s, v0.4s, v2.4s\ntrn2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "trn2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn2 v2.4s, v2.4s, v6.4s\ntrn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v2.4s, v2.4s, v6.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\ntrn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v2.4s, v2.4s, v7.4s\ntrn2 v3.4s, v3.4s, v6.4s\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\ntrn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v2.4s, v2.4s, v6.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "trn2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\ntrn2 v4.4s, v4.4s, v17.4s\ntrn2 v0.4s, v0.4s, v19.4s\ntrn2 v1.4s, v1.4s, v18.4s\ntrn2 v5.4s, v5.4s, v16.4s\ntrn2 v2.4s, v2.4s, v21.4s\ntrn2 v3.4s, v3.4s, v20.4s\ntrn2 v6.4s, v6.4s, v23.4s\ntrn2 v7.4s, v7.4s, v22.4s\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\ntrn2 v0.4s, v0.4s, v16.4s\ntrn2 v1.4s, v1.4s, v17.4s\ntrn2 v2.4s, v2.4s, v18.4s\ntrn2 v3.4s, v3.4s, v19.4s\ntrn2 v4.4s, v4.4s, v20.4s\ntrn2 v5.4s, v5.4s, v21.4s\ntrn2 v6.4s, v6.4s, v22.4s\ntrn2 v7.4s, v7.4s, v23.4s\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 1, i32 5>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 1, i32 9>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 1, i32 17>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip2 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip2 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 1, i32 33>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v1.2d, v1.2d, v3.2d\nzip2 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v1.2d, v1.2d, v5.2d\nzip2 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\nzip2 v0.2d, v0.2d, v3.2d\nzip2 v1.2d, v1.2d, v2.2d\nret",
  "giasm": "ldp q2, q3, [sp]\nzip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q3, q2, [sp, #144]\nzip2 v0.2d, v0.2d, v3.2d\nzip2 v1.2d, v1.2d, v2.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q2, q3, [sp, #144]\nzip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v6.2d\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v7.2d\nzip2 v3.2d, v3.2d, v6.2d\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q7, q6, [sp, #176]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v7.2d\nzip2 v3.2d, v3.2d, v6.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q6, q7, [sp, #176]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "trn2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\nzip2 v4.2d, v4.2d, v17.2d\nzip2 v0.2d, v0.2d, v19.2d\nzip2 v1.2d, v1.2d, v18.2d\nzip2 v5.2d, v5.2d, v16.2d\nzip2 v2.2d, v2.2d, v21.2d\nzip2 v3.2d, v3.2d, v20.2d\nzip2 v6.2d, v6.2d, v23.2d\nzip2 v7.2d, v7.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\nzip2 v0.2d, v0.2d, v16.2d\nzip2 v1.2d, v1.2d, v17.2d\nzip2 v2.2d, v2.2d, v18.2d\nzip2 v3.2d, v3.2d, v19.2d\nzip2 v4.2d, v4.2d, v20.2d\nzip2 v5.2d, v5.2d, v21.2d\nzip2 v6.2d, v6.2d, v22.2d\nzip2 v7.2d, v7.2d, v23.2d\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #208]\nldp q19, q18, [sp, #144]\nldp q21, q20, [sp, #176]\nldp q23, q22, [sp, #240]\nzip2 v4.2d, v4.2d, v17.2d\nzip2 v0.2d, v0.2d, v19.2d\nzip2 v1.2d, v1.2d, v18.2d\nzip2 v5.2d, v5.2d, v16.2d\nzip2 v2.2d, v2.2d, v21.2d\nzip2 v3.2d, v3.2d, v20.2d\nzip2 v6.2d, v6.2d, v23.2d\nzip2 v7.2d, v7.2d, v22.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #144]\nldp q18, q19, [sp, #176]\nldp q20, q21, [sp, #208]\nldp q22, q23, [sp, #240]\nzip2 v0.2d, v0.2d, v16.2d\nzip2 v1.2d, v1.2d, v17.2d\nzip2 v2.2d, v2.2d, v18.2d\nzip2 v3.2d, v3.2d, v19.2d\nzip2 v4.2d, v4.2d, v20.2d\nzip2 v5.2d, v5.2d, v21.2d\nzip2 v6.2d, v6.2d, v22.2d\nzip2 v7.2d, v7.2d, v23.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "trn2 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 39,
  "gisize": 39,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #368]\nldp q19, q18, [sp, #112]\nldp q21, q20, [sp, #336]\nldp q23, q22, [sp, #80]\nzip2 v16.2d, v18.2d, v16.2d\nldp q24, q18, [sp, #304]\nzip2 v17.2d, v19.2d, v17.2d\nldp q25, q19, [sp, #48]\nzip2 v20.2d, v22.2d, v20.2d\nldp q26, q22, [sp, #272]\nzip2 v21.2d, v23.2d, v21.2d\nzip2 v18.2d, v19.2d, v18.2d\nstr q16, [x8, #240]\nzip2 v23.2d, v25.2d, v24.2d\nldp q19, q16, [sp, #16]\nstp q20, q17, [x8, #208]\nldp q20, q17, [sp, #240]\nzip2 v16.2d, v16.2d, v22.2d\nstp q18, q21, [x8, #176]\nzip2 v19.2d, v19.2d, v26.2d\nzip2 v7.2d, v7.2d, v17.2d\nldp q18, q17, [sp, #208]\nzip2 v6.2d, v6.2d, v20.2d\nstp q16, q23, [x8, #144]\nzip2 v5.2d, v5.2d, v17.2d\nzip2 v4.2d, v4.2d, v18.2d\nldp q17, q16, [sp, #176]\nstp q7, q19, [x8, #112]\nzip2 v3.2d, v3.2d, v16.2d\nldp q16, q7, [sp, #144]\nzip2 v2.2d, v2.2d, v17.2d\nstp q5, q6, [x8, #80]\nzip2 v1.2d, v1.2d, v7.2d\nzip2 v0.2d, v0.2d, v16.2d\nstp q3, q4, [x8, #48]\nstp q1, q2, [x8, #16]\nstr q0, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q18, q21, [sp, #144]\nldp q22, q24, [sp, #176]\nldp q16, q17, [sp, #16]\nzip2 v0.2d, v0.2d, v18.2d\nzip2 v1.2d, v1.2d, v21.2d\nldp q21, q26, [sp, #208]\nzip2 v2.2d, v2.2d, v22.2d\nzip2 v3.2d, v3.2d, v24.2d\nldp q19, q20, [sp, #48]\nldp q18, q23, [sp, #80]\nzip2 v4.2d, v4.2d, v21.2d\nstr q0, [x8]\nzip2 v5.2d, v5.2d, v26.2d\nldp q0, q21, [sp, #240]\nstp q1, q2, [x8, #16]\nldp q1, q2, [sp, #272]\nldp q22, q25, [sp, #112]\nzip2 v0.2d, v6.2d, v0.2d\nzip2 v6.2d, v7.2d, v21.2d\nstp q3, q4, [x8, #48]\nzip2 v1.2d, v16.2d, v1.2d\nldp q3, q4, [sp, #304]\nzip2 v2.2d, v17.2d, v2.2d\nzip2 v3.2d, v19.2d, v3.2d\nstp q5, q0, [x8, #80]\nzip2 v4.2d, v20.2d, v4.2d\nldp q0, q5, [sp, #336]\nstp q6, q1, [x8, #112]\nldp q1, q6, [sp, #368]\nzip2 v0.2d, v18.2d, v0.2d\nzip2 v5.2d, v23.2d, v5.2d\nstp q2, q3, [x8, #144]\nzip2 v1.2d, v22.2d, v1.2d\nzip2 v2.2d, v25.2d, v6.2d\nstp q4, q0, [x8, #176]\nstp q5, q1, [x8, #208]\nstr q2, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 1, i32 5>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v1.8h, v0.8h, v1.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 1, i32 9>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn2 v1.8h, v0.8h, v2.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 1, i32 17>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn2 v2",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v4.4h\nret",
  "giasm": "trn2 v1.8h, v0.8h, v4.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 1, i32 33>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v1.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v2.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn2 v4",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4h, v0.4h, v4.4h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\nret",
  "ll": "define <8 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn2 v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v4.8h\nret",
  "ll": "define <8 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "trn2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.8h, v1.8h, v3.8h\ntrn2 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v2.8h\ntrn2 v1.8h, v1.8h, v3.8h\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.8h, v1.8h, v5.8h\ntrn2 v0.8h, v0.8h, v4.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v4.8h\ntrn2 v1.8h, v1.8h, v5.8h\nret",
  "ll": "define <16 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "trn2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn2 v2.8h, v2.8h, v6.8h\ntrn2 v0.8h, v0.8h, v4.8h\ntrn2 v1.8h, v1.8h, v5.8h\ntrn2 v3.8h, v3.8h, v7.8h\nret",
  "giasm": "trn2 v0.8h, v0.8h, v4.8h\ntrn2 v1.8h, v1.8h, v5.8h\ntrn2 v2.8h, v2.8h, v6.8h\ntrn2 v3.8h, v3.8h, v7.8h\nret",
  "ll": "define <32 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 1, i32 5>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v2.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 1, i32 9>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2s, v0.2s, v4.2s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 1, i32 17>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr d1, [sp]\nzip2 v0.2s, v0.2s, v1.2s\nret",
  "giasm": "ldr q1, [sp]\ntrn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 1, i32 33>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\nret",
  "ll": "define <4 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\nret",
  "ll": "define <4 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\ntrn2 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "ldr q1, [sp]\ntrn2 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.4s, v1.4s, v3.4s\ntrn2 v0.4s, v0.4s, v2.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v2.4s\ntrn2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "trn2 v1.4s, v1.4s, v5.4s\ntrn2 v0.4s, v0.4s, v4.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\nret",
  "ll": "define <8 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\ntrn2 v0.4s, v0.4s, v3.4s\ntrn2 v1.4s, v1.4s, v2.4s\nret",
  "giasm": "ldp q2, q3, [sp]\ntrn2 v0.4s, v0.4s, v2.4s\ntrn2 v1.4s, v1.4s, v3.4s\nret",
  "ll": "define <8 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "trn2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "trn2 v2.4s, v2.4s, v6.4s\ntrn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "giasm": "trn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v2.4s, v2.4s, v6.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\ntrn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v2.4s, v2.4s, v7.4s\ntrn2 v3.4s, v3.4s, v6.4s\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\ntrn2 v0.4s, v0.4s, v4.4s\ntrn2 v1.4s, v1.4s, v5.4s\ntrn2 v2.4s, v2.4s, v6.4s\ntrn2 v3.4s, v3.4s, v7.4s\nret",
  "ll": "define <16 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "trn2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\ntrn2 v4.4s, v4.4s, v17.4s\ntrn2 v0.4s, v0.4s, v19.4s\ntrn2 v1.4s, v1.4s, v18.4s\ntrn2 v5.4s, v5.4s, v16.4s\ntrn2 v2.4s, v2.4s, v21.4s\ntrn2 v3.4s, v3.4s, v20.4s\ntrn2 v6.4s, v6.4s, v23.4s\ntrn2 v7.4s, v7.4s, v22.4s\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\ntrn2 v0.4s, v0.4s, v16.4s\ntrn2 v1.4s, v1.4s, v17.4s\ntrn2 v2.4s, v2.4s, v18.4s\ntrn2 v3.4s, v3.4s, v19.4s\ntrn2 v4.4s, v4.4s, v20.4s\ntrn2 v5.4s, v5.4s, v21.4s\ntrn2 v6.4s, v6.4s, v22.4s\ntrn2 v7.4s, v7.4s, v23.4s\nret",
  "ll": "define <32 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 1, i32 3>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 1, i32 3>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v2.2d\nret",
  "ll": "define <2 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 1, i32 5>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 1, i32 5>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "zip2 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nret",
  "ll": "define <2 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 1, i32 9>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 1, i32 9>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ldr q1, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nret",
  "giasm": "ldr q1, [sp]\nzip2 v0.2d, v0.2d, v1.2d\nret",
  "ll": "define <2 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 1, i32 17>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 1, i32 17>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn2 v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip2 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldr q1, [sp, #144]\nzip2 v0.2d, v0.2d, v1.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 1, i32 33>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 1, i32 33>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v1.2d, v1.2d, v3.2d\nzip2 v0.2d, v0.2d, v2.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 1, i32 5, i32 3, i32 7>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "zip2 v1.2d, v1.2d, v5.2d\nzip2 v0.2d, v0.2d, v4.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nret",
  "ll": "define <4 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 1, i32 9, i32 3, i32 11>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ldp q3, q2, [sp]\nzip2 v0.2d, v0.2d, v3.2d\nzip2 v1.2d, v1.2d, v2.2d\nret",
  "giasm": "ldp q2, q3, [sp]\nzip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nret",
  "ll": "define <4 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 1, i32 17, i32 3, i32 19>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn2 v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q3, q2, [sp, #144]\nzip2 v0.2d, v0.2d, v3.2d\nzip2 v1.2d, v1.2d, v2.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q2, q3, [sp, #144]\nzip2 v0.2d, v0.2d, v2.2d\nzip2 v1.2d, v1.2d, v3.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 1, i32 33, i32 3, i32 35>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "zip2 v2.2d, v2.2d, v6.2d\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "giasm": "zip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 1, i32 9, i32 3, i32 11, i32 5, i32 13, i32 7, i32 15>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ldp q4, q5, [sp]\nldp q7, q6, [sp, #32]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v7.2d\nzip2 v3.2d, v3.2d, v6.2d\nret",
  "giasm": "ldp q4, q5, [sp]\nldp q6, q7, [sp, #32]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nret",
  "ll": "define <8 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn2 v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q7, q6, [sp, #176]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v7.2d\nzip2 v3.2d, v3.2d, v6.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q4, q5, [sp, #144]\nldp q6, q7, [sp, #176]\nzip2 v0.2d, v0.2d, v4.2d\nzip2 v1.2d, v1.2d, v5.2d\nzip2 v2.2d, v2.2d, v6.2d\nzip2 v3.2d, v3.2d, v7.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "trn2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nldp q19, q18, [sp]\nldp q21, q20, [sp, #32]\nldp q23, q22, [sp, #96]\nzip2 v4.2d, v4.2d, v17.2d\nzip2 v0.2d, v0.2d, v19.2d\nzip2 v1.2d, v1.2d, v18.2d\nzip2 v5.2d, v5.2d, v16.2d\nzip2 v2.2d, v2.2d, v21.2d\nzip2 v3.2d, v3.2d, v20.2d\nzip2 v6.2d, v6.2d, v23.2d\nzip2 v7.2d, v7.2d, v22.2d\nret",
  "giasm": "ldp q16, q17, [sp]\nldp q18, q19, [sp, #32]\nldp q20, q21, [sp, #64]\nldp q22, q23, [sp, #96]\nzip2 v0.2d, v0.2d, v16.2d\nzip2 v1.2d, v1.2d, v17.2d\nzip2 v2.2d, v2.2d, v18.2d\nzip2 v3.2d, v3.2d, v19.2d\nzip2 v4.2d, v4.2d, v20.2d\nzip2 v5.2d, v5.2d, v21.2d\nzip2 v6.2d, v6.2d, v22.2d\nzip2 v7.2d, v7.2d, v23.2d\nret",
  "ll": "define <16 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 1, i32 17, i32 3, i32 19, i32 5, i32 21, i32 7, i32 23, i32 9, i32 25, i32 11, i32 27, i32 13, i32 29, i32 15, i32 31>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #208]\nldp q19, q18, [sp, #144]\nldp q21, q20, [sp, #176]\nldp q23, q22, [sp, #240]\nzip2 v4.2d, v4.2d, v17.2d\nzip2 v0.2d, v0.2d, v19.2d\nzip2 v1.2d, v1.2d, v18.2d\nzip2 v5.2d, v5.2d, v16.2d\nzip2 v2.2d, v2.2d, v21.2d\nzip2 v3.2d, v3.2d, v20.2d\nzip2 v6.2d, v6.2d, v23.2d\nzip2 v7.2d, v7.2d, v22.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q16, q17, [sp, #144]\nldp q18, q19, [sp, #176]\nldp q20, q21, [sp, #208]\nldp q22, q23, [sp, #240]\nzip2 v0.2d, v0.2d, v16.2d\nzip2 v1.2d, v1.2d, v17.2d\nzip2 v2.2d, v2.2d, v18.2d\nzip2 v3.2d, v3.2d, v19.2d\nzip2 v4.2d, v4.2d, v20.2d\nzip2 v5.2d, v5.2d, v21.2d\nzip2 v6.2d, v6.2d, v22.2d\nzip2 v7.2d, v7.2d, v23.2d\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "trn2 v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 39,
  "gisize": 39,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #368]\nldp q19, q18, [sp, #112]\nldp q21, q20, [sp, #336]\nldp q23, q22, [sp, #80]\nzip2 v16.2d, v18.2d, v16.2d\nldp q24, q18, [sp, #304]\nzip2 v17.2d, v19.2d, v17.2d\nldp q25, q19, [sp, #48]\nzip2 v20.2d, v22.2d, v20.2d\nldp q26, q22, [sp, #272]\nzip2 v21.2d, v23.2d, v21.2d\nzip2 v18.2d, v19.2d, v18.2d\nstr q16, [x8, #240]\nzip2 v23.2d, v25.2d, v24.2d\nldp q19, q16, [sp, #16]\nstp q20, q17, [x8, #208]\nldp q20, q17, [sp, #240]\nzip2 v16.2d, v16.2d, v22.2d\nstp q18, q21, [x8, #176]\nzip2 v19.2d, v19.2d, v26.2d\nzip2 v7.2d, v7.2d, v17.2d\nldp q18, q17, [sp, #208]\nzip2 v6.2d, v6.2d, v20.2d\nstp q16, q23, [x8, #144]\nzip2 v5.2d, v5.2d, v17.2d\nzip2 v4.2d, v4.2d, v18.2d\nldp q17, q16, [sp, #176]\nstp q7, q19, [x8, #112]\nzip2 v3.2d, v3.2d, v16.2d\nldp q16, q7, [sp, #144]\nzip2 v2.2d, v2.2d, v17.2d\nstp q5, q6, [x8, #80]\nzip2 v1.2d, v1.2d, v7.2d\nzip2 v0.2d, v0.2d, v16.2d\nstp q3, q4, [x8, #48]\nstp q1, q2, [x8, #16]\nstr q0, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q18, q21, [sp, #144]\nldp q22, q24, [sp, #176]\nldp q16, q17, [sp, #16]\nzip2 v0.2d, v0.2d, v18.2d\nzip2 v1.2d, v1.2d, v21.2d\nldp q21, q26, [sp, #208]\nzip2 v2.2d, v2.2d, v22.2d\nzip2 v3.2d, v3.2d, v24.2d\nldp q19, q20, [sp, #48]\nldp q18, q23, [sp, #80]\nzip2 v4.2d, v4.2d, v21.2d\nstr q0, [x8]\nzip2 v5.2d, v5.2d, v26.2d\nldp q0, q21, [sp, #240]\nstp q1, q2, [x8, #16]\nldp q1, q2, [sp, #272]\nldp q22, q25, [sp, #112]\nzip2 v0.2d, v6.2d, v0.2d\nzip2 v6.2d, v7.2d, v21.2d\nstp q3, q4, [x8, #48]\nzip2 v1.2d, v16.2d, v1.2d\nldp q3, q4, [sp, #304]\nzip2 v2.2d, v17.2d, v2.2d\nzip2 v3.2d, v19.2d, v3.2d\nstp q5, q0, [x8, #80]\nzip2 v4.2d, v20.2d, v4.2d\nldp q0, q5, [sp, #336]\nstp q6, q1, [x8, #112]\nldp q1, q6, [sp, #368]\nzip2 v0.2d, v18.2d, v0.2d\nzip2 v5.2d, v23.2d, v5.2d\nstp q2, q3, [x8, #144]\nzip2 v1.2d, v22.2d, v1.2d\nzip2 v2.2d, v25.2d, v6.2d\nstp q4, q0, [x8, #176]\nstp q5, q1, [x8, #208]\nstr q2, [x8, #240]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 1, i32 33, i32 3, i32 35, i32 5, i32 37, i32 7, i32 39, i32 9, i32 41, i32 11, i32 43, i32 13, i32 45, i32 15, i32 47, i32 17, i32 49, i32 19, i32 51, i32 21, i32 53, i32 23, i32 55, i32 25, i32 57, i32 27, i32 59, i32 29, i32 61, i32 31, i32 63>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %11:_(s8), %12:_(s8) = G_UNMERGE_VALUES %6:_(<2 x s8>) (in function: test)",
  "ll": "define <2 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nrev16 v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev16 v0.8b, v0.8b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev16 v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov b1, v0.b[1]\nmov v1.b[4], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev16 v0.16b, v0.16b\numov w8, v0.b[0]\numov w9, v0.b[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "reverse v4",
  "codesize": 6,
  "thru": 12,
  "lat": 12,
  "sizelat": 12,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, v1.s[1]\nfmov d2, d0\nfmov s0, w8\nmov w8, v2.s[1]\nmov v0.h[1], v1.h[0]\nmov v0.h[2], w8\nmov v0.h[3], v2.h[0]\nret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %17:_(s8), %18:_(s8) = G_UNMERGE_VALUES %6:_(<2 x s8>) (in function: test)",
  "ll": "define <4 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 6 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nrev32 v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov b1, v0.b[3]\nmov v1.b[2], v0.b[2]\nmov v1.b[4], v0.b[1]\nmov v1.b[6], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.8b, v0.8b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b1, v0.b[3]\nmov v1.b[2], v0.b[2]\nmov v1.b[4], v0.b[1]\nmov v1.b[6], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 10,
  "extrasize": 0,
  "asm": "mov b1, v0.b[3]\nmov v1.b[2], v0.b[2]\nmov v1.b[4], v0.b[1]\nmov v1.b[6], v0.b[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.16b, v0.16b\nmov b1, v0.b[1]\nmov b2, v0.b[2]\nfmov w8, s1\nmov b1, v0.b[3]\nmov v0.h[1], w8\nfmov w8, s2\nmov v0.h[2], w8\nfmov w8, s1\nmov v0.h[3], w8\nret",
  "ll": "define <4 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "reverse v8",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 16,
  "gisize": 6,
  "extrasize": 0,
  "asm": "umov w8, v1.h[3]\numov w9, v1.h[2]\nfmov s2, w8\numov w8, v1.h[1]\nmov v2.b[1], w9\nmov v2.b[2], w8\numov w8, v1.h[0]\nmov v2.b[3], w8\numov w8, v0.h[3]\nmov v2.b[4], w8\numov w8, v0.h[2]\nmov v2.b[5], w8\numov w8, v0.h[1]\nmov v2.b[6], w8\numov w8, v0.h[0]\nmov v2.b[7], w8\nfmov d0, d2\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nadrp x8, .LCPI0_0\nuzp1 v1.8b, v1.8b, v0.8b\nmov v0.d[1], v1.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nret",
  "ll": "define <8 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "reverse v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.8b, v0.8b\nret",
  "giasm": "rev64 v0.8b, v0.8b\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "reverse v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.8b, v0.8b\nret",
  "giasm": "rev64 v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "reverse v8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.8b, v0.8b\nret",
  "giasm": "rev64 v0.16b, v0.16b\nret",
  "ll": "define <8 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "reverse v16",
  "codesize": 30,
  "thru": 60,
  "lat": 60,
  "sizelat": 60,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <16 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 30 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "reverse v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.16b, v0.16b\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.16b, v0.16b\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "reverse v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.16b, v0.16b\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.16b, v0.16b\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <16 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "reverse v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.16b, v1.16b\nrev64 v2.16b, v0.16b\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.16b, v1.16b\nrev64 v2.16b, v0.16b\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <32 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "reverse v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.16b, v1.16b\nrev64 v2.16b, v0.16b\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.16b, v1.16b\nrev64 v2.16b, v0.16b\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nrev32 v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 5,
  "extrasize": 0,
  "asm": "mov h1, v0.h[1]\nmov v1.h[2], v0.h[0]\nfmov d0, d1\nret",
  "giasm": "rev32 v0.8h, v0.8h\numov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s0, w8\nmov v0.s[1], w9\nret",
  "ll": "define <2 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "mov w8, v1.s[1]\nfmov d2, d0\nfmov s0, w8\nmov w8, v2.s[1]\nmov v0.h[1], v1.h[0]\nmov v0.h[2], w8\nmov v0.h[3], v2.h[0]\nret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nadrp x8, .LCPI0_0\nuzp1 v1.4h, v1.4h, v0.4h\nmov v0.d[1], v1.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nret",
  "ll": "define <4 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.4h, v0.4h\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "reverse v8",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <8 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "reverse v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <32 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "reverse v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.2s, v0.2s\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "mov v1.d[1], v0.d[0]\nrev64 v0.4s, v1.4s\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 16,
  "gisize": 16,
  "extrasize": 0,
  "asm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "giasm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "ll": "define <32 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 16,
  "gisize": 16,
  "extrasize": 0,
  "asm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "giasm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v0.16b, v0.16b, v0.16b, #8\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v0.16b, v0.16b, v0.16b, #8\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "giasm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "ll": "define <16 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "giasm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 29,
  "gisize": 29,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v4.16b, v4.16b, v4.16b, #8\nstp q1, q0, [x8, #224]\next v0.16b, v5.16b, v5.16b, #8\next v1.16b, v6.16b, v6.16b, #8\nstr q2, [x8, #208]\nldp q2, q5, [sp]\next v6.16b, v7.16b, v7.16b, #8\nstp q4, q3, [x8, #176]\nldp q3, q4, [sp, #32]\next v2.16b, v2.16b, v2.16b, #8\next v5.16b, v5.16b, v5.16b, #8\nstp q1, q0, [x8, #144]\next v0.16b, v3.16b, v3.16b, #8\nldp q1, q3, [sp, #64]\next v4.16b, v4.16b, v4.16b, #8\nstp q2, q6, [x8, #112]\nldp q2, q6, [sp, #96]\next v1.16b, v1.16b, v1.16b, #8\next v3.16b, v3.16b, v3.16b, #8\nstp q0, q5, [x8, #80]\next v2.16b, v2.16b, v2.16b, #8\next v0.16b, v6.16b, v6.16b, #8\nstp q1, q4, [x8, #48]\nstp q2, q3, [x8, #16]\nstr q0, [x8]\nret",
  "giasm": "ldp q17, q16, [sp, #96]\next v7.16b, v7.16b, v7.16b, #8\nldp q19, q18, [sp, #64]\next v6.16b, v6.16b, v6.16b, #8\nldp q21, q20, [sp, #32]\next v5.16b, v5.16b, v5.16b, #8\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v17.16b, v17.16b, #8\next v4.16b, v4.16b, v4.16b, #8\next v18.16b, v18.16b, v18.16b, #8\next v19.16b, v19.16b, v19.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v20.16b, v20.16b, v20.16b, #8\next v21.16b, v21.16b, v21.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nstp q6, q5, [x8, #144]\nstr q16, [x8]\nldp q22, q16, [sp]\nstp q17, q18, [x8, #16]\nstp q19, q20, [x8, #48]\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v22.16b, v22.16b, #8\nstp q4, q3, [x8, #176]\nstp q2, q1, [x8, #208]\nstr q0, [x8, #240]\nstp q21, q16, [x8, #80]\nstp q17, q7, [x8, #112]\nret",
  "ll": "define <32 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 31,
  "gisize": 31,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v0.16b, v0.16b, v0.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v4.16b, v4.16b, v4.16b, #8\nstp q1, q0, [x8, #224]\next v0.16b, v5.16b, v5.16b, #8\next v1.16b, v6.16b, v6.16b, #8\nstr q2, [x8, #208]\nldp q2, q5, [sp, #16]\next v6.16b, v7.16b, v7.16b, #8\nstp q4, q3, [x8, #176]\nldp q3, q4, [sp, #48]\next v2.16b, v2.16b, v2.16b, #8\next v5.16b, v5.16b, v5.16b, #8\nstp q1, q0, [x8, #144]\next v0.16b, v3.16b, v3.16b, #8\nldp q1, q3, [sp, #80]\next v4.16b, v4.16b, v4.16b, #8\nstp q2, q6, [x8, #112]\nldp q2, q6, [sp, #112]\next v1.16b, v1.16b, v1.16b, #8\next v3.16b, v3.16b, v3.16b, #8\nstp q0, q5, [x8, #80]\next v2.16b, v2.16b, v2.16b, #8\next v0.16b, v6.16b, v6.16b, #8\nstp q1, q4, [x8, #48]\nstp q2, q3, [x8, #16]\nstr q0, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\next v7.16b, v7.16b, v7.16b, #8\nldp q19, q18, [sp, #80]\next v6.16b, v6.16b, v6.16b, #8\nldp q21, q20, [sp, #48]\next v5.16b, v5.16b, v5.16b, #8\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v17.16b, v17.16b, #8\next v4.16b, v4.16b, v4.16b, #8\next v18.16b, v18.16b, v18.16b, #8\next v19.16b, v19.16b, v19.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v20.16b, v20.16b, v20.16b, #8\next v21.16b, v21.16b, v21.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nstp q6, q5, [x8, #144]\nstr q16, [x8]\nldp q22, q16, [sp, #16]\nstp q17, q18, [x8, #16]\nstp q19, q20, [x8, #48]\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v22.16b, v22.16b, #8\nstp q4, q3, [x8, #176]\nstp q2, q1, [x8, #208]\nstr q0, [x8, #240]\nstp q21, q16, [x8, #80]\nstp q17, q7, [x8, #112]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v0.4h, v0.4h\nret",
  "ll": "define <2 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v1.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v1.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 3,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nret",
  "giasm": "rev32 v1.8h, v0.8h\nmov v0.h[0], v1.h[0]\nmov v0.h[1], v1.h[1]\nret",
  "ll": "define <2 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev32 v0.4h, v0.4h\nrev32 v1.4h, v1.4h\nzip1 v0.2s, v1.2s, v0.2s\nret",
  "giasm": "adrp x8, .LCPI0_0\nmov v0.d[1], v1.d[0]\nldr d1, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b }, v1.16b\nret",
  "ll": "define <4 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.4h, v0.4h\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "reverse v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.4h, v0.4h\nret",
  "giasm": "rev64 v0.8h, v0.8h\nret",
  "ll": "define <4 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "reverse v8",
  "codesize": 14,
  "thru": 28,
  "lat": 28,
  "sizelat": 28,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <8 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 14 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "reverse v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.8h, v0.8h\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <8 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "reverse v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.8h, v1.8h\nrev64 v2.8h, v0.8h\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <16 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "reverse v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <32 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "reverse v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.8h, v3.8h\nrev64 v2.8h, v2.8h\nrev64 v4.8h, v1.8h\nrev64 v5.8h, v0.8h\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <32 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.2s, v0.2s\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "rev64 v0.2s, v0.2s\nret",
  "giasm": "rev64 v0.4s, v0.4s\nret",
  "ll": "define <2 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 3,
  "extrasize": 0,
  "asm": "mov v1.d[1], v0.d[0]\nrev64 v0.4s, v1.4s\nret",
  "giasm": "adrp x8, .LCPI0_0\nldr q2, [x8, :lo12:.LCPI0_0]\ntbl v0.16b, { v0.16b, v1.16b }, v2.16b\nret",
  "ll": "define <4 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "rev64 v0.4s, v0.4s\next v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "giasm": "rev64 v1.4s, v1.4s\nrev64 v2.4s, v0.4s\next v0.16b, v1.16b, v1.16b, #8\next v1.16b, v2.16b, v2.16b, #8\nret",
  "ll": "define <8 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "giasm": "rev64 v3.4s, v3.4s\nrev64 v2.4s, v2.4s\nrev64 v4.4s, v1.4s\nrev64 v5.4s, v0.4s\next v0.16b, v3.16b, v3.16b, #8\next v1.16b, v2.16b, v2.16b, #8\next v2.16b, v4.16b, v4.16b, #8\next v3.16b, v5.16b, v5.16b, #8\nret",
  "ll": "define <16 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 16,
  "gisize": 16,
  "extrasize": 0,
  "asm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "giasm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "ll": "define <32 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 16,
  "gisize": 16,
  "extrasize": 0,
  "asm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "giasm": "rev64 v7.4s, v7.4s\nrev64 v6.4s, v6.4s\nrev64 v5.4s, v5.4s\nrev64 v4.4s, v4.4s\nrev64 v16.4s, v3.4s\nrev64 v17.4s, v2.4s\nrev64 v18.4s, v1.4s\nrev64 v19.4s, v0.4s\next v0.16b, v7.16b, v7.16b, #8\next v1.16b, v6.16b, v6.16b, #8\next v2.16b, v5.16b, v5.16b, #8\next v3.16b, v4.16b, v4.16b, #8\next v4.16b, v16.16b, v16.16b, #8\next v5.16b, v17.16b, v17.16b, #8\next v6.16b, v18.16b, v18.16b, #8\next v7.16b, v19.16b, v19.16b, #8\nret",
  "ll": "define <32 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <2 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "reverse v2",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v0.16b, v0.16b, v0.16b, #8\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v0.16b, v0.16b, v0.16b, #8\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <2 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 1, i32 0>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <2 x i32> <i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "reverse v4",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v2.16b, v1.16b, v1.16b, #8\next v1.16b, v0.16b, v0.16b, #8\nmov v0.16b, v2.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <4 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <4 x i32> <i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ext v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "reverse v8",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v5.16b, v3.16b, v3.16b, #8\next v4.16b, v2.16b, v2.16b, #8\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <8 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "giasm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "ll": "define <16 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "giasm": "ext v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nret",
  "ll": "define <16 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "reverse v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 10,
  "gisize": 10,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v19.16b, v7.16b, v7.16b, #8\next v18.16b, v6.16b, v6.16b, #8\next v17.16b, v5.16b, v5.16b, #8\next v16.16b, v4.16b, v4.16b, #8\next v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\next v7.16b, v0.16b, v0.16b, #8\nmov v0.16b, v19.16b\nmov v1.16b, v18.16b\nmov v2.16b, v17.16b\nmov v3.16b, v16.16b\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <16 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 29,
  "gisize": 29,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v4.16b, v4.16b, v4.16b, #8\nstp q1, q0, [x8, #224]\next v0.16b, v5.16b, v5.16b, #8\next v1.16b, v6.16b, v6.16b, #8\nstr q2, [x8, #208]\nldp q2, q5, [sp]\next v6.16b, v7.16b, v7.16b, #8\nstp q4, q3, [x8, #176]\nldp q3, q4, [sp, #32]\next v2.16b, v2.16b, v2.16b, #8\next v5.16b, v5.16b, v5.16b, #8\nstp q1, q0, [x8, #144]\next v0.16b, v3.16b, v3.16b, #8\nldp q1, q3, [sp, #64]\next v4.16b, v4.16b, v4.16b, #8\nstp q2, q6, [x8, #112]\nldp q2, q6, [sp, #96]\next v1.16b, v1.16b, v1.16b, #8\next v3.16b, v3.16b, v3.16b, #8\nstp q0, q5, [x8, #80]\next v2.16b, v2.16b, v2.16b, #8\next v0.16b, v6.16b, v6.16b, #8\nstp q1, q4, [x8, #48]\nstp q2, q3, [x8, #16]\nstr q0, [x8]\nret",
  "giasm": "ldp q17, q16, [sp, #96]\next v7.16b, v7.16b, v7.16b, #8\nldp q19, q18, [sp, #64]\next v6.16b, v6.16b, v6.16b, #8\nldp q21, q20, [sp, #32]\next v5.16b, v5.16b, v5.16b, #8\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v17.16b, v17.16b, #8\next v4.16b, v4.16b, v4.16b, #8\next v18.16b, v18.16b, v18.16b, #8\next v19.16b, v19.16b, v19.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v20.16b, v20.16b, v20.16b, #8\next v21.16b, v21.16b, v21.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nstp q6, q5, [x8, #144]\nstr q16, [x8]\nldp q22, q16, [sp]\nstp q17, q18, [x8, #16]\nstp q19, q20, [x8, #48]\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v22.16b, v22.16b, #8\nstp q4, q3, [x8, #176]\nstp q2, q1, [x8, #208]\nstr q0, [x8, #240]\nstp q21, q16, [x8, #80]\nstp q17, q7, [x8, #112]\nret",
  "ll": "define <32 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "reverse v32",
  "codesize": 16,
  "thru": 16,
  "lat": 16,
  "sizelat": 16,
  "size": 31,
  "gisize": 31,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\next v0.16b, v0.16b, v0.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v4.16b, v4.16b, v4.16b, #8\nstp q1, q0, [x8, #224]\next v0.16b, v5.16b, v5.16b, #8\next v1.16b, v6.16b, v6.16b, #8\nstr q2, [x8, #208]\nldp q2, q5, [sp, #16]\next v6.16b, v7.16b, v7.16b, #8\nstp q4, q3, [x8, #176]\nldp q3, q4, [sp, #48]\next v2.16b, v2.16b, v2.16b, #8\next v5.16b, v5.16b, v5.16b, #8\nstp q1, q0, [x8, #144]\next v0.16b, v3.16b, v3.16b, #8\nldp q1, q3, [sp, #80]\next v4.16b, v4.16b, v4.16b, #8\nstp q2, q6, [x8, #112]\nldp q2, q6, [sp, #112]\next v1.16b, v1.16b, v1.16b, #8\next v3.16b, v3.16b, v3.16b, #8\nstp q0, q5, [x8, #80]\next v2.16b, v2.16b, v2.16b, #8\next v0.16b, v6.16b, v6.16b, #8\nstp q1, q4, [x8, #48]\nstp q2, q3, [x8, #16]\nstr q0, [x8]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\next v7.16b, v7.16b, v7.16b, #8\nldp q19, q18, [sp, #80]\next v6.16b, v6.16b, v6.16b, #8\nldp q21, q20, [sp, #48]\next v5.16b, v5.16b, v5.16b, #8\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v17.16b, v17.16b, #8\next v4.16b, v4.16b, v4.16b, #8\next v18.16b, v18.16b, v18.16b, #8\next v19.16b, v19.16b, v19.16b, #8\next v3.16b, v3.16b, v3.16b, #8\next v20.16b, v20.16b, v20.16b, #8\next v21.16b, v21.16b, v21.16b, #8\next v2.16b, v2.16b, v2.16b, #8\next v1.16b, v1.16b, v1.16b, #8\next v0.16b, v0.16b, v0.16b, #8\nstp q6, q5, [x8, #144]\nstr q16, [x8]\nldp q22, q16, [sp, #16]\nstp q17, q18, [x8, #16]\nstp q19, q20, [x8, #48]\next v16.16b, v16.16b, v16.16b, #8\next v17.16b, v22.16b, v22.16b, #8\nstp q4, q3, [x8, #176]\nstp q2, q1, [x8, #208]\nstr q0, [x8, #240]\nstp q21, q16, [x8, #80]\nstp q17, q7, [x8, #112]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 16 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i8>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to legalize instruction: %11:_(s8), %12:_(s8) = G_UNMERGE_VALUES %6:_(<2 x s8>) (in function: test)",
  "ll": "define <2 x i8> @test(<2 x i8> %a, <2 x i8> %b) {\n  %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i8> %a, <2 x i8> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i8>",
  "variant": "splice2 v4",
  "codesize": 3,
  "thru": 3,
  "lat": 3,
  "sizelat": 3,
  "size": 1,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "giasm": "uzp1 v0.8b, v0.8b, v0.8b\nadrp x8, .LCPI0_0\nldr d1, [x8, :lo12:.LCPI0_0]\nmov v0.d[1], v0.d[0]\ntbl v0.16b, { v0.16b }, v1.16b\nushll v0.8h, v0.8b, #0\nret",
  "ll": "define <4 x i8> @test(<4 x i8> %a, <4 x i8> %b) {\n  %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 3 for instruction:   %r = shufflevector <4 x i8> %a, <4 x i8> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i8>",
  "variant": "splice2 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.8b, v0.8b, v0.8b, #2\nret",
  "giasm": "ext v0.8b, v0.8b, v0.8b, #2\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, <8 x i8> %b) {\n  %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i8> %a, <8 x i8> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i8>",
  "variant": "splice2 v16",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #2\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #2\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, <16 x i8> %b) {\n  %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <16 x i8> %a, <16 x i8> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i8>",
  "variant": "splice2 v32",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #2\next v1.16b, v1.16b, v0.16b, #2\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #2\next v1.16b, v1.16b, v0.16b, #2\nmov v0.16b, v2.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, <32 x i8> %b) {\n  %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <32 x i8> %a, <32 x i8> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i16>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "uzp1 v0.4h, v0.4h, v0.4h\nushll v0.4s, v0.4h, #0\nret",
  "ll": "define <2 x i16> @test(<2 x i16> %a, <2 x i16> %b) {\n  %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i16> %a, <2 x i16> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i16>",
  "variant": "splice2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "giasm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, <4 x i16> %b) {\n  %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i16> %a, <4 x i16> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i16>",
  "variant": "splice2 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #4\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #4\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, <8 x i16> %b) {\n  %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x i16> %a, <8 x i16> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i16>",
  "variant": "splice2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v0.16b, #4\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v0.16b, #4\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, <16 x i16> %b) {\n  %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x i16> %a, <16 x i16> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i16>",
  "variant": "splice2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v4.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v2.16b, #4\next v2.16b, v2.16b, v3.16b, #4\next v3.16b, v3.16b, v0.16b, #4\nmov v0.16b, v4.16b\nret",
  "giasm": "ext v4.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v2.16b, #4\next v2.16b, v2.16b, v3.16b, #4\next v3.16b, v3.16b, v0.16b, #4\nmov v0.16b, v4.16b\nret",
  "ll": "define <32 x i16> @test(<32 x i16> %a, <32 x i16> %b) {\n  %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x i16> %a, <32 x i16> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i32>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, <2 x i32> %b) {\n  %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i32> %a, <2 x i32> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i32>",
  "variant": "splice2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, <4 x i32> %b) {\n  %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x i32> %a, <4 x i32> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i32>",
  "variant": "splice2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, <8 x i32> %b) {\n  %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x i32> %a, <8 x i32> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i32>",
  "variant": "splice2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v4.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v0.16b, #8\nmov v0.16b, v4.16b\nret",
  "giasm": "ext v4.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v0.16b, #8\nmov v0.16b, v4.16b\nret",
  "ll": "define <16 x i32> @test(<16 x i32> %a, <16 x i32> %b) {\n  %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x i32> %a, <16 x i32> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i32>",
  "variant": "splice2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v16.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v4.16b, #8\next v4.16b, v4.16b, v5.16b, #8\next v5.16b, v5.16b, v6.16b, #8\next v6.16b, v6.16b, v7.16b, #8\next v7.16b, v7.16b, v0.16b, #8\nmov v0.16b, v16.16b\nret",
  "giasm": "ext v16.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v4.16b, #8\next v4.16b, v4.16b, v5.16b, #8\next v5.16b, v5.16b, v6.16b, #8\next v6.16b, v6.16b, v7.16b, #8\next v7.16b, v7.16b, v0.16b, #8\nmov v0.16b, v16.16b\nret",
  "ll": "define <32 x i32> @test(<32 x i32> %a, <32 x i32> %b) {\n  %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x i32> %a, <32 x i32> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x i64>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, <2 x i64> %b) {\n  %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x i64> %a, <2 x i64> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x i64>",
  "variant": "splice2 v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "mov v2.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "giasm": "mov v2.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, <4 x i64> %b) {\n  %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x i64> %a, <4 x i64> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x i64>",
  "variant": "splice2 v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "mov v4.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nret",
  "giasm": "mov v4.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i64> %a, <8 x i64> %b) {\n  %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x i64> %a, <8 x i64> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x i64>",
  "variant": "splice2 v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v16.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nmov v4.16b, v5.16b\nmov v5.16b, v6.16b\nmov v6.16b, v7.16b\nmov v7.16b, v16.16b\nret",
  "giasm": "mov v16.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nmov v4.16b, v5.16b\nmov v5.16b, v6.16b\nmov v6.16b, v7.16b\nmov v7.16b, v16.16b\nret",
  "ll": "define <16 x i64> @test(<16 x i64> %a, <16 x i64> %b) {\n  %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x i64> %a, <16 x i64> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x i64>",
  "variant": "splice2 v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\nstp q1, q2, [x8]\nstp q3, q4, [x8, #32]\nstp q5, q6, [x8, #64]\nstp q16, q0, [x8, #224]\nldp q16, q0, [sp, #80]\nstp q0, q17, [x8, #192]\nldp q17, q0, [sp, #48]\nstp q0, q16, [x8, #160]\nldp q16, q0, [sp, #16]\nstp q7, q16, [x8, #96]\nstp q0, q17, [x8, #128]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nstp q1, q2, [x8]\nldp q1, q2, [sp, #16]\nstp q3, q4, [x8, #32]\nstp q5, q6, [x8, #64]\nstp q7, q1, [x8, #96]\nldp q1, q3, [sp, #48]\nstp q2, q1, [x8, #128]\nldp q1, q2, [sp, #80]\nstp q3, q1, [x8, #160]\nldp q1, q3, [sp, #112]\nstp q2, q1, [x8, #192]\nstp q3, q0, [x8, #224]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x i64> @test(<32 x i64> %a, <32 x i64> %b) {\n  %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x i64> %a, <32 x i64> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x half>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x half> @test(<2 x half> %a, <2 x half> %b) {\n  %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x half> %a, <2 x half> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x half>",
  "variant": "splice2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "giasm": "ext v0.8b, v0.8b, v0.8b, #4\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, <4 x half> %b) {\n  %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x half> %a, <4 x half> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x half>",
  "variant": "splice2 v8",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #4\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #4\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, <8 x half> %b) {\n  %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <8 x half> %a, <8 x half> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x half>",
  "variant": "splice2 v16",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v0.16b, #4\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v0.16b, #4\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, <16 x half> %b) {\n  %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <16 x half> %a, <16 x half> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x half>",
  "variant": "splice2 v32",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v4.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v2.16b, #4\next v2.16b, v2.16b, v3.16b, #4\next v3.16b, v3.16b, v0.16b, #4\nmov v0.16b, v4.16b\nret",
  "giasm": "ext v4.16b, v0.16b, v1.16b, #4\next v1.16b, v1.16b, v2.16b, #4\next v2.16b, v2.16b, v3.16b, #4\next v3.16b, v3.16b, v0.16b, #4\nmov v0.16b, v4.16b\nret",
  "ll": "define <32 x half> @test(<32 x half> %a, <32 x half> %b) {\n  %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <32 x half> %a, <32 x half> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x half> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x float>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x float> @test(<2 x float> %a, <2 x float> %b) {\n  %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x float> %a, <2 x float> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x float>",
  "variant": "splice2 v4",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "giasm": "ext v0.16b, v0.16b, v0.16b, #8\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, <4 x float> %b) {\n  %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = shufflevector <4 x float> %a, <4 x float> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x float>",
  "variant": "splice2 v8",
  "codesize": 2,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "giasm": "ext v2.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v0.16b, #8\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, <8 x float> %b) {\n  %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 2 for instruction:   %r = shufflevector <8 x float> %a, <8 x float> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x float>",
  "variant": "splice2 v16",
  "codesize": 4,
  "thru": 4,
  "lat": 4,
  "sizelat": 4,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ext v4.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v0.16b, #8\nmov v0.16b, v4.16b\nret",
  "giasm": "ext v4.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v0.16b, #8\nmov v0.16b, v4.16b\nret",
  "ll": "define <16 x float> @test(<16 x float> %a, <16 x float> %b) {\n  %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 4 for instruction:   %r = shufflevector <16 x float> %a, <16 x float> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x float>",
  "variant": "splice2 v32",
  "codesize": 8,
  "thru": 8,
  "lat": 8,
  "sizelat": 8,
  "size": 8,
  "gisize": 8,
  "extrasize": 0,
  "asm": "ext v16.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v4.16b, #8\next v4.16b, v4.16b, v5.16b, #8\next v5.16b, v5.16b, v6.16b, #8\next v6.16b, v6.16b, v7.16b, #8\next v7.16b, v7.16b, v0.16b, #8\nmov v0.16b, v16.16b\nret",
  "giasm": "ext v16.16b, v0.16b, v1.16b, #8\next v1.16b, v1.16b, v2.16b, #8\next v2.16b, v2.16b, v3.16b, #8\next v3.16b, v3.16b, v4.16b, #8\next v4.16b, v4.16b, v5.16b, #8\next v5.16b, v5.16b, v6.16b, #8\next v6.16b, v6.16b, v7.16b, #8\next v7.16b, v7.16b, v0.16b, #8\nmov v0.16b, v16.16b\nret",
  "ll": "define <32 x float> @test(<32 x float> %a, <32 x float> %b) {\n  %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 8 for instruction:   %r = shufflevector <32 x float> %a, <32 x float> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x float> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<2 x double>",
  "variant": "splice2 v2",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define <2 x double> @test(<2 x double> %a, <2 x double> %b) {\n  %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 1>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <2 x double> %a, <2 x double> %b, <2 x i32> <i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<4 x double>",
  "variant": "splice2 v4",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "mov v2.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "giasm": "mov v2.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, <4 x double> %b) {\n  %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <4 x double> %a, <4 x double> %b, <4 x i32> <i32 2, i32 3, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<8 x double>",
  "variant": "splice2 v8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "mov v4.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nret",
  "giasm": "mov v4.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nret",
  "ll": "define <8 x double> @test(<8 x double> %a, <8 x double> %b) {\n  %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\n  ret <8 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <8 x double> %a, <8 x double> %b, <8 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<16 x double>",
  "variant": "splice2 v16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v16.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nmov v4.16b, v5.16b\nmov v5.16b, v6.16b\nmov v6.16b, v7.16b\nmov v7.16b, v16.16b\nret",
  "giasm": "mov v16.16b, v0.16b\nmov v0.16b, v1.16b\nmov v1.16b, v2.16b\nmov v2.16b, v3.16b\nmov v3.16b, v4.16b\nmov v4.16b, v5.16b\nmov v5.16b, v6.16b\nmov v6.16b, v7.16b\nmov v7.16b, v16.16b\nret",
  "ll": "define <16 x double> @test(<16 x double> %a, <16 x double> %b) {\n  %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\n  ret <16 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <16 x double> %a, <16 x double> %b, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x double> %r"
 },
 {
  "instr": "shuffleb",
  "ty": "<32 x double>",
  "variant": "splice2 v32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nldp q17, q16, [sp, #112]\nstp q1, q2, [x8]\nstp q3, q4, [x8, #32]\nstp q5, q6, [x8, #64]\nstp q16, q0, [x8, #224]\nldp q16, q0, [sp, #80]\nstp q0, q17, [x8, #192]\nldp q17, q0, [sp, #48]\nstp q0, q16, [x8, #160]\nldp q16, q0, [sp, #16]\nstp q7, q16, [x8, #96]\nstp q0, q17, [x8, #128]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\nstp q1, q2, [x8]\nldp q1, q2, [sp, #16]\nstp q3, q4, [x8, #32]\nstp q5, q6, [x8, #64]\nstp q7, q1, [x8, #96]\nldp q1, q3, [sp, #48]\nstp q2, q1, [x8, #128]\nldp q1, q2, [sp, #80]\nstp q3, q1, [x8, #160]\nldp q1, q3, [sp, #112]\nstp q2, q1, [x8, #192]\nstp q3, q0, [x8, #224]\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "ll": "define <32 x double> @test(<32 x double> %a, <32 x double> %b) {\n  %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\n  ret <32 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = shufflevector <32 x double> %a, <32 x double> %b, <32 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 0, i32 1>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.b[0], w0\nret",
  "giasm": "mov v0.b[0], w0\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, i8 %bs) {\n  %r = insertelement <8 x i8> %a, i8 %bs, i32 0\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x i8> %a, i8 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.b[1], w0\nret",
  "giasm": "mov v0.b[1], w0\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, i8 %bs) {\n  %r = insertelement <8 x i8> %a, i8 %bs, i32 1\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x i8> %a, i8 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 7,
  "gisize": 10,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfxil x8, x1, #0, #3\nstrb w0, [x8]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w1\nmov w8, #1                          // =0x1\nstr d0, [sp, #8]\nand x9, x9, #0x7\numull x8, w9, w8\nadd x9, sp, #8\nstrb w0, [x9, x8]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "ll": "define <8 x i8> @test(<8 x i8> %a, i8 %bs, i32 %c) {\n  %r = insertelement <8 x i8> %a, i8 %bs, i32 %c\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x i8> %a, i8 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<16 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.b[0], w0\nret",
  "giasm": "mov v0.b[0], w0\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, i8 %bs) {\n  %r = insertelement <16 x i8> %a, i8 %bs, i32 0\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <16 x i8> %a, i8 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<16 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.b[1], w0\nret",
  "giasm": "mov v0.b[1], w0\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, i8 %bs) {\n  %r = insertelement <16 x i8> %a, i8 %bs, i32 1\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <16 x i8> %a, i8 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<16 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 9,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfxil x8, x1, #0, #4\nstrb w0, [x8]\nldr q0, [sp], #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w1\nmov w8, #1                          // =0x1\nstr q0, [sp]\nand x9, x9, #0xf\numull x8, w9, w8\nmov x9, sp\nstrb w0, [x9, x8]\nldr q0, [sp], #16\nret",
  "ll": "define <16 x i8> @test(<16 x i8> %a, i8 %bs, i32 %c) {\n  %r = insertelement <16 x i8> %a, i8 %bs, i32 %c\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <16 x i8> %a, i8 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<32 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.b[0], w0\nret",
  "giasm": "mov v0.b[0], w0\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, i8 %bs) {\n  %r = insertelement <32 x i8> %a, i8 %bs, i32 0\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <32 x i8> %a, i8 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<32 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.b[1], w0\nret",
  "giasm": "mov v0.b[1], w0\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, i8 %bs) {\n  %r = insertelement <32 x i8> %a, i8 %bs, i32 1\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <32 x i8> %a, i8 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<32 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 14,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x1, #0x1f\nmov x9, sp\nstrb w0, [x9, x8]\nldp q0, q1, [sp], #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w1\nmov x10, sp\nstp q0, q1, [sp]\nand x8, x8, #0x1f\nlsl x9, x8, #1\nsub x8, x9, x8\nstrb w0, [x10, x8]\nldp q0, q1, [sp]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define <32 x i8> @test(<32 x i8> %a, i8 %bs, i32 %c) {\n  %r = insertelement <32 x i8> %a, i8 %bs, i32 %c\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <32 x i8> %a, i8 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[0], w0\nret",
  "giasm": "mov v0.h[0], w0\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, i16 %bs) {\n  %r = insertelement <4 x i16> %a, i16 %bs, i32 0\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x i16> %a, i16 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[1], w0\nret",
  "giasm": "mov v0.h[1], w0\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, i16 %bs) {\n  %r = insertelement <4 x i16> %a, i16 %bs, i32 1\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x i16> %a, i16 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 7,
  "gisize": 8,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfi x8, x1, #1, #2\nstrh w0, [x8]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w1\nadd x8, sp, #8\nstr d0, [sp, #8]\nand x9, x9, #0x3\nstrh w0, [x8, x9, lsl #1]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "ll": "define <4 x i16> @test(<4 x i16> %a, i16 %bs, i32 %c) {\n  %r = insertelement <4 x i16> %a, i16 %bs, i32 %c\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x i16> %a, i16 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[0], w0\nret",
  "giasm": "mov v0.h[0], w0\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, i16 %bs) {\n  %r = insertelement <8 x i16> %a, i16 %bs, i32 0\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x i16> %a, i16 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[1], w0\nret",
  "giasm": "mov v0.h[1], w0\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, i16 %bs) {\n  %r = insertelement <8 x i16> %a, i16 %bs, i32 1\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x i16> %a, i16 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x1, #1, #3\nstrh w0, [x8]\nldr q0, [sp], #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w1\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x7\nstrh w0, [x8, x9, lsl #1]\nldr q0, [sp], #16\nret",
  "ll": "define <8 x i16> @test(<8 x i16> %a, i16 %bs, i32 %c) {\n  %r = insertelement <8 x i16> %a, i16 %bs, i32 %c\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x i16> %a, i16 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<16 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[0], w0\nret",
  "giasm": "mov v0.h[0], w0\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, i16 %bs) {\n  %r = insertelement <16 x i16> %a, i16 %bs, i32 0\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <16 x i16> %a, i16 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<16 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[1], w0\nret",
  "giasm": "mov v0.h[1], w0\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, i16 %bs) {\n  %r = insertelement <16 x i16> %a, i16 %bs, i32 1\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <16 x i16> %a, i16 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<16 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 12,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x1, #0xf\nmov x9, sp\nstrh w0, [x9, x8, lsl #1]\nldp q0, q1, [sp], #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w1\nmov x9, sp\nstp q0, q1, [sp]\nand x8, x8, #0xf\nstrh w0, [x9, x8, lsl #1]\nldp q0, q1, [sp]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define <16 x i16> @test(<16 x i16> %a, i16 %bs, i32 %c) {\n  %r = insertelement <16 x i16> %a, i16 %bs, i32 %c\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <16 x i16> %a, i16 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[0], w0\nret",
  "giasm": "mov v0.s[0], w0\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, i32 %bs) {\n  %r = insertelement <2 x i32> %a, i32 %bs, i32 0\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x i32> %a, i32 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[1], w0\nret",
  "giasm": "mov v0.s[1], w0\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, i32 %bs) {\n  %r = insertelement <2 x i32> %a, i32 %bs, i32 1\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x i32> %a, i32 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 7,
  "gisize": 8,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfi x8, x1, #2, #1\nstr w0, [x8]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w1\nadd x8, sp, #8\nstr d0, [sp, #8]\nand x9, x9, #0x1\nstr w0, [x8, x9, lsl #2]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "ll": "define <2 x i32> @test(<2 x i32> %a, i32 %bs, i32 %c) {\n  %r = insertelement <2 x i32> %a, i32 %bs, i32 %c\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x i32> %a, i32 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[0], w0\nret",
  "giasm": "mov v0.s[0], w0\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, i32 %bs) {\n  %r = insertelement <4 x i32> %a, i32 %bs, i32 0\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x i32> %a, i32 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[1], w0\nret",
  "giasm": "mov v0.s[1], w0\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, i32 %bs) {\n  %r = insertelement <4 x i32> %a, i32 %bs, i32 1\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x i32> %a, i32 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x1, #2, #2\nstr w0, [x8]\nldr q0, [sp], #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w1\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x3\nstr w0, [x8, x9, lsl #2]\nldr q0, [sp], #16\nret",
  "ll": "define <4 x i32> @test(<4 x i32> %a, i32 %bs, i32 %c) {\n  %r = insertelement <4 x i32> %a, i32 %bs, i32 %c\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x i32> %a, i32 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[0], w0\nret",
  "giasm": "mov v0.s[0], w0\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, i32 %bs) {\n  %r = insertelement <8 x i32> %a, i32 %bs, i32 0\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x i32> %a, i32 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[1], w0\nret",
  "giasm": "mov v0.s[1], w0\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, i32 %bs) {\n  %r = insertelement <8 x i32> %a, i32 %bs, i32 1\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x i32> %a, i32 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 12,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x1, #0x7\nmov x9, sp\nstr w0, [x9, x8, lsl #2]\nldp q0, q1, [sp], #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w1\nmov x9, sp\nstp q0, q1, [sp]\nand x8, x8, #0x7\nstr w0, [x9, x8, lsl #2]\nldp q0, q1, [sp]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define <8 x i32> @test(<8 x i32> %a, i32 %bs, i32 %c) {\n  %r = insertelement <8 x i32> %a, i32 %bs, i32 %c\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x i32> %a, i32 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x i64>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[0], x0\nret",
  "giasm": "mov v0.d[0], x0\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, i64 %bs) {\n  %r = insertelement <2 x i64> %a, i64 %bs, i32 0\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x i64> %a, i64 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x i64>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[1], x0\nret",
  "giasm": "mov v0.d[1], x0\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, i64 %bs) {\n  %r = insertelement <2 x i64> %a, i64 %bs, i32 1\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x i64> %a, i64 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x i64>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x1, #3, #1\nstr x0, [x8]\nldr q0, [sp], #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w1\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x1\nstr x0, [x8, x9, lsl #3]\nldr q0, [sp], #16\nret",
  "ll": "define <2 x i64> @test(<2 x i64> %a, i64 %bs, i32 %c) {\n  %r = insertelement <2 x i64> %a, i64 %bs, i32 %c\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x i64> %a, i64 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x i64>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[0], x0\nret",
  "giasm": "mov v0.d[0], x0\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, i64 %bs) {\n  %r = insertelement <4 x i64> %a, i64 %bs, i32 0\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x i64> %a, i64 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x i64>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[1], x0\nret",
  "giasm": "mov v0.d[1], x0\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, i64 %bs) {\n  %r = insertelement <4 x i64> %a, i64 %bs, i32 1\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x i64> %a, i64 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x i64>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 12,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x1, #0x3\nmov x9, sp\nstr x0, [x9, x8, lsl #3]\nldp q0, q1, [sp], #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w1\nmov x9, sp\nstp q0, q1, [sp]\nand x8, x8, #0x3\nstr x0, [x9, x8, lsl #3]\nldp q0, q1, [sp]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define <4 x i64> @test(<4 x i64> %a, i64 %bs, i32 %c) {\n  %r = insertelement <4 x i64> %a, i64 %bs, i32 %c\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x i64> %a, i64 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.h, vl1\nmov z0.h, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i8> (<vscale x 8 x i8>, i8) (in function: test)",
  "ll": "define <vscale x 8 x i8> @test(<vscale x 8 x i8> %a, i8 %bs) {\n  %r = insertelement <vscale x 8 x i8> %a, i8 %bs, i32 0\n  ret <vscale x 8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x i8> %a, i8 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z1.h, #0, #1\nptrue p0.h\nmov z2.h, w8\ncmpeq p0.h, p0/z, z1.h, z2.h\nmov z0.h, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i8> (<vscale x 8 x i8>, i8) (in function: test)",
  "ll": "define <vscale x 8 x i8> @test(<vscale x 8 x i8> %a, i8 %bs) {\n  %r = insertelement <vscale x 8 x i8> %a, i8 %bs, i32 1\n  ret <vscale x 8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x i8> %a, i8 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z1.h, #0, #1\nmov w8, w1\nptrue p0.h\nmov z2.h, w8\ncmpeq p0.h, p0/z, z1.h, z2.h\nmov z0.h, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i8> (<vscale x 8 x i8>, i8, i32) (in function: test)",
  "ll": "define <vscale x 8 x i8> @test(<vscale x 8 x i8> %a, i8 %bs, i32 %c) {\n  %r = insertelement <vscale x 8 x i8> %a, i8 %bs, i32 %c\n  ret <vscale x 8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x i8> %a, i8 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 16 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.b, vl1\nmov z0.b, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i8> (<vscale x 16 x i8>, i8) (in function: test)",
  "ll": "define <vscale x 16 x i8> @test(<vscale x 16 x i8> %a, i8 %bs) {\n  %r = insertelement <vscale x 16 x i8> %a, i8 %bs, i32 0\n  ret <vscale x 16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 16 x i8> %a, i8 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 16 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 16 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z1.b, #0, #1\nptrue p0.b\nmov z2.b, w8\ncmpeq p0.b, p0/z, z1.b, z2.b\nmov z0.b, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i8> (<vscale x 16 x i8>, i8) (in function: test)",
  "ll": "define <vscale x 16 x i8> @test(<vscale x 16 x i8> %a, i8 %bs) {\n  %r = insertelement <vscale x 16 x i8> %a, i8 %bs, i32 1\n  ret <vscale x 16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 16 x i8> %a, i8 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 16 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 16 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z1.b, #0, #1\nmov w8, w1\nptrue p0.b\nmov z2.b, w8\ncmpeq p0.b, p0/z, z1.b, z2.b\nmov z0.b, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i8> (<vscale x 16 x i8>, i8, i32) (in function: test)",
  "ll": "define <vscale x 16 x i8> @test(<vscale x 16 x i8> %a, i8 %bs, i32 %c) {\n  %r = insertelement <vscale x 16 x i8> %a, i8 %bs, i32 %c\n  ret <vscale x 16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 16 x i8> %a, i8 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 16 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 32 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.b, vl1\nmov z0.b, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i8> (<vscale x 32 x i8>, i8) (in function: test)",
  "ll": "define <vscale x 32 x i8> @test(<vscale x 32 x i8> %a, i8 %bs) {\n  %r = insertelement <vscale x 32 x i8> %a, i8 %bs, i32 0\n  ret <vscale x 32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 32 x i8> %a, i8 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 32 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 32 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z2.b, #0, #1\nptrue p0.b\nmov z3.b, w8\ncmpeq p0.b, p0/z, z2.b, z3.b\nmov z0.b, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i8> (<vscale x 32 x i8>, i8) (in function: test)",
  "ll": "define <vscale x 32 x i8> @test(<vscale x 32 x i8> %a, i8 %bs) {\n  %r = insertelement <vscale x 32 x i8> %a, i8 %bs, i32 1\n  ret <vscale x 32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 32 x i8> %a, i8 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 32 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 32 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 15,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w1\nstr z1, [sp, #1, mul vl]\nincb x8, all, mul #2\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nstrb w0, [x9, x8]\nldr z0, [sp]\nldr z1, [sp, #1, mul vl]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i8> (<vscale x 32 x i8>, i8, i32) (in function: test)",
  "ll": "define <vscale x 32 x i8> @test(<vscale x 32 x i8> %a, i8 %bs, i32 %c) {\n  %r = insertelement <vscale x 32 x i8> %a, i8 %bs, i32 %c\n  ret <vscale x 32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 32 x i8> %a, i8 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 32 x i8> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl1\nmov z0.s, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i16> (<vscale x 4 x i16>, i16) (in function: test)",
  "ll": "define <vscale x 4 x i16> @test(<vscale x 4 x i16> %a, i16 %bs) {\n  %r = insertelement <vscale x 4 x i16> %a, i16 %bs, i32 0\n  ret <vscale x 4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x i16> %a, i16 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z1.s, #0, #1\nptrue p0.s\nmov z2.s, w8\ncmpeq p0.s, p0/z, z1.s, z2.s\nmov z0.s, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i16> (<vscale x 4 x i16>, i16) (in function: test)",
  "ll": "define <vscale x 4 x i16> @test(<vscale x 4 x i16> %a, i16 %bs) {\n  %r = insertelement <vscale x 4 x i16> %a, i16 %bs, i32 1\n  ret <vscale x 4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x i16> %a, i16 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z1.s, #0, #1\nmov w8, w1\nptrue p0.s\nmov z2.s, w8\ncmpeq p0.s, p0/z, z1.s, z2.s\nmov z0.s, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i16> (<vscale x 4 x i16>, i16, i32) (in function: test)",
  "ll": "define <vscale x 4 x i16> @test(<vscale x 4 x i16> %a, i16 %bs, i32 %c) {\n  %r = insertelement <vscale x 4 x i16> %a, i16 %bs, i32 %c\n  ret <vscale x 4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x i16> %a, i16 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.h, vl1\nmov z0.h, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i16> (<vscale x 8 x i16>, i16) (in function: test)",
  "ll": "define <vscale x 8 x i16> @test(<vscale x 8 x i16> %a, i16 %bs) {\n  %r = insertelement <vscale x 8 x i16> %a, i16 %bs, i32 0\n  ret <vscale x 8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x i16> %a, i16 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z1.h, #0, #1\nptrue p0.h\nmov z2.h, w8\ncmpeq p0.h, p0/z, z1.h, z2.h\nmov z0.h, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i16> (<vscale x 8 x i16>, i16) (in function: test)",
  "ll": "define <vscale x 8 x i16> @test(<vscale x 8 x i16> %a, i16 %bs) {\n  %r = insertelement <vscale x 8 x i16> %a, i16 %bs, i32 1\n  ret <vscale x 8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x i16> %a, i16 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z1.h, #0, #1\nmov w8, w1\nptrue p0.h\nmov z2.h, w8\ncmpeq p0.h, p0/z, z1.h, z2.h\nmov z0.h, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i16> (<vscale x 8 x i16>, i16, i32) (in function: test)",
  "ll": "define <vscale x 8 x i16> @test(<vscale x 8 x i16> %a, i16 %bs, i32 %c) {\n  %r = insertelement <vscale x 8 x i16> %a, i16 %bs, i32 %c\n  ret <vscale x 8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x i16> %a, i16 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 16 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.h, vl1\nmov z0.h, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i16> (<vscale x 16 x i16>, i16) (in function: test)",
  "ll": "define <vscale x 16 x i16> @test(<vscale x 16 x i16> %a, i16 %bs) {\n  %r = insertelement <vscale x 16 x i16> %a, i16 %bs, i32 0\n  ret <vscale x 16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 16 x i16> %a, i16 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 16 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 16 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z2.h, #0, #1\nptrue p0.h\nmov z3.h, w8\ncmpeq p0.h, p0/z, z2.h, z3.h\nmov z0.h, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i16> (<vscale x 16 x i16>, i16) (in function: test)",
  "ll": "define <vscale x 16 x i16> @test(<vscale x 16 x i16> %a, i16 %bs) {\n  %r = insertelement <vscale x 16 x i16> %a, i16 %bs, i32 1\n  ret <vscale x 16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 16 x i16> %a, i16 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 16 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 16 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 15,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w1\nstr z1, [sp, #1, mul vl]\nincb x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nstrh w0, [x9, x8, lsl #1]\nldr z0, [sp]\nldr z1, [sp, #1, mul vl]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i16> (<vscale x 16 x i16>, i16, i32) (in function: test)",
  "ll": "define <vscale x 16 x i16> @test(<vscale x 16 x i16> %a, i16 %bs, i32 %c) {\n  %r = insertelement <vscale x 16 x i16> %a, i16 %bs, i32 %c\n  ret <vscale x 16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 16 x i16> %a, i16 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 16 x i16> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl1\nmov z0.d, p0/m, x0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x i32> (<vscale x 2 x i32>, i32) (in function: test)",
  "ll": "define <vscale x 2 x i32> @test(<vscale x 2 x i32> %a, i32 %bs) {\n  %r = insertelement <vscale x 2 x i32> %a, i32 %bs, i32 0\n  ret <vscale x 2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x i32> %a, i32 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z1.d, #0, #1\nptrue p0.d\nmov z2.d, x8\ncmpeq p0.d, p0/z, z1.d, z2.d\nmov z0.d, p0/m, x0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x i32> (<vscale x 2 x i32>, i32) (in function: test)",
  "ll": "define <vscale x 2 x i32> @test(<vscale x 2 x i32> %a, i32 %bs) {\n  %r = insertelement <vscale x 2 x i32> %a, i32 %bs, i32 1\n  ret <vscale x 2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x i32> %a, i32 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z1.d, #0, #1\nmov w8, w1\nptrue p0.d\nmov z2.d, x8\ncmpeq p0.d, p0/z, z1.d, z2.d\nmov z0.d, p0/m, x0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x i32> (<vscale x 2 x i32>, i32, i32) (in function: test)",
  "ll": "define <vscale x 2 x i32> @test(<vscale x 2 x i32> %a, i32 %bs, i32 %c) {\n  %r = insertelement <vscale x 2 x i32> %a, i32 %bs, i32 %c\n  ret <vscale x 2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x i32> %a, i32 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl1\nmov z0.s, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i32> (<vscale x 4 x i32>, i32) (in function: test)",
  "ll": "define <vscale x 4 x i32> @test(<vscale x 4 x i32> %a, i32 %bs) {\n  %r = insertelement <vscale x 4 x i32> %a, i32 %bs, i32 0\n  ret <vscale x 4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x i32> %a, i32 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z1.s, #0, #1\nptrue p0.s\nmov z2.s, w8\ncmpeq p0.s, p0/z, z1.s, z2.s\nmov z0.s, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i32> (<vscale x 4 x i32>, i32) (in function: test)",
  "ll": "define <vscale x 4 x i32> @test(<vscale x 4 x i32> %a, i32 %bs) {\n  %r = insertelement <vscale x 4 x i32> %a, i32 %bs, i32 1\n  ret <vscale x 4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x i32> %a, i32 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z1.s, #0, #1\nmov w8, w1\nptrue p0.s\nmov z2.s, w8\ncmpeq p0.s, p0/z, z1.s, z2.s\nmov z0.s, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i32> (<vscale x 4 x i32>, i32, i32) (in function: test)",
  "ll": "define <vscale x 4 x i32> @test(<vscale x 4 x i32> %a, i32 %bs, i32 %c) {\n  %r = insertelement <vscale x 4 x i32> %a, i32 %bs, i32 %c\n  ret <vscale x 4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x i32> %a, i32 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl1\nmov z0.s, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i32> (<vscale x 8 x i32>, i32) (in function: test)",
  "ll": "define <vscale x 8 x i32> @test(<vscale x 8 x i32> %a, i32 %bs) {\n  %r = insertelement <vscale x 8 x i32> %a, i32 %bs, i32 0\n  ret <vscale x 8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x i32> %a, i32 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z2.s, #0, #1\nptrue p0.s\nmov z3.s, w8\ncmpeq p0.s, p0/z, z2.s, z3.s\nmov z0.s, p0/m, w0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i32> (<vscale x 8 x i32>, i32) (in function: test)",
  "ll": "define <vscale x 8 x i32> @test(<vscale x 8 x i32> %a, i32 %bs) {\n  %r = insertelement <vscale x 8 x i32> %a, i32 %bs, i32 1\n  ret <vscale x 8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x i32> %a, i32 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 15,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w1\nstr z1, [sp, #1, mul vl]\ninch x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nstr w0, [x9, x8, lsl #2]\nldr z0, [sp]\nldr z1, [sp, #1, mul vl]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i32> (<vscale x 8 x i32>, i32, i32) (in function: test)",
  "ll": "define <vscale x 8 x i32> @test(<vscale x 8 x i32> %a, i32 %bs, i32 %c) {\n  %r = insertelement <vscale x 8 x i32> %a, i32 %bs, i32 %c\n  ret <vscale x 8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x i32> %a, i32 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x i32> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x i64>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl1\nmov z0.d, p0/m, x0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x i64> (<vscale x 2 x i64>, i64) (in function: test)",
  "ll": "define <vscale x 2 x i64> @test(<vscale x 2 x i64> %a, i64 %bs) {\n  %r = insertelement <vscale x 2 x i64> %a, i64 %bs, i32 0\n  ret <vscale x 2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x i64> %a, i64 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x i64>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z1.d, #0, #1\nptrue p0.d\nmov z2.d, x8\ncmpeq p0.d, p0/z, z1.d, z2.d\nmov z0.d, p0/m, x0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x i64> (<vscale x 2 x i64>, i64) (in function: test)",
  "ll": "define <vscale x 2 x i64> @test(<vscale x 2 x i64> %a, i64 %bs) {\n  %r = insertelement <vscale x 2 x i64> %a, i64 %bs, i32 1\n  ret <vscale x 2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x i64> %a, i64 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x i64>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z1.d, #0, #1\nmov w8, w1\nptrue p0.d\nmov z2.d, x8\ncmpeq p0.d, p0/z, z1.d, z2.d\nmov z0.d, p0/m, x0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x i64> (<vscale x 2 x i64>, i64, i32) (in function: test)",
  "ll": "define <vscale x 2 x i64> @test(<vscale x 2 x i64> %a, i64 %bs, i32 %c) {\n  %r = insertelement <vscale x 2 x i64> %a, i64 %bs, i32 %c\n  ret <vscale x 2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x i64> %a, i64 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x i64>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl1\nmov z0.d, p0/m, x0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i64> (<vscale x 4 x i64>, i64) (in function: test)",
  "ll": "define <vscale x 4 x i64> @test(<vscale x 4 x i64> %a, i64 %bs) {\n  %r = insertelement <vscale x 4 x i64> %a, i64 %bs, i32 0\n  ret <vscale x 4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x i64> %a, i64 %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x i64>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z2.d, #0, #1\nptrue p0.d\nmov z3.d, x8\ncmpeq p0.d, p0/z, z2.d, z3.d\nmov z0.d, p0/m, x0\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i64> (<vscale x 4 x i64>, i64) (in function: test)",
  "ll": "define <vscale x 4 x i64> @test(<vscale x 4 x i64> %a, i64 %bs) {\n  %r = insertelement <vscale x 4 x i64> %a, i64 %bs, i32 1\n  ret <vscale x 4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x i64> %a, i64 %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x i64>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 15,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w1\nstr z1, [sp, #1, mul vl]\nincw x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nstr x0, [x9, x8, lsl #3]\nldr z0, [sp]\nldr z1, [sp, #1, mul vl]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i64> (<vscale x 4 x i64>, i64, i32) (in function: test)",
  "ll": "define <vscale x 4 x i64> @test(<vscale x 4 x i64> %a, i64 %bs, i32 %c) {\n  %r = insertelement <vscale x 4 x i64> %a, i64 %bs, i32 %c\n  ret <vscale x 4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x i64> %a, i64 %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x i64> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[0], v1.h[0]\nret",
  "giasm": "mov v0.h[0], v1.h[0]\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, half %bs) {\n  %r = insertelement <4 x half> %a, half %bs, i32 0\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <4 x half> %a, half %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[1], v1.h[0]\nret",
  "giasm": "mov v0.h[1], v1.h[0]\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, half %bs) {\n  %r = insertelement <4 x half> %a, half %bs, i32 1\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x half> %a, half %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 7,
  "gisize": 8,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfi x8, x0, #1, #2\nstr h1, [x8]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nadd x8, sp, #8\nstr d0, [sp, #8]\nand x9, x9, #0x3\nstr h1, [x8, x9, lsl #1]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "ll": "define <4 x half> @test(<4 x half> %a, half %bs, i32 %c) {\n  %r = insertelement <4 x half> %a, half %bs, i32 %c\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x half> %a, half %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[0], v1.h[0]\nret",
  "giasm": "mov v0.h[0], v1.h[0]\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, half %bs) {\n  %r = insertelement <8 x half> %a, half %bs, i32 0\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <8 x half> %a, half %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[1], v1.h[0]\nret",
  "giasm": "mov v0.h[1], v1.h[0]\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, half %bs) {\n  %r = insertelement <8 x half> %a, half %bs, i32 1\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x half> %a, half %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x0, #1, #3\nstr h1, [x8]\nldr q0, [sp], #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x7\nstr h1, [x8, x9, lsl #1]\nldr q0, [sp], #16\nret",
  "ll": "define <8 x half> @test(<8 x half> %a, half %bs, i32 %c) {\n  %r = insertelement <8 x half> %a, half %bs, i32 %c\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x half> %a, half %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<16 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[0], v2.h[0]\nret",
  "giasm": "mov v0.h[0], v2.h[0]\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, half %bs) {\n  %r = insertelement <16 x half> %a, half %bs, i32 0\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <16 x half> %a, half %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<16 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.h[1], v2.h[0]\nret",
  "giasm": "mov v0.h[1], v2.h[0]\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, half %bs) {\n  %r = insertelement <16 x half> %a, half %bs, i32 1\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <16 x half> %a, half %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<16 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 12,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0xf\nmov x9, sp\nstr h2, [x9, x8, lsl #1]\nldp q0, q1, [sp], #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nmov x9, sp\nstp q0, q1, [sp]\nand x8, x8, #0xf\nstr h2, [x9, x8, lsl #1]\nldp q0, q1, [sp]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define <16 x half> @test(<16 x half> %a, half %bs, i32 %c) {\n  %r = insertelement <16 x half> %a, half %bs, i32 %c\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <16 x half> %a, half %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[0], v1.s[0]\nret",
  "giasm": "mov v0.s[0], v1.s[0]\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, float %bs) {\n  %r = insertelement <2 x float> %a, float %bs, i32 0\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <2 x float> %a, float %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[1], v1.s[0]\nret",
  "giasm": "mov v0.s[1], v1.s[0]\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, float %bs) {\n  %r = insertelement <2 x float> %a, float %bs, i32 1\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x float> %a, float %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 7,
  "gisize": 8,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfi x8, x0, #2, #1\nstr s1, [x8]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nadd x8, sp, #8\nstr d0, [sp, #8]\nand x9, x9, #0x1\nstr s1, [x8, x9, lsl #2]\nldr d0, [sp, #8]\nadd sp, sp, #16\nret",
  "ll": "define <2 x float> @test(<2 x float> %a, float %bs, i32 %c) {\n  %r = insertelement <2 x float> %a, float %bs, i32 %c\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x float> %a, float %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[0], v1.s[0]\nret",
  "giasm": "mov v0.s[0], v1.s[0]\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, float %bs) {\n  %r = insertelement <4 x float> %a, float %bs, i32 0\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <4 x float> %a, float %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[1], v1.s[0]\nret",
  "giasm": "mov v0.s[1], v1.s[0]\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, float %bs) {\n  %r = insertelement <4 x float> %a, float %bs, i32 1\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x float> %a, float %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x0, #2, #2\nstr s1, [x8]\nldr q0, [sp], #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x3\nstr s1, [x8, x9, lsl #2]\nldr q0, [sp], #16\nret",
  "ll": "define <4 x float> @test(<4 x float> %a, float %bs, i32 %c) {\n  %r = insertelement <4 x float> %a, float %bs, i32 %c\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x float> %a, float %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[0], v2.s[0]\nret",
  "giasm": "mov v0.s[0], v2.s[0]\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, float %bs) {\n  %r = insertelement <8 x float> %a, float %bs, i32 0\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <8 x float> %a, float %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.s[1], v2.s[0]\nret",
  "giasm": "mov v0.s[1], v2.s[0]\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, float %bs) {\n  %r = insertelement <8 x float> %a, float %bs, i32 1\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x float> %a, float %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<8 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 12,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0x7\nmov x9, sp\nstr s2, [x9, x8, lsl #2]\nldp q0, q1, [sp], #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nmov x9, sp\nstp q0, q1, [sp]\nand x8, x8, #0x7\nstr s2, [x9, x8, lsl #2]\nldp q0, q1, [sp]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define <8 x float> @test(<8 x float> %a, float %bs, i32 %c) {\n  %r = insertelement <8 x float> %a, float %bs, i32 %c\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <8 x float> %a, float %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x double>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[0], v1.d[0]\nret",
  "giasm": "mov v0.d[0], v1.d[0]\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, double %bs) {\n  %r = insertelement <2 x double> %a, double %bs, i32 0\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <2 x double> %a, double %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x double>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[1], v1.d[0]\nret",
  "giasm": "mov v0.d[1], v1.d[0]\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, double %bs) {\n  %r = insertelement <2 x double> %a, double %bs, i32 1\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x double> %a, double %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<2 x double>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x0, #3, #1\nstr d1, [x8]\nldr q0, [sp], #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x1\nstr d1, [x8, x9, lsl #3]\nldr q0, [sp], #16\nret",
  "ll": "define <2 x double> @test(<2 x double> %a, double %bs, i32 %c) {\n  %r = insertelement <2 x double> %a, double %bs, i32 %c\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <2 x double> %a, double %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x double>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[0], v2.d[0]\nret",
  "giasm": "mov v0.d[0], v2.d[0]\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, double %bs) {\n  %r = insertelement <4 x double> %a, double %bs, i32 0\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <4 x double> %a, double %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x double>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov v0.d[1], v2.d[0]\nret",
  "giasm": "mov v0.d[1], v2.d[0]\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, double %bs) {\n  %r = insertelement <4 x double> %a, double %bs, i32 1\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x double> %a, double %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<4 x double>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 12,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0x3\nmov x9, sp\nstr d2, [x9, x8, lsl #3]\nldp q0, q1, [sp], #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nmov x9, sp\nstp q0, q1, [sp]\nand x8, x8, #0x3\nstr d2, [x9, x8, lsl #3]\nldp q0, q1, [sp]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define <4 x double> @test(<4 x double> %a, double %bs, i32 %c) {\n  %r = insertelement <4 x double> %a, double %bs, i32 %c\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <4 x double> %a, double %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, wzr\nindex z2.s, #0, #1\nptrue p0.s\nmov z3.s, w8\ncmpeq p0.s, p0/z, z2.s, z3.s\nmov z0.h, p0/m, h1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x half> (<vscale x 4 x half>, half) (in function: test)",
  "ll": "define <vscale x 4 x half> @test(<vscale x 4 x half> %a, half %bs) {\n  %r = insertelement <vscale x 4 x half> %a, half %bs, i32 0\n  ret <vscale x 4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <vscale x 4 x half> %a, half %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z2.s, #0, #1\nptrue p0.s\nmov z3.s, w8\ncmpeq p0.s, p0/z, z2.s, z3.s\nmov z0.h, p0/m, h1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x half> (<vscale x 4 x half>, half) (in function: test)",
  "ll": "define <vscale x 4 x half> @test(<vscale x 4 x half> %a, half %bs) {\n  %r = insertelement <vscale x 4 x half> %a, half %bs, i32 1\n  ret <vscale x 4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x half> %a, half %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z2.s, #0, #1\nmov w8, w0\nptrue p0.s\nmov z3.s, w8\ncmpeq p0.s, p0/z, z2.s, z3.s\nmov z0.h, p0/m, h1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x half> (<vscale x 4 x half>, half, i32) (in function: test)",
  "ll": "define <vscale x 4 x half> @test(<vscale x 4 x half> %a, half %bs, i32 %c) {\n  %r = insertelement <vscale x 4 x half> %a, half %bs, i32 %c\n  ret <vscale x 4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x half> %a, half %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.h, vl1\nmov z0.h, p0/m, z1.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x half> (<vscale x 8 x half>, half) (in function: test)",
  "ll": "define <vscale x 8 x half> @test(<vscale x 8 x half> %a, half %bs) {\n  %r = insertelement <vscale x 8 x half> %a, half %bs, i32 0\n  ret <vscale x 8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <vscale x 8 x half> %a, half %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z2.h, #0, #1\nptrue p0.h\nmov z3.h, w8\ncmpeq p0.h, p0/z, z2.h, z3.h\nmov z0.h, p0/m, h1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x half> (<vscale x 8 x half>, half) (in function: test)",
  "ll": "define <vscale x 8 x half> @test(<vscale x 8 x half> %a, half %bs) {\n  %r = insertelement <vscale x 8 x half> %a, half %bs, i32 1\n  ret <vscale x 8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x half> %a, half %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z2.h, #0, #1\nmov w8, w0\nptrue p0.h\nmov z3.h, w8\ncmpeq p0.h, p0/z, z2.h, z3.h\nmov z0.h, p0/m, h1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x half> (<vscale x 8 x half>, half, i32) (in function: test)",
  "ll": "define <vscale x 8 x half> @test(<vscale x 8 x half> %a, half %bs, i32 %c) {\n  %r = insertelement <vscale x 8 x half> %a, half %bs, i32 %c\n  ret <vscale x 8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x half> %a, half %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 16 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.h, vl1\nmov z0.h, p0/m, z2.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x half> (<vscale x 16 x half>, half) (in function: test)",
  "ll": "define <vscale x 16 x half> @test(<vscale x 16 x half> %a, half %bs) {\n  %r = insertelement <vscale x 16 x half> %a, half %bs, i32 0\n  ret <vscale x 16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <vscale x 16 x half> %a, half %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 16 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 16 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z3.h, #0, #1\nptrue p0.h\nmov z4.h, w8\ncmpeq p0.h, p0/z, z3.h, z4.h\nmov z0.h, p0/m, h2\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x half> (<vscale x 16 x half>, half) (in function: test)",
  "ll": "define <vscale x 16 x half> @test(<vscale x 16 x half> %a, half %bs) {\n  %r = insertelement <vscale x 16 x half> %a, half %bs, i32 1\n  ret <vscale x 16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 16 x half> %a, half %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 16 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 16 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 15,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\nincb x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nstr h2, [x9, x8, lsl #1]\nldr z0, [sp]\nldr z1, [sp, #1, mul vl]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x half> (<vscale x 16 x half>, half, i32) (in function: test)",
  "ll": "define <vscale x 16 x half> @test(<vscale x 16 x half> %a, half %bs, i32 %c) {\n  %r = insertelement <vscale x 16 x half> %a, half %bs, i32 %c\n  ret <vscale x 16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 16 x half> %a, half %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 16 x half> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov x8, xzr\nindex z2.d, #0, #1\nptrue p0.d\nmov z3.d, x8\ncmpeq p0.d, p0/z, z2.d, z3.d\nmov z0.s, p0/m, s1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x float> (<vscale x 2 x float>, float) (in function: test)",
  "ll": "define <vscale x 2 x float> @test(<vscale x 2 x float> %a, float %bs) {\n  %r = insertelement <vscale x 2 x float> %a, float %bs, i32 0\n  ret <vscale x 2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <vscale x 2 x float> %a, float %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z2.d, #0, #1\nptrue p0.d\nmov z3.d, x8\ncmpeq p0.d, p0/z, z2.d, z3.d\nmov z0.s, p0/m, s1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x float> (<vscale x 2 x float>, float) (in function: test)",
  "ll": "define <vscale x 2 x float> @test(<vscale x 2 x float> %a, float %bs) {\n  %r = insertelement <vscale x 2 x float> %a, float %bs, i32 1\n  ret <vscale x 2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x float> %a, float %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z2.d, #0, #1\nmov w8, w0\nptrue p0.d\nmov z3.d, x8\ncmpeq p0.d, p0/z, z2.d, z3.d\nmov z0.s, p0/m, s1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x float> (<vscale x 2 x float>, float, i32) (in function: test)",
  "ll": "define <vscale x 2 x float> @test(<vscale x 2 x float> %a, float %bs, i32 %c) {\n  %r = insertelement <vscale x 2 x float> %a, float %bs, i32 %c\n  ret <vscale x 2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x float> %a, float %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl1\nmov z0.s, p0/m, z1.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x float> (<vscale x 4 x float>, float) (in function: test)",
  "ll": "define <vscale x 4 x float> @test(<vscale x 4 x float> %a, float %bs) {\n  %r = insertelement <vscale x 4 x float> %a, float %bs, i32 0\n  ret <vscale x 4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <vscale x 4 x float> %a, float %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z2.s, #0, #1\nptrue p0.s\nmov z3.s, w8\ncmpeq p0.s, p0/z, z2.s, z3.s\nmov z0.s, p0/m, s1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x float> (<vscale x 4 x float>, float) (in function: test)",
  "ll": "define <vscale x 4 x float> @test(<vscale x 4 x float> %a, float %bs) {\n  %r = insertelement <vscale x 4 x float> %a, float %bs, i32 1\n  ret <vscale x 4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x float> %a, float %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z2.s, #0, #1\nmov w8, w0\nptrue p0.s\nmov z3.s, w8\ncmpeq p0.s, p0/z, z2.s, z3.s\nmov z0.s, p0/m, s1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x float> (<vscale x 4 x float>, float, i32) (in function: test)",
  "ll": "define <vscale x 4 x float> @test(<vscale x 4 x float> %a, float %bs, i32 %c) {\n  %r = insertelement <vscale x 4 x float> %a, float %bs, i32 %c\n  ret <vscale x 4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x float> %a, float %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl1\nmov z0.s, p0/m, z2.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x float> (<vscale x 8 x float>, float) (in function: test)",
  "ll": "define <vscale x 8 x float> @test(<vscale x 8 x float> %a, float %bs) {\n  %r = insertelement <vscale x 8 x float> %a, float %bs, i32 0\n  ret <vscale x 8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <vscale x 8 x float> %a, float %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z3.s, #0, #1\nptrue p0.s\nmov z4.s, w8\ncmpeq p0.s, p0/z, z3.s, z4.s\nmov z0.s, p0/m, s2\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x float> (<vscale x 8 x float>, float) (in function: test)",
  "ll": "define <vscale x 8 x float> @test(<vscale x 8 x float> %a, float %bs) {\n  %r = insertelement <vscale x 8 x float> %a, float %bs, i32 1\n  ret <vscale x 8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x float> %a, float %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 8 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 15,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\ninch x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nstr s2, [x9, x8, lsl #2]\nldr z0, [sp]\nldr z1, [sp, #1, mul vl]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x float> (<vscale x 8 x float>, float, i32) (in function: test)",
  "ll": "define <vscale x 8 x float> @test(<vscale x 8 x float> %a, float %bs, i32 %c) {\n  %r = insertelement <vscale x 8 x float> %a, float %bs, i32 %c\n  ret <vscale x 8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 8 x float> %a, float %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 8 x float> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x double>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl1\nmov z0.d, p0/m, z1.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x double> (<vscale x 2 x double>, double) (in function: test)",
  "ll": "define <vscale x 2 x double> @test(<vscale x 2 x double> %a, double %bs) {\n  %r = insertelement <vscale x 2 x double> %a, double %bs, i32 0\n  ret <vscale x 2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <vscale x 2 x double> %a, double %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x double>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z2.d, #0, #1\nptrue p0.d\nmov z3.d, x8\ncmpeq p0.d, p0/z, z2.d, z3.d\nmov z0.d, p0/m, d1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x double> (<vscale x 2 x double>, double) (in function: test)",
  "ll": "define <vscale x 2 x double> @test(<vscale x 2 x double> %a, double %bs) {\n  %r = insertelement <vscale x 2 x double> %a, double %bs, i32 1\n  ret <vscale x 2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x double> %a, double %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 2 x double>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "index z2.d, #0, #1\nmov w8, w0\nptrue p0.d\nmov z3.d, x8\ncmpeq p0.d, p0/z, z2.d, z3.d\nmov z0.d, p0/m, d1\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x double> (<vscale x 2 x double>, double, i32) (in function: test)",
  "ll": "define <vscale x 2 x double> @test(<vscale x 2 x double> %a, double %bs, i32 %c) {\n  %r = insertelement <vscale x 2 x double> %a, double %bs, i32 %c\n  ret <vscale x 2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 2 x double> %a, double %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 2 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x double>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl1\nmov z0.d, p0/m, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x double> (<vscale x 4 x double>, double) (in function: test)",
  "ll": "define <vscale x 4 x double> @test(<vscale x 4 x double> %a, double %bs) {\n  %r = insertelement <vscale x 4 x double> %a, double %bs, i32 0\n  ret <vscale x 4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = insertelement <vscale x 4 x double> %a, double %bs, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x double>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, #1                          // =0x1\nindex z3.d, #0, #1\nptrue p0.d\nmov z4.d, x8\ncmpeq p0.d, p0/z, z3.d, z4.d\nmov z0.d, p0/m, d2\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x double> (<vscale x 4 x double>, double) (in function: test)",
  "ll": "define <vscale x 4 x double> @test(<vscale x 4 x double> %a, double %bs) {\n  %r = insertelement <vscale x 4 x double> %a, double %bs, i32 1\n  ret <vscale x 4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x double> %a, double %bs, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x double> %r"
 },
 {
  "instr": "insertelement",
  "ty": "<vscale x 4 x double>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 15,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\nincw x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nstr d2, [x9, x8, lsl #3]\nldr z0, [sp]\nldr z1, [sp, #1, mul vl]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x double> (<vscale x 4 x double>, double, i32) (in function: test)",
  "ll": "define <vscale x 4 x double> @test(<vscale x 4 x double> %a, double %bs, i32 %c) {\n  %r = insertelement <vscale x 4 x double> %a, double %bs, i32 %c\n  ret <vscale x 4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = insertelement <vscale x 4 x double> %a, double %bs, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret <vscale x 4 x double> %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.b[0]\nret",
  "giasm": "umov w0, v0.b[0]\nret",
  "ll": "define i8 @test(<8 x i8> %a) {\n  %r = extractelement <8 x i8> %a, i32 0\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x i8> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.b[1]\nret",
  "giasm": "umov w0, v0.b[1]\nret",
  "ll": "define i8 @test(<8 x i8> %a) {\n  %r = extractelement <8 x i8> %a, i32 1\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x i8> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 9,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfxil x8, x0, #0, #3\nldrb w0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nadd x8, sp, #8\nstr d0, [sp, #8]\nand x9, x9, #0x7\nlsl x10, x9, #1\nsub x9, x10, x9\nldrb w0, [x8, x9]\nadd sp, sp, #16\nret",
  "ll": "define i8 @test(<8 x i8> %a, i32 %c) {\n  %r = extractelement <8 x i8> %a, i32 %c\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x i8> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<16 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.b[0]\nret",
  "giasm": "umov w0, v0.b[0]\nret",
  "ll": "define i8 @test(<16 x i8> %a) {\n  %r = extractelement <16 x i8> %a, i32 0\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <16 x i8> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<16 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.b[1]\nret",
  "giasm": "umov w0, v0.b[1]\nret",
  "ll": "define i8 @test(<16 x i8> %a) {\n  %r = extractelement <16 x i8> %a, i32 1\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <16 x i8> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<16 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 9,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfxil x8, x0, #0, #4\nldrb w0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0xf\nlsl x10, x9, #1\nsub x9, x10, x9\nldrb w0, [x8, x9]\nadd sp, sp, #16\nret",
  "ll": "define i8 @test(<16 x i8> %a, i32 %c) {\n  %r = extractelement <16 x i8> %a, i32 %c\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <16 x i8> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<32 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.b[0]\nret",
  "giasm": "umov w0, v0.b[0]\nret",
  "ll": "define i8 @test(<32 x i8> %a) {\n  %r = extractelement <32 x i8> %a, i32 0\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <32 x i8> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<32 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.b[1]\nret",
  "giasm": "umov w0, v0.b[1]\nret",
  "ll": "define i8 @test(<32 x i8> %a) {\n  %r = extractelement <32 x i8> %a, i32 1\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <32 x i8> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<32 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 13,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0x1f\nmov x9, sp\nldrb w0, [x9, x8]\nadd sp, sp, #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nstp q0, q1, [sp]\nmov x10, sp\nand x8, x8, #0x1f\nlsl x9, x8, #1\nsub x8, x9, x8\nldrb w0, [x10, x8]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define i8 @test(<32 x i8> %a, i32 %c) {\n  %r = extractelement <32 x i8> %a, i32 %c\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <32 x i8> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.h[0]\nret",
  "giasm": "umov w0, v0.h[0]\nret",
  "ll": "define i16 @test(<4 x i16> %a) {\n  %r = extractelement <4 x i16> %a, i32 0\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x i16> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.h[1]\nret",
  "giasm": "umov w0, v0.h[1]\nret",
  "ll": "define i16 @test(<4 x i16> %a) {\n  %r = extractelement <4 x i16> %a, i32 1\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x i16> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfi x8, x0, #1, #2\nldrh w0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nadd x8, sp, #8\nstr d0, [sp, #8]\nand x9, x9, #0x3\nldrh w0, [x8, x9, lsl #1]\nadd sp, sp, #16\nret",
  "ll": "define i16 @test(<4 x i16> %a, i32 %c) {\n  %r = extractelement <4 x i16> %a, i32 %c\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x i16> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.h[0]\nret",
  "giasm": "umov w0, v0.h[0]\nret",
  "ll": "define i16 @test(<8 x i16> %a) {\n  %r = extractelement <8 x i16> %a, i32 0\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x i16> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.h[1]\nret",
  "giasm": "umov w0, v0.h[1]\nret",
  "ll": "define i16 @test(<8 x i16> %a) {\n  %r = extractelement <8 x i16> %a, i32 1\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x i16> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x0, #1, #3\nldrh w0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x7\nldrh w0, [x8, x9, lsl #1]\nadd sp, sp, #16\nret",
  "ll": "define i16 @test(<8 x i16> %a, i32 %c) {\n  %r = extractelement <8 x i16> %a, i32 %c\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x i16> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<16 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.h[0]\nret",
  "giasm": "umov w0, v0.h[0]\nret",
  "ll": "define i16 @test(<16 x i16> %a) {\n  %r = extractelement <16 x i16> %a, i32 0\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <16 x i16> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<16 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w0, v0.h[1]\nret",
  "giasm": "umov w0, v0.h[1]\nret",
  "ll": "define i16 @test(<16 x i16> %a) {\n  %r = extractelement <16 x i16> %a, i32 1\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <16 x i16> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<16 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 11,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0xf\nmov x9, sp\nldrh w0, [x9, x8, lsl #1]\nadd sp, sp, #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nstp q0, q1, [sp]\nmov x9, sp\nand x8, x8, #0xf\nldrh w0, [x9, x8, lsl #1]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define i16 @test(<16 x i16> %a, i32 %c) {\n  %r = extractelement <16 x i16> %a, i32 %c\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <16 x i16> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "fmov w0, s0\nret",
  "ll": "define i32 @test(<2 x i32> %a) {\n  %r = extractelement <2 x i32> %a, i32 0\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x i32> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov w0, v0.s[1]\nret",
  "giasm": "mov s0, v0.s[1]\nfmov w0, s0\nret",
  "ll": "define i32 @test(<2 x i32> %a) {\n  %r = extractelement <2 x i32> %a, i32 1\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x i32> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfi x8, x0, #2, #1\nldr w0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nadd x8, sp, #8\nstr d0, [sp, #8]\nand x9, x9, #0x1\nldr w0, [x8, x9, lsl #2]\nadd sp, sp, #16\nret",
  "ll": "define i32 @test(<2 x i32> %a, i32 %c) {\n  %r = extractelement <2 x i32> %a, i32 %c\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x i32> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "fmov w0, s0\nret",
  "ll": "define i32 @test(<4 x i32> %a) {\n  %r = extractelement <4 x i32> %a, i32 0\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x i32> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov w0, v0.s[1]\nret",
  "giasm": "mov s0, v0.s[1]\nfmov w0, s0\nret",
  "ll": "define i32 @test(<4 x i32> %a) {\n  %r = extractelement <4 x i32> %a, i32 1\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x i32> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x0, #2, #2\nldr w0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x3\nldr w0, [x8, x9, lsl #2]\nadd sp, sp, #16\nret",
  "ll": "define i32 @test(<4 x i32> %a, i32 %c) {\n  %r = extractelement <4 x i32> %a, i32 %c\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x i32> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "fmov w0, s0\nret",
  "ll": "define i32 @test(<8 x i32> %a) {\n  %r = extractelement <8 x i32> %a, i32 0\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x i32> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov w0, v0.s[1]\nret",
  "giasm": "mov s0, v0.s[1]\nfmov w0, s0\nret",
  "ll": "define i32 @test(<8 x i32> %a) {\n  %r = extractelement <8 x i32> %a, i32 1\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x i32> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 11,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0x7\nmov x9, sp\nldr w0, [x9, x8, lsl #2]\nadd sp, sp, #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nstp q0, q1, [sp]\nmov x9, sp\nand x8, x8, #0x7\nldr w0, [x9, x8, lsl #2]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define i32 @test(<8 x i32> %a, i32 %c) {\n  %r = extractelement <8 x i32> %a, i32 %c\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x i32> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x i64>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fmov x0, d0\nret",
  "giasm": "fmov x0, d0\nret",
  "ll": "define i64 @test(<2 x i64> %a) {\n  %r = extractelement <2 x i64> %a, i32 0\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x i64> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x i64>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov x0, v0.d[1]\nret",
  "giasm": "mov d0, v0.d[1]\nfmov x0, d0\nret",
  "ll": "define i64 @test(<2 x i64> %a) {\n  %r = extractelement <2 x i64> %a, i32 1\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x i64> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x i64>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x0, #3, #1\nldr x0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x1\nldr x0, [x8, x9, lsl #3]\nadd sp, sp, #16\nret",
  "ll": "define i64 @test(<2 x i64> %a, i32 %c) {\n  %r = extractelement <2 x i64> %a, i32 %c\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x i64> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x i64>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fmov x0, d0\nret",
  "giasm": "fmov x0, d0\nret",
  "ll": "define i64 @test(<4 x i64> %a) {\n  %r = extractelement <4 x i64> %a, i32 0\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x i64> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x i64>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 2,
  "extrasize": 0,
  "asm": "mov x0, v0.d[1]\nret",
  "giasm": "mov d0, v0.d[1]\nfmov x0, d0\nret",
  "ll": "define i64 @test(<4 x i64> %a) {\n  %r = extractelement <4 x i64> %a, i32 1\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x i64> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x i64>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 11,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0x3\nmov x9, sp\nldr x0, [x9, x8, lsl #3]\nadd sp, sp, #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nstp q0, q1, [sp]\nmov x9, sp\nand x8, x8, #0x3\nldr x0, [x9, x8, lsl #3]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define i64 @test(<4 x i64> %a, i32 %c) {\n  %r = extractelement <4 x i64> %a, i32 %c\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x i64> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i8 (<vscale x 8 x i8>) (in function: test)",
  "ll": "define i8 @test(<vscale x 8 x i8> %a) {\n  %r = extractelement <vscale x 8 x i8> %a, i32 0\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x i8> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "umov w0, v0.h[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i8 (<vscale x 8 x i8>) (in function: test)",
  "ll": "define i8 @test(<vscale x 8 x i8> %a) {\n  %r = extractelement <vscale x 8 x i8> %a, i32 1\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x i8> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.h, xzr, x8\nlastb w0, p0, z0.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: i8 (<vscale x 8 x i8>, i32) (in function: test)",
  "ll": "define i8 @test(<vscale x 8 x i8> %a, i32 %c) {\n  %r = extractelement <vscale x 8 x i8> %a, i32 %c\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x i8> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 16 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i8 (<vscale x 16 x i8>) (in function: test)",
  "ll": "define i8 @test(<vscale x 16 x i8> %a) {\n  %r = extractelement <vscale x 16 x i8> %a, i32 0\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 16 x i8> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 16 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "umov w0, v0.b[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i8 (<vscale x 16 x i8>) (in function: test)",
  "ll": "define i8 @test(<vscale x 16 x i8> %a) {\n  %r = extractelement <vscale x 16 x i8> %a, i32 1\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 16 x i8> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 16 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.b, xzr, x8\nlastb w0, p0, z0.b\nret",
  "giasm": "LLVM ERROR: unable to lower function: i8 (<vscale x 16 x i8>, i32) (in function: test)",
  "ll": "define i8 @test(<vscale x 16 x i8> %a, i32 %c) {\n  %r = extractelement <vscale x 16 x i8> %a, i32 %c\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 16 x i8> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 32 x i8>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i8 (<vscale x 32 x i8>) (in function: test)",
  "ll": "define i8 @test(<vscale x 32 x i8> %a) {\n  %r = extractelement <vscale x 32 x i8> %a, i32 0\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 32 x i8> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 32 x i8>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "umov w0, v0.b[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i8 (<vscale x 32 x i8>) (in function: test)",
  "ll": "define i8 @test(<vscale x 32 x i8> %a) {\n  %r = extractelement <vscale x 32 x i8> %a, i32 1\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 32 x i8> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 32 x i8>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 13,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\nincb x8, all, mul #2\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nldrb w0, [x9, x8]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: i8 (<vscale x 32 x i8>, i32) (in function: test)",
  "ll": "define i8 @test(<vscale x 32 x i8> %a, i32 %c) {\n  %r = extractelement <vscale x 32 x i8> %a, i32 %c\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 32 x i8> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i16 (<vscale x 4 x i16>) (in function: test)",
  "ll": "define i16 @test(<vscale x 4 x i16> %a) {\n  %r = extractelement <vscale x 4 x i16> %a, i32 0\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x i16> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w0, v0.s[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i16 (<vscale x 4 x i16>) (in function: test)",
  "ll": "define i16 @test(<vscale x 4 x i16> %a) {\n  %r = extractelement <vscale x 4 x i16> %a, i32 1\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x i16> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.s, xzr, x8\nlastb w0, p0, z0.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: i16 (<vscale x 4 x i16>, i32) (in function: test)",
  "ll": "define i16 @test(<vscale x 4 x i16> %a, i32 %c) {\n  %r = extractelement <vscale x 4 x i16> %a, i32 %c\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x i16> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i16 (<vscale x 8 x i16>) (in function: test)",
  "ll": "define i16 @test(<vscale x 8 x i16> %a) {\n  %r = extractelement <vscale x 8 x i16> %a, i32 0\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x i16> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "umov w0, v0.h[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i16 (<vscale x 8 x i16>) (in function: test)",
  "ll": "define i16 @test(<vscale x 8 x i16> %a) {\n  %r = extractelement <vscale x 8 x i16> %a, i32 1\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x i16> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.h, xzr, x8\nlastb w0, p0, z0.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: i16 (<vscale x 8 x i16>, i32) (in function: test)",
  "ll": "define i16 @test(<vscale x 8 x i16> %a, i32 %c) {\n  %r = extractelement <vscale x 8 x i16> %a, i32 %c\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x i16> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 16 x i16>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i16 (<vscale x 16 x i16>) (in function: test)",
  "ll": "define i16 @test(<vscale x 16 x i16> %a) {\n  %r = extractelement <vscale x 16 x i16> %a, i32 0\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 16 x i16> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 16 x i16>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "umov w0, v0.h[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i16 (<vscale x 16 x i16>) (in function: test)",
  "ll": "define i16 @test(<vscale x 16 x i16> %a) {\n  %r = extractelement <vscale x 16 x i16> %a, i32 1\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 16 x i16> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 16 x i16>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 13,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\nincb x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nldrh w0, [x9, x8, lsl #1]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: i16 (<vscale x 16 x i16>, i32) (in function: test)",
  "ll": "define i16 @test(<vscale x 16 x i16> %a, i32 %c) {\n  %r = extractelement <vscale x 16 x i16> %a, i32 %c\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 16 x i16> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i32 (<vscale x 2 x i32>) (in function: test)",
  "ll": "define i32 @test(<vscale x 2 x i32> %a) {\n  %r = extractelement <vscale x 2 x i32> %a, i32 0\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x i32> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w0, v0.s[2]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i32 (<vscale x 2 x i32>) (in function: test)",
  "ll": "define i32 @test(<vscale x 2 x i32> %a) {\n  %r = extractelement <vscale x 2 x i32> %a, i32 1\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x i32> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.d, xzr, x8\nlastb x0, p0, z0.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: i32 (<vscale x 2 x i32>, i32) (in function: test)",
  "ll": "define i32 @test(<vscale x 2 x i32> %a, i32 %c) {\n  %r = extractelement <vscale x 2 x i32> %a, i32 %c\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x i32> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i32 (<vscale x 4 x i32>) (in function: test)",
  "ll": "define i32 @test(<vscale x 4 x i32> %a) {\n  %r = extractelement <vscale x 4 x i32> %a, i32 0\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x i32> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w0, v0.s[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i32 (<vscale x 4 x i32>) (in function: test)",
  "ll": "define i32 @test(<vscale x 4 x i32> %a) {\n  %r = extractelement <vscale x 4 x i32> %a, i32 1\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x i32> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.s, xzr, x8\nlastb w0, p0, z0.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: i32 (<vscale x 4 x i32>, i32) (in function: test)",
  "ll": "define i32 @test(<vscale x 4 x i32> %a, i32 %c) {\n  %r = extractelement <vscale x 4 x i32> %a, i32 %c\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x i32> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x i32>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov w0, s0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i32 (<vscale x 8 x i32>) (in function: test)",
  "ll": "define i32 @test(<vscale x 8 x i32> %a) {\n  %r = extractelement <vscale x 8 x i32> %a, i32 0\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x i32> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x i32>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w0, v0.s[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i32 (<vscale x 8 x i32>) (in function: test)",
  "ll": "define i32 @test(<vscale x 8 x i32> %a) {\n  %r = extractelement <vscale x 8 x i32> %a, i32 1\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x i32> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x i32>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 13,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\ninch x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nldr w0, [x9, x8, lsl #2]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: i32 (<vscale x 8 x i32>, i32) (in function: test)",
  "ll": "define i32 @test(<vscale x 8 x i32> %a, i32 %c) {\n  %r = extractelement <vscale x 8 x i32> %a, i32 %c\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x i32> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x i64>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov x0, d0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i64 (<vscale x 2 x i64>) (in function: test)",
  "ll": "define i64 @test(<vscale x 2 x i64> %a) {\n  %r = extractelement <vscale x 2 x i64> %a, i32 0\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x i64> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x i64>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov x0, v0.d[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i64 (<vscale x 2 x i64>) (in function: test)",
  "ll": "define i64 @test(<vscale x 2 x i64> %a) {\n  %r = extractelement <vscale x 2 x i64> %a, i32 1\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x i64> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x i64>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.d, xzr, x8\nlastb x0, p0, z0.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: i64 (<vscale x 2 x i64>, i32) (in function: test)",
  "ll": "define i64 @test(<vscale x 2 x i64> %a, i32 %c) {\n  %r = extractelement <vscale x 2 x i64> %a, i32 %c\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x i64> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x i64>",
  "variant": "vecop0",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "fmov x0, d0\nret",
  "giasm": "LLVM ERROR: unable to lower function: i64 (<vscale x 4 x i64>) (in function: test)",
  "ll": "define i64 @test(<vscale x 4 x i64> %a) {\n  %r = extractelement <vscale x 4 x i64> %a, i32 0\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x i64> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x i64>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov x0, v0.d[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: i64 (<vscale x 4 x i64>) (in function: test)",
  "ll": "define i64 @test(<vscale x 4 x i64> %a) {\n  %r = extractelement <vscale x 4 x i64> %a, i32 1\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x i64> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x i64>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 13,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\nincw x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nldr x0, [x9, x8, lsl #3]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: i64 (<vscale x 4 x i64>, i32) (in function: test)",
  "ll": "define i64 @test(<vscale x 4 x i64> %a, i32 %c) {\n  %r = extractelement <vscale x 4 x i64> %a, i32 %c\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x i64> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define half @test(<4 x half> %a) {\n  %r = extractelement <4 x half> %a, i32 0\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <4 x half> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nret",
  "giasm": "mov h0, v0.h[1]\nret",
  "ll": "define half @test(<4 x half> %a) {\n  %r = extractelement <4 x half> %a, i32 1\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x half> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfi x8, x0, #1, #2\nldr h0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nadd x8, sp, #8\nstr d0, [sp, #8]\nand x9, x9, #0x3\nldr h0, [x8, x9, lsl #1]\nadd sp, sp, #16\nret",
  "ll": "define half @test(<4 x half> %a, i32 %c) {\n  %r = extractelement <4 x half> %a, i32 %c\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x half> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define half @test(<8 x half> %a) {\n  %r = extractelement <8 x half> %a, i32 0\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <8 x half> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nret",
  "giasm": "mov h0, v0.h[1]\nret",
  "ll": "define half @test(<8 x half> %a) {\n  %r = extractelement <8 x half> %a, i32 1\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x half> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x0, #1, #3\nldr h0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x7\nldr h0, [x8, x9, lsl #1]\nadd sp, sp, #16\nret",
  "ll": "define half @test(<8 x half> %a, i32 %c) {\n  %r = extractelement <8 x half> %a, i32 %c\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x half> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<16 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define half @test(<16 x half> %a) {\n  %r = extractelement <16 x half> %a, i32 0\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <16 x half> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<16 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov h0, v0.h[1]\nret",
  "giasm": "mov h0, v0.h[1]\nret",
  "ll": "define half @test(<16 x half> %a) {\n  %r = extractelement <16 x half> %a, i32 1\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <16 x half> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<16 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 11,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0xf\nmov x9, sp\nldr h0, [x9, x8, lsl #1]\nadd sp, sp, #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nstp q0, q1, [sp]\nmov x9, sp\nand x8, x8, #0xf\nldr h0, [x9, x8, lsl #1]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define half @test(<16 x half> %a, i32 %c) {\n  %r = extractelement <16 x half> %a, i32 %c\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <16 x half> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define float @test(<2 x float> %a) {\n  %r = extractelement <2 x float> %a, i32 0\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <2 x float> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov s0, v0.s[1]\nret",
  "giasm": "mov s0, v0.s[1]\nret",
  "ll": "define float @test(<2 x float> %a) {\n  %r = extractelement <2 x float> %a, i32 1\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x float> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nadd x8, sp, #8\nstr d0, [sp, #8]\nbfi x8, x0, #2, #1\nldr s0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nadd x8, sp, #8\nstr d0, [sp, #8]\nand x9, x9, #0x1\nldr s0, [x8, x9, lsl #2]\nadd sp, sp, #16\nret",
  "ll": "define float @test(<2 x float> %a, i32 %c) {\n  %r = extractelement <2 x float> %a, i32 %c\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x float> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define float @test(<4 x float> %a) {\n  %r = extractelement <4 x float> %a, i32 0\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <4 x float> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov s0, v0.s[1]\nret",
  "giasm": "mov s0, v0.s[1]\nret",
  "ll": "define float @test(<4 x float> %a) {\n  %r = extractelement <4 x float> %a, i32 1\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x float> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x0, #2, #2\nldr s0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x3\nldr s0, [x8, x9, lsl #2]\nadd sp, sp, #16\nret",
  "ll": "define float @test(<4 x float> %a, i32 %c) {\n  %r = extractelement <4 x float> %a, i32 %c\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x float> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define float @test(<8 x float> %a) {\n  %r = extractelement <8 x float> %a, i32 0\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <8 x float> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov s0, v0.s[1]\nret",
  "giasm": "mov s0, v0.s[1]\nret",
  "ll": "define float @test(<8 x float> %a) {\n  %r = extractelement <8 x float> %a, i32 1\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x float> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<8 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 11,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0x7\nmov x9, sp\nldr s0, [x9, x8, lsl #2]\nadd sp, sp, #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nstp q0, q1, [sp]\nmov x9, sp\nand x8, x8, #0x7\nldr s0, [x9, x8, lsl #2]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define float @test(<8 x float> %a, i32 %c) {\n  %r = extractelement <8 x float> %a, i32 %c\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <8 x float> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x double>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define double @test(<2 x double> %a) {\n  %r = extractelement <2 x double> %a, i32 0\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <2 x double> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x double>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov d0, v0.d[1]\nret",
  "giasm": "mov d0, v0.d[1]\nret",
  "ll": "define double @test(<2 x double> %a) {\n  %r = extractelement <2 x double> %a, i32 1\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x double> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<2 x double>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 6,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sub sp, sp, #16\nmov x8, sp\nstr q0, [sp]\nbfi x8, x0, #3, #1\nldr d0, [x8]\nadd sp, sp, #16\nret",
  "giasm": "sub sp, sp, #16\nmov w9, w0\nmov x8, sp\nstr q0, [sp]\nand x9, x9, #0x1\nldr d0, [x8, x9, lsl #3]\nadd sp, sp, #16\nret",
  "ll": "define double @test(<2 x double> %a, i32 %c) {\n  %r = extractelement <2 x double> %a, i32 %c\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <2 x double> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x double>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define double @test(<4 x double> %a) {\n  %r = extractelement <4 x double> %a, i32 0\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <4 x double> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x double>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov d0, v0.d[1]\nret",
  "giasm": "mov d0, v0.d[1]\nret",
  "ll": "define double @test(<4 x double> %a) {\n  %r = extractelement <4 x double> %a, i32 1\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x double> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<4 x double>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 5,
  "gisize": 11,
  "extrasize": 0,
  "asm": "stp q0, q1, [sp, #-32]!\nand x8, x0, #0x3\nmov x9, sp\nldr d0, [x9, x8, lsl #3]\nadd sp, sp, #32\nret",
  "giasm": "stp x29, x30, [sp, #-16]!           // 16-byte Folded Spill\nsub x9, sp, #48\nmov x29, sp\nand sp, x9, #0xffffffffffffffe0\nmov w8, w0\nstp q0, q1, [sp]\nmov x9, sp\nand x8, x8, #0x3\nldr d0, [x9, x8, lsl #3]\nmov sp, x29\nldp x29, x30, [sp], #16             // 16-byte Folded Reload\nret",
  "ll": "define double @test(<4 x double> %a, i32 %c) {\n  %r = extractelement <4 x double> %a, i32 %c\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <4 x double> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: half (<vscale x 4 x half>) (in function: test)",
  "ll": "define half @test(<vscale x 4 x half> %a) {\n  %r = extractelement <vscale x 4 x half> %a, i32 0\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <vscale x 4 x half> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov z0.s, z0.s[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: half (<vscale x 4 x half>) (in function: test)",
  "ll": "define half @test(<vscale x 4 x half> %a) {\n  %r = extractelement <vscale x 4 x half> %a, i32 1\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x half> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.s, xzr, x8\nlastb h0, p0, z0.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: half (<vscale x 4 x half>, i32) (in function: test)",
  "ll": "define half @test(<vscale x 4 x half> %a, i32 %c) {\n  %r = extractelement <vscale x 4 x half> %a, i32 %c\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x half> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: half (<vscale x 8 x half>) (in function: test)",
  "ll": "define half @test(<vscale x 8 x half> %a) {\n  %r = extractelement <vscale x 8 x half> %a, i32 0\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <vscale x 8 x half> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov z0.h, z0.h[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: half (<vscale x 8 x half>) (in function: test)",
  "ll": "define half @test(<vscale x 8 x half> %a) {\n  %r = extractelement <vscale x 8 x half> %a, i32 1\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x half> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.h, xzr, x8\nlastb h0, p0, z0.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: half (<vscale x 8 x half>, i32) (in function: test)",
  "ll": "define half @test(<vscale x 8 x half> %a, i32 %c) {\n  %r = extractelement <vscale x 8 x half> %a, i32 %c\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x half> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 16 x half>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: half (<vscale x 16 x half>) (in function: test)",
  "ll": "define half @test(<vscale x 16 x half> %a) {\n  %r = extractelement <vscale x 16 x half> %a, i32 0\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <vscale x 16 x half> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 16 x half>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov z0.h, z0.h[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: half (<vscale x 16 x half>) (in function: test)",
  "ll": "define half @test(<vscale x 16 x half> %a) {\n  %r = extractelement <vscale x 16 x half> %a, i32 1\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 16 x half> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 16 x half>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 13,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\nincb x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nldr h0, [x9, x8, lsl #1]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: half (<vscale x 16 x half>, i32) (in function: test)",
  "ll": "define half @test(<vscale x 16 x half> %a, i32 %c) {\n  %r = extractelement <vscale x 16 x half> %a, i32 %c\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 16 x half> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: float (<vscale x 2 x float>) (in function: test)",
  "ll": "define float @test(<vscale x 2 x float> %a) {\n  %r = extractelement <vscale x 2 x float> %a, i32 0\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <vscale x 2 x float> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov z0.d, z0.d[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: float (<vscale x 2 x float>) (in function: test)",
  "ll": "define float @test(<vscale x 2 x float> %a) {\n  %r = extractelement <vscale x 2 x float> %a, i32 1\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x float> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.d, xzr, x8\nlastb s0, p0, z0.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: float (<vscale x 2 x float>, i32) (in function: test)",
  "ll": "define float @test(<vscale x 2 x float> %a, i32 %c) {\n  %r = extractelement <vscale x 2 x float> %a, i32 %c\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x float> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: float (<vscale x 4 x float>) (in function: test)",
  "ll": "define float @test(<vscale x 4 x float> %a) {\n  %r = extractelement <vscale x 4 x float> %a, i32 0\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <vscale x 4 x float> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov z0.s, z0.s[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: float (<vscale x 4 x float>) (in function: test)",
  "ll": "define float @test(<vscale x 4 x float> %a) {\n  %r = extractelement <vscale x 4 x float> %a, i32 1\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x float> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.s, xzr, x8\nlastb s0, p0, z0.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: float (<vscale x 4 x float>, i32) (in function: test)",
  "ll": "define float @test(<vscale x 4 x float> %a, i32 %c) {\n  %r = extractelement <vscale x 4 x float> %a, i32 %c\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x float> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x float>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: float (<vscale x 8 x float>) (in function: test)",
  "ll": "define float @test(<vscale x 8 x float> %a) {\n  %r = extractelement <vscale x 8 x float> %a, i32 0\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <vscale x 8 x float> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x float>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov z0.s, z0.s[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: float (<vscale x 8 x float>) (in function: test)",
  "ll": "define float @test(<vscale x 8 x float> %a) {\n  %r = extractelement <vscale x 8 x float> %a, i32 1\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x float> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 8 x float>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 13,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\ninch x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nldr s0, [x9, x8, lsl #2]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: float (<vscale x 8 x float>, i32) (in function: test)",
  "ll": "define float @test(<vscale x 8 x float> %a, i32 %c) {\n  %r = extractelement <vscale x 8 x float> %a, i32 %c\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 8 x float> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x double>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: double (<vscale x 2 x double>) (in function: test)",
  "ll": "define double @test(<vscale x 2 x double> %a) {\n  %r = extractelement <vscale x 2 x double> %a, i32 0\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <vscale x 2 x double> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x double>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov z0.d, z0.d[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: double (<vscale x 2 x double>) (in function: test)",
  "ll": "define double @test(<vscale x 2 x double> %a) {\n  %r = extractelement <vscale x 2 x double> %a, i32 1\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x double> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 2 x double>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov w8, w0\nwhilels p0.d, xzr, x8\nlastb d0, p0, z0.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: double (<vscale x 2 x double>, i32) (in function: test)",
  "ll": "define double @test(<vscale x 2 x double> %a, i32 %c) {\n  %r = extractelement <vscale x 2 x double> %a, i32 %c\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 2 x double> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x double>",
  "variant": "vecop0",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: double (<vscale x 4 x double>) (in function: test)",
  "ll": "define double @test(<vscale x 4 x double> %a) {\n  %r = extractelement <vscale x 4 x double> %a, i32 0\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = extractelement <vscale x 4 x double> %a, i32 0\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x double>",
  "variant": "vecop1",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "mov z0.d, z0.d[1]\nret",
  "giasm": "LLVM ERROR: unable to lower function: double (<vscale x 4 x double>) (in function: test)",
  "ll": "define double @test(<vscale x 4 x double> %a) {\n  %r = extractelement <vscale x 4 x double> %a, i32 1\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x double> %a, i32 1\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "extractelement",
  "ty": "<vscale x 4 x double>",
  "variant": "vecopvar",
  "codesize": 1,
  "thru": 2,
  "lat": 2,
  "sizelat": 2,
  "size": 13,
  "gisize": -1,
  "extrasize": 0,
  "asm": "str x29, [sp, #-16]!                // 8-byte Folded Spill\naddvl sp, sp, #-2\nmov x8, #-1                         // =0xffffffffffffffff\nmov w9, w0\nstr z1, [sp, #1, mul vl]\nincw x8\nstr z0, [sp]\ncmp x9, x8\ncsel x8, x9, x8, lo\nmov x9, sp\nldr d0, [x9, x8, lsl #3]\naddvl sp, sp, #2\nldr x29, [sp], #16                  // 8-byte Folded Reload\nret",
  "giasm": "LLVM ERROR: unable to lower function: double (<vscale x 4 x double>, i32) (in function: test)",
  "ll": "define double @test(<vscale x 4 x double> %a, i32 %c) {\n  %r = extractelement <vscale x 4 x double> %a, i32 %c\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = extractelement <vscale x 4 x double> %a, i32 %c\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 }
]