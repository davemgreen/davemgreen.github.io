[
 {
  "instr": "zext",
  "ty": "i8",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and w0, w0, #0xff\nret",
  "giasm": "and w0, w0, #0xff\nret",
  "ll": "define i16 @test(i8 %a) {\n  %r = zext i8 %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext i8 %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "zext",
  "ty": "i8",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and w0, w0, #0xff\nret",
  "giasm": "and w0, w0, #0xff\nret",
  "ll": "define i32 @test(i8 %a) {\n  %r = zext i8 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext i8 %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "zext",
  "ty": "i8",
  "variant": "cast i64",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and x0, x0, #0xff\nret",
  "giasm": "and x0, x0, #0xff\nret",
  "ll": "define i64 @test(i8 %a) {\n  %r = zext i8 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = zext i8 %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "zext",
  "ty": "i16",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and w0, w0, #0xffff\nret",
  "giasm": "and w0, w0, #0xffff\nret",
  "ll": "define i32 @test(i16 %a) {\n  %r = zext i16 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext i16 %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "zext",
  "ty": "i16",
  "variant": "cast i64",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and x0, x0, #0xffff\nret",
  "giasm": "and x0, x0, #0xffff\nret",
  "ll": "define i64 @test(i16 %a) {\n  %r = zext i16 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = zext i16 %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "zext",
  "ty": "i32",
  "variant": "cast i64",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov w0, w0\nret",
  "giasm": "mov w0, w0\nret",
  "ll": "define i64 @test(i32 %a) {\n  %r = zext i32 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = zext i32 %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ushll v0.8h, v0.8b, #0\nret",
  "giasm": "ushll v0.8h, v0.8b, #0\nret",
  "ll": "define <8 x i16> @test(<8 x i8> %a) {\n  %r = zext <8 x i8> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <8 x i8> %a to <8 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ushll v0.8h, v0.8b, #0\nushll2 v1.4s, v0.8h, #0\nushll v0.4s, v0.4h, #0\nret",
  "giasm": "ushll v1.8h, v0.8b, #0\nushll v0.4s, v1.4h, #0\nushll2 v1.4s, v1.8h, #0\nret",
  "ll": "define <8 x i32> @test(<8 x i8> %a) {\n  %r = zext <8 x i8> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <8 x i8> %a to <8 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 7,
  "lat": 1,
  "sizelat": 1,
  "size": 7,
  "gisize": 7,
  "extrasize": 0,
  "asm": "ushll v0.8h, v0.8b, #0\nushll v1.4s, v0.4h, #0\nushll2 v2.4s, v0.8h, #0\nushll v0.2d, v1.2s, #0\nushll2 v3.2d, v2.4s, #0\nushll2 v1.2d, v1.4s, #0\nushll v2.2d, v2.2s, #0\nret",
  "giasm": "ushll v0.8h, v0.8b, #0\nushll v1.4s, v0.4h, #0\nushll2 v3.4s, v0.8h, #0\nushll v0.2d, v1.2s, #0\nushll2 v1.2d, v1.4s, #0\nushll v2.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nret",
  "ll": "define <8 x i64> @test(<8 x i8> %a) {\n  %r = zext <8 x i8> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <8 x i8> %a to <8 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ushll2 v1.8h, v0.16b, #0\nushll v0.8h, v0.8b, #0\nret",
  "giasm": "ushll v2.8h, v0.8b, #0\nushll2 v1.8h, v0.16b, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x i16> @test(<16 x i8> %a) {\n  %r = zext <16 x i8> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <16 x i8> %a to <16 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ushll v1.8h, v0.8b, #0\nushll2 v2.8h, v0.16b, #0\nushll v0.4s, v1.4h, #0\nushll2 v3.4s, v2.8h, #0\nushll2 v1.4s, v1.8h, #0\nushll v2.4s, v2.4h, #0\nret",
  "giasm": "ushll v1.8h, v0.8b, #0\nushll2 v3.8h, v0.16b, #0\nushll v0.4s, v1.4h, #0\nushll2 v1.4s, v1.8h, #0\nushll v2.4s, v3.4h, #0\nushll2 v3.4s, v3.8h, #0\nret",
  "ll": "define <16 x i32> @test(<16 x i8> %a) {\n  %r = zext <16 x i8> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <16 x i8> %a to <16 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 15,
  "lat": 1,
  "sizelat": 1,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "ushll v1.8h, v0.8b, #0\nushll2 v0.8h, v0.16b, #0\nushll v2.4s, v1.4h, #0\nushll2 v4.4s, v1.8h, #0\nushll v5.4s, v0.4h, #0\nushll2 v6.4s, v0.8h, #0\nushll2 v1.2d, v2.4s, #0\nushll v0.2d, v2.2s, #0\nushll2 v3.2d, v4.4s, #0\nushll v2.2d, v4.2s, #0\nushll v4.2d, v5.2s, #0\nushll2 v7.2d, v6.4s, #0\nushll2 v5.2d, v5.4s, #0\nushll v6.2d, v6.2s, #0\nret",
  "giasm": "ushll v1.8h, v0.8b, #0\nushll2 v0.8h, v0.16b, #0\nushll v2.4s, v1.4h, #0\nushll2 v3.4s, v1.8h, #0\nushll v5.4s, v0.4h, #0\nushll2 v7.4s, v0.8h, #0\nushll v0.2d, v2.2s, #0\nushll2 v1.2d, v2.4s, #0\nushll v2.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nushll v4.2d, v5.2s, #0\nushll2 v5.2d, v5.4s, #0\nushll v6.2d, v7.2s, #0\nushll2 v7.2d, v7.4s, #0\nret",
  "ll": "define <16 x i64> @test(<16 x i8> %a) {\n  %r = zext <16 x i8> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <16 x i8> %a to <16 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<32 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ushll v5.8h, v0.8b, #0\nushll2 v4.8h, v0.16b, #0\nushll2 v3.8h, v1.16b, #0\nushll v2.8h, v1.8b, #0\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ushll v4.8h, v0.8b, #0\nushll2 v5.8h, v0.16b, #0\nushll v2.8h, v1.8b, #0\nushll2 v3.8h, v1.16b, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <32 x i16> @test(<32 x i8> %a) {\n  %r = zext <32 x i8> %a to <32 x i16>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <32 x i8> %a to <32 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<32 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ushll v2.8h, v0.8b, #0\nushll2 v4.8h, v0.16b, #0\nushll v5.8h, v1.8b, #0\nushll2 v6.8h, v1.16b, #0\nushll2 v1.4s, v2.8h, #0\nushll v0.4s, v2.4h, #0\nushll2 v3.4s, v4.8h, #0\nushll v2.4s, v4.4h, #0\nushll v4.4s, v5.4h, #0\nushll2 v7.4s, v6.8h, #0\nushll2 v5.4s, v5.8h, #0\nushll v6.4s, v6.4h, #0\nret",
  "giasm": "ushll v2.8h, v0.8b, #0\nushll2 v3.8h, v0.16b, #0\nushll v5.8h, v1.8b, #0\nushll2 v7.8h, v1.16b, #0\nushll v0.4s, v2.4h, #0\nushll2 v1.4s, v2.8h, #0\nushll v2.4s, v3.4h, #0\nushll2 v3.4s, v3.8h, #0\nushll v4.4s, v5.4h, #0\nushll2 v5.4s, v5.8h, #0\nushll v6.4s, v7.4h, #0\nushll2 v7.4s, v7.8h, #0\nret",
  "ll": "define <32 x i32> @test(<32 x i8> %a) {\n  %r = zext <32 x i8> %a to <32 x i32>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <32 x i8> %a to <32 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<32 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 30,
  "lat": 1,
  "sizelat": 1,
  "size": 36,
  "gisize": 36,
  "extrasize": 0,
  "asm": "ushll2 v2.8h, v1.16b, #0\nushll2 v3.8h, v0.16b, #0\nushll v1.8h, v1.8b, #0\nushll v0.8h, v0.8b, #0\nushll2 v4.4s, v2.8h, #0\nushll2 v5.4s, v3.8h, #0\nushll v2.4s, v2.4h, #0\nushll2 v16.4s, v1.8h, #0\nushll v3.4s, v3.4h, #0\nushll v1.4s, v1.4h, #0\nushll2 v6.2d, v4.4s, #0\nushll v4.2d, v4.2s, #0\nushll2 v7.2d, v5.4s, #0\nushll v5.2d, v5.2s, #0\nstp q4, q6, [x8, #224]\nushll2 v6.2d, v2.4s, #0\nushll v2.2d, v2.2s, #0\nstp q5, q7, [x8, #96]\nushll2 v4.2d, v16.4s, #0\nushll2 v5.4s, v0.8h, #0\nushll v7.2d, v16.2s, #0\nushll v0.4s, v0.4h, #0\nstp q2, q6, [x8, #192]\nushll2 v6.2d, v3.4s, #0\nushll v2.2d, v3.2s, #0\nushll2 v3.2d, v5.4s, #0\nstp q7, q4, [x8, #160]\nushll v4.2d, v5.2s, #0\nushll2 v5.2d, v1.4s, #0\nstp q2, q6, [x8, #64]\nushll v1.2d, v1.2s, #0\nushll2 v2.2d, v0.4s, #0\nushll v0.2d, v0.2s, #0\nstp q4, q3, [x8, #32]\nstp q1, q5, [x8, #128]\nstp q0, q2, [x8]\nret",
  "giasm": "ushll v2.8h, v0.8b, #0\nushll2 v0.8h, v0.16b, #0\nushll v6.8h, v1.8b, #0\nushll2 v1.8h, v1.16b, #0\nushll v3.4s, v2.4h, #0\nushll2 v2.4s, v2.8h, #0\nushll v5.4s, v0.4h, #0\nushll2 v0.4s, v0.8h, #0\nushll v4.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nushll v7.2d, v2.2s, #0\nushll2 v2.2d, v2.4s, #0\nstp q4, q3, [x8]\nushll v4.2d, v5.2s, #0\nushll v3.4s, v6.4h, #0\nushll2 v5.2d, v5.4s, #0\nstp q7, q2, [x8, #32]\nushll v7.2d, v0.2s, #0\nushll2 v2.4s, v6.8h, #0\nushll2 v0.2d, v0.4s, #0\nstp q4, q5, [x8, #64]\nushll v4.2d, v3.2s, #0\nushll v5.4s, v1.4h, #0\nushll2 v3.2d, v3.4s, #0\nstp q7, q0, [x8, #96]\nushll v6.2d, v2.2s, #0\nushll2 v0.2d, v2.4s, #0\nushll2 v1.4s, v1.8h, #0\nushll v2.2d, v5.2s, #0\nstp q4, q3, [x8, #128]\nushll2 v3.2d, v5.4s, #0\nstp q6, q0, [x8, #160]\nushll v4.2d, v1.2s, #0\nushll2 v0.2d, v1.4s, #0\nstp q2, q3, [x8, #192]\nstp q4, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i8> %a) {\n  %r = zext <32 x i8> %a to <32 x i64>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <32 x i8> %a to <32 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<4 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ushll v0.4s, v0.4h, #0\nret",
  "giasm": "ushll v0.4s, v0.4h, #0\nret",
  "ll": "define <4 x i32> @test(<4 x i16> %a) {\n  %r = zext <4 x i16> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <4 x i16> %a to <4 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<4 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ushll v0.4s, v0.4h, #0\nushll2 v1.2d, v0.4s, #0\nushll v0.2d, v0.2s, #0\nret",
  "giasm": "ushll v1.4s, v0.4h, #0\nushll v0.2d, v1.2s, #0\nushll2 v1.2d, v1.4s, #0\nret",
  "ll": "define <4 x i64> @test(<4 x i16> %a) {\n  %r = zext <4 x i16> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <4 x i16> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ushll2 v1.4s, v0.8h, #0\nushll v0.4s, v0.4h, #0\nret",
  "giasm": "ushll v2.4s, v0.4h, #0\nushll2 v1.4s, v0.8h, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x i32> @test(<8 x i16> %a) {\n  %r = zext <8 x i16> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <8 x i16> %a to <8 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ushll v1.4s, v0.4h, #0\nushll2 v2.4s, v0.8h, #0\nushll v0.2d, v1.2s, #0\nushll2 v3.2d, v2.4s, #0\nushll2 v1.2d, v1.4s, #0\nushll v2.2d, v2.2s, #0\nret",
  "giasm": "ushll v1.4s, v0.4h, #0\nushll2 v3.4s, v0.8h, #0\nushll v0.2d, v1.2s, #0\nushll2 v1.2d, v1.4s, #0\nushll v2.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nret",
  "ll": "define <8 x i64> @test(<8 x i16> %a) {\n  %r = zext <8 x i16> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <8 x i16> %a to <8 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ushll v5.4s, v0.4h, #0\nushll2 v4.4s, v0.8h, #0\nushll2 v3.4s, v1.8h, #0\nushll v2.4s, v1.4h, #0\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ushll v4.4s, v0.4h, #0\nushll2 v5.4s, v0.8h, #0\nushll v2.4s, v1.4h, #0\nushll2 v3.4s, v1.8h, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <16 x i32> @test(<16 x i16> %a) {\n  %r = zext <16 x i16> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <16 x i16> %a to <16 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ushll v2.4s, v0.4h, #0\nushll2 v4.4s, v0.8h, #0\nushll v5.4s, v1.4h, #0\nushll2 v6.4s, v1.8h, #0\nushll2 v1.2d, v2.4s, #0\nushll v0.2d, v2.2s, #0\nushll2 v3.2d, v4.4s, #0\nushll v2.2d, v4.2s, #0\nushll v4.2d, v5.2s, #0\nushll2 v7.2d, v6.4s, #0\nushll2 v5.2d, v5.4s, #0\nushll v6.2d, v6.2s, #0\nret",
  "giasm": "ushll v2.4s, v0.4h, #0\nushll2 v3.4s, v0.8h, #0\nushll v5.4s, v1.4h, #0\nushll2 v7.4s, v1.8h, #0\nushll v0.2d, v2.2s, #0\nushll2 v1.2d, v2.4s, #0\nushll v2.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nushll v4.2d, v5.2s, #0\nushll2 v5.2d, v5.4s, #0\nushll v6.2d, v7.2s, #0\nushll2 v7.2d, v7.4s, #0\nret",
  "ll": "define <16 x i64> @test(<16 x i16> %a) {\n  %r = zext <16 x i16> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <16 x i16> %a to <16 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<2 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ushll v0.2d, v0.2s, #0\nret",
  "giasm": "ushll v0.2d, v0.2s, #0\nret",
  "ll": "define <2 x i64> @test(<2 x i32> %a) {\n  %r = zext <2 x i32> %a to <2 x i64>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <2 x i32> %a to <2 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<4 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ushll2 v1.2d, v0.4s, #0\nushll v0.2d, v0.2s, #0\nret",
  "giasm": "ushll v2.2d, v0.2s, #0\nushll2 v1.2d, v0.4s, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i32> %a) {\n  %r = zext <4 x i32> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <4 x i32> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ushll v5.2d, v0.2s, #0\nushll2 v4.2d, v0.4s, #0\nushll2 v3.2d, v1.4s, #0\nushll v2.2d, v1.2s, #0\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "ushll v4.2d, v0.2s, #0\nushll2 v5.2d, v0.4s, #0\nushll v2.2d, v1.2s, #0\nushll2 v3.2d, v1.4s, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i32> %a) {\n  %r = zext <8 x i32> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = zext <8 x i32> %a to <8 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "i8",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxtb w0, w0\nret",
  "giasm": "sxtb w0, w0\nret",
  "ll": "define i16 @test(i8 %a) {\n  %r = sext i8 %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext i8 %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "sext",
  "ty": "i8",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxtb w0, w0\nret",
  "giasm": "sxtb w0, w0\nret",
  "ll": "define i32 @test(i8 %a) {\n  %r = sext i8 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext i8 %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "sext",
  "ty": "i8",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxtb x0, w0\nret",
  "giasm": "sxtb x0, w0\nret",
  "ll": "define i64 @test(i8 %a) {\n  %r = sext i8 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext i8 %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "sext",
  "ty": "i16",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxth w0, w0\nret",
  "giasm": "sxth w0, w0\nret",
  "ll": "define i32 @test(i16 %a) {\n  %r = sext i16 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext i16 %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "sext",
  "ty": "i16",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxth x0, w0\nret",
  "giasm": "sxth x0, w0\nret",
  "ll": "define i64 @test(i16 %a) {\n  %r = sext i16 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext i16 %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "sext",
  "ty": "i32",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxtw x0, w0\nret",
  "giasm": "sxtw x0, w0\nret",
  "ll": "define i64 @test(i32 %a) {\n  %r = sext i32 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext i32 %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sshll v0.8h, v0.8b, #0\nret",
  "giasm": "sshll v0.8h, v0.8b, #0\nret",
  "ll": "define <8 x i16> @test(<8 x i8> %a) {\n  %r = sext <8 x i8> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <8 x i8> %a to <8 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "sshll v0.8h, v0.8b, #0\nsshll2 v1.4s, v0.8h, #0\nsshll v0.4s, v0.4h, #0\nret",
  "giasm": "sshll v1.8h, v0.8b, #0\nsshll v0.4s, v1.4h, #0\nsshll2 v1.4s, v1.8h, #0\nret",
  "ll": "define <8 x i32> @test(<8 x i8> %a) {\n  %r = sext <8 x i8> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <8 x i8> %a to <8 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 7,
  "lat": 1,
  "sizelat": 1,
  "size": 7,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sshll v0.8h, v0.8b, #0\nsshll v1.4s, v0.4h, #0\nsshll2 v2.4s, v0.8h, #0\nsshll v0.2d, v1.2s, #0\nsshll2 v3.2d, v2.4s, #0\nsshll2 v1.2d, v1.4s, #0\nsshll v2.2d, v2.2s, #0\nret",
  "giasm": "sshll v0.8h, v0.8b, #0\nsshll v1.4s, v0.4h, #0\nsshll2 v3.4s, v0.8h, #0\nsshll v0.2d, v1.2s, #0\nsshll2 v1.2d, v1.4s, #0\nsshll v2.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nret",
  "ll": "define <8 x i64> @test(<8 x i8> %a) {\n  %r = sext <8 x i8> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <8 x i8> %a to <8 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sshll2 v1.8h, v0.16b, #0\nsshll v0.8h, v0.8b, #0\nret",
  "giasm": "sshll v2.8h, v0.8b, #0\nsshll2 v1.8h, v0.16b, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x i16> @test(<16 x i8> %a) {\n  %r = sext <16 x i8> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <16 x i8> %a to <16 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "sshll v1.8h, v0.8b, #0\nsshll2 v2.8h, v0.16b, #0\nsshll v0.4s, v1.4h, #0\nsshll2 v3.4s, v2.8h, #0\nsshll2 v1.4s, v1.8h, #0\nsshll v2.4s, v2.4h, #0\nret",
  "giasm": "sshll v1.8h, v0.8b, #0\nsshll2 v3.8h, v0.16b, #0\nsshll v0.4s, v1.4h, #0\nsshll2 v1.4s, v1.8h, #0\nsshll v2.4s, v3.4h, #0\nsshll2 v3.4s, v3.8h, #0\nret",
  "ll": "define <16 x i32> @test(<16 x i8> %a) {\n  %r = sext <16 x i8> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <16 x i8> %a to <16 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 15,
  "lat": 1,
  "sizelat": 1,
  "size": 14,
  "gisize": 14,
  "extrasize": 0,
  "asm": "sshll v1.8h, v0.8b, #0\nsshll2 v0.8h, v0.16b, #0\nsshll v2.4s, v1.4h, #0\nsshll2 v4.4s, v1.8h, #0\nsshll v5.4s, v0.4h, #0\nsshll2 v6.4s, v0.8h, #0\nsshll2 v1.2d, v2.4s, #0\nsshll v0.2d, v2.2s, #0\nsshll2 v3.2d, v4.4s, #0\nsshll v2.2d, v4.2s, #0\nsshll v4.2d, v5.2s, #0\nsshll2 v7.2d, v6.4s, #0\nsshll2 v5.2d, v5.4s, #0\nsshll v6.2d, v6.2s, #0\nret",
  "giasm": "sshll v1.8h, v0.8b, #0\nsshll2 v0.8h, v0.16b, #0\nsshll v2.4s, v1.4h, #0\nsshll2 v3.4s, v1.8h, #0\nsshll v5.4s, v0.4h, #0\nsshll2 v7.4s, v0.8h, #0\nsshll v0.2d, v2.2s, #0\nsshll2 v1.2d, v2.4s, #0\nsshll v2.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nsshll v4.2d, v5.2s, #0\nsshll2 v5.2d, v5.4s, #0\nsshll v6.2d, v7.2s, #0\nsshll2 v7.2d, v7.4s, #0\nret",
  "ll": "define <16 x i64> @test(<16 x i8> %a) {\n  %r = sext <16 x i8> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <16 x i8> %a to <16 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<32 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "sshll v5.8h, v0.8b, #0\nsshll2 v4.8h, v0.16b, #0\nsshll2 v3.8h, v1.16b, #0\nsshll v2.8h, v1.8b, #0\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "sshll v4.8h, v0.8b, #0\nsshll2 v5.8h, v0.16b, #0\nsshll v2.8h, v1.8b, #0\nsshll2 v3.8h, v1.16b, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <32 x i16> @test(<32 x i8> %a) {\n  %r = sext <32 x i8> %a to <32 x i16>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <32 x i8> %a to <32 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "sext",
  "ty": "<32 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "sshll v2.8h, v0.8b, #0\nsshll2 v4.8h, v0.16b, #0\nsshll v5.8h, v1.8b, #0\nsshll2 v6.8h, v1.16b, #0\nsshll2 v1.4s, v2.8h, #0\nsshll v0.4s, v2.4h, #0\nsshll2 v3.4s, v4.8h, #0\nsshll v2.4s, v4.4h, #0\nsshll v4.4s, v5.4h, #0\nsshll2 v7.4s, v6.8h, #0\nsshll2 v5.4s, v5.8h, #0\nsshll v6.4s, v6.4h, #0\nret",
  "giasm": "sshll v2.8h, v0.8b, #0\nsshll2 v3.8h, v0.16b, #0\nsshll v5.8h, v1.8b, #0\nsshll2 v7.8h, v1.16b, #0\nsshll v0.4s, v2.4h, #0\nsshll2 v1.4s, v2.8h, #0\nsshll v2.4s, v3.4h, #0\nsshll2 v3.4s, v3.8h, #0\nsshll v4.4s, v5.4h, #0\nsshll2 v5.4s, v5.8h, #0\nsshll v6.4s, v7.4h, #0\nsshll2 v7.4s, v7.8h, #0\nret",
  "ll": "define <32 x i32> @test(<32 x i8> %a) {\n  %r = sext <32 x i8> %a to <32 x i32>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <32 x i8> %a to <32 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<32 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 30,
  "lat": 1,
  "sizelat": 1,
  "size": 36,
  "gisize": 36,
  "extrasize": 0,
  "asm": "sshll2 v2.8h, v1.16b, #0\nsshll2 v3.8h, v0.16b, #0\nsshll v1.8h, v1.8b, #0\nsshll v0.8h, v0.8b, #0\nsshll2 v4.4s, v2.8h, #0\nsshll2 v5.4s, v3.8h, #0\nsshll v2.4s, v2.4h, #0\nsshll2 v16.4s, v1.8h, #0\nsshll v3.4s, v3.4h, #0\nsshll v1.4s, v1.4h, #0\nsshll2 v6.2d, v4.4s, #0\nsshll v4.2d, v4.2s, #0\nsshll2 v7.2d, v5.4s, #0\nsshll v5.2d, v5.2s, #0\nstp q4, q6, [x8, #224]\nsshll2 v6.2d, v2.4s, #0\nsshll v2.2d, v2.2s, #0\nstp q5, q7, [x8, #96]\nsshll2 v4.2d, v16.4s, #0\nsshll2 v5.4s, v0.8h, #0\nsshll v7.2d, v16.2s, #0\nsshll v0.4s, v0.4h, #0\nstp q2, q6, [x8, #192]\nsshll2 v6.2d, v3.4s, #0\nsshll v2.2d, v3.2s, #0\nsshll2 v3.2d, v5.4s, #0\nstp q7, q4, [x8, #160]\nsshll v4.2d, v5.2s, #0\nsshll2 v5.2d, v1.4s, #0\nstp q2, q6, [x8, #64]\nsshll v1.2d, v1.2s, #0\nsshll2 v2.2d, v0.4s, #0\nsshll v0.2d, v0.2s, #0\nstp q4, q3, [x8, #32]\nstp q1, q5, [x8, #128]\nstp q0, q2, [x8]\nret",
  "giasm": "sshll v2.8h, v0.8b, #0\nsshll2 v0.8h, v0.16b, #0\nsshll v6.8h, v1.8b, #0\nsshll2 v1.8h, v1.16b, #0\nsshll v3.4s, v2.4h, #0\nsshll2 v2.4s, v2.8h, #0\nsshll v5.4s, v0.4h, #0\nsshll2 v0.4s, v0.8h, #0\nsshll v4.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nsshll v7.2d, v2.2s, #0\nsshll2 v2.2d, v2.4s, #0\nstp q4, q3, [x8]\nsshll v4.2d, v5.2s, #0\nsshll v3.4s, v6.4h, #0\nsshll2 v5.2d, v5.4s, #0\nstp q7, q2, [x8, #32]\nsshll v7.2d, v0.2s, #0\nsshll2 v2.4s, v6.8h, #0\nsshll2 v0.2d, v0.4s, #0\nstp q4, q5, [x8, #64]\nsshll v4.2d, v3.2s, #0\nsshll v5.4s, v1.4h, #0\nsshll2 v3.2d, v3.4s, #0\nstp q7, q0, [x8, #96]\nsshll v6.2d, v2.2s, #0\nsshll2 v0.2d, v2.4s, #0\nsshll2 v1.4s, v1.8h, #0\nsshll v2.2d, v5.2s, #0\nstp q4, q3, [x8, #128]\nsshll2 v3.2d, v5.4s, #0\nstp q6, q0, [x8, #160]\nsshll v4.2d, v1.2s, #0\nsshll2 v0.2d, v1.4s, #0\nstp q2, q3, [x8, #192]\nstp q4, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i8> %a) {\n  %r = sext <32 x i8> %a to <32 x i64>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <32 x i8> %a to <32 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<4 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sshll v0.4s, v0.4h, #0\nret",
  "giasm": "sshll v0.4s, v0.4h, #0\nret",
  "ll": "define <4 x i32> @test(<4 x i16> %a) {\n  %r = sext <4 x i16> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <4 x i16> %a to <4 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<4 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "sshll v0.4s, v0.4h, #0\nsshll2 v1.2d, v0.4s, #0\nsshll v0.2d, v0.2s, #0\nret",
  "giasm": "sshll v1.4s, v0.4h, #0\nsshll v0.2d, v1.2s, #0\nsshll2 v1.2d, v1.4s, #0\nret",
  "ll": "define <4 x i64> @test(<4 x i16> %a) {\n  %r = sext <4 x i16> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <4 x i16> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sshll2 v1.4s, v0.8h, #0\nsshll v0.4s, v0.4h, #0\nret",
  "giasm": "sshll v2.4s, v0.4h, #0\nsshll2 v1.4s, v0.8h, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x i32> @test(<8 x i16> %a) {\n  %r = sext <8 x i16> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <8 x i16> %a to <8 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "sshll v1.4s, v0.4h, #0\nsshll2 v2.4s, v0.8h, #0\nsshll v0.2d, v1.2s, #0\nsshll2 v3.2d, v2.4s, #0\nsshll2 v1.2d, v1.4s, #0\nsshll v2.2d, v2.2s, #0\nret",
  "giasm": "sshll v1.4s, v0.4h, #0\nsshll2 v3.4s, v0.8h, #0\nsshll v0.2d, v1.2s, #0\nsshll2 v1.2d, v1.4s, #0\nsshll v2.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nret",
  "ll": "define <8 x i64> @test(<8 x i16> %a) {\n  %r = sext <8 x i16> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <8 x i16> %a to <8 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "sshll v5.4s, v0.4h, #0\nsshll2 v4.4s, v0.8h, #0\nsshll2 v3.4s, v1.8h, #0\nsshll v2.4s, v1.4h, #0\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "sshll v4.4s, v0.4h, #0\nsshll2 v5.4s, v0.8h, #0\nsshll v2.4s, v1.4h, #0\nsshll2 v3.4s, v1.8h, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <16 x i32> @test(<16 x i16> %a) {\n  %r = sext <16 x i16> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <16 x i16> %a to <16 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "sshll v2.4s, v0.4h, #0\nsshll2 v4.4s, v0.8h, #0\nsshll v5.4s, v1.4h, #0\nsshll2 v6.4s, v1.8h, #0\nsshll2 v1.2d, v2.4s, #0\nsshll v0.2d, v2.2s, #0\nsshll2 v3.2d, v4.4s, #0\nsshll v2.2d, v4.2s, #0\nsshll v4.2d, v5.2s, #0\nsshll2 v7.2d, v6.4s, #0\nsshll2 v5.2d, v5.4s, #0\nsshll v6.2d, v6.2s, #0\nret",
  "giasm": "sshll v2.4s, v0.4h, #0\nsshll2 v3.4s, v0.8h, #0\nsshll v5.4s, v1.4h, #0\nsshll2 v7.4s, v1.8h, #0\nsshll v0.2d, v2.2s, #0\nsshll2 v1.2d, v2.4s, #0\nsshll v2.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nsshll v4.2d, v5.2s, #0\nsshll2 v5.2d, v5.4s, #0\nsshll v6.2d, v7.2s, #0\nsshll2 v7.2d, v7.4s, #0\nret",
  "ll": "define <16 x i64> @test(<16 x i16> %a) {\n  %r = sext <16 x i16> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <16 x i16> %a to <16 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<2 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sshll v0.2d, v0.2s, #0\nret",
  "giasm": "sshll v0.2d, v0.2s, #0\nret",
  "ll": "define <2 x i64> @test(<2 x i32> %a) {\n  %r = sext <2 x i32> %a to <2 x i64>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <2 x i32> %a to <2 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<4 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sshll2 v1.2d, v0.4s, #0\nsshll v0.2d, v0.2s, #0\nret",
  "giasm": "sshll v2.2d, v0.2s, #0\nsshll2 v1.2d, v0.4s, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i32> %a) {\n  %r = sext <4 x i32> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <4 x i32> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "sshll v5.2d, v0.2s, #0\nsshll2 v4.2d, v0.4s, #0\nsshll2 v3.2d, v1.4s, #0\nsshll v2.2d, v1.2s, #0\nmov v0.16b, v5.16b\nmov v1.16b, v4.16b\nret",
  "giasm": "sshll v4.2d, v0.2s, #0\nsshll2 v5.2d, v0.4s, #0\nsshll v2.2d, v1.2s, #0\nsshll2 v3.2d, v1.4s, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i32> %a) {\n  %r = sext <8 x i32> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sext <8 x i32> %a to <8 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "i16",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i8 @test(i16 %a) {\n  %r = trunc i16 %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = trunc i16 %a to i8\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "trunc",
  "ty": "i32",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i8 @test(i32 %a) {\n  %r = trunc i32 %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = trunc i32 %a to i8\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "trunc",
  "ty": "i32",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i16 @test(i32 %a) {\n  %r = trunc i32 %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = trunc i32 %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "trunc",
  "ty": "i64",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i8 @test(i64 %a) {\n  %r = trunc i64 %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = trunc i64 %a to i8\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "trunc",
  "ty": "i64",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i16 @test(i64 %a) {\n  %r = trunc i64 %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = trunc i64 %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "trunc",
  "ty": "i64",
  "variant": "cast i32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i32 @test(i64 %a) {\n  %r = trunc i64 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 0 for instruction:   %r = trunc i64 %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i16>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.8b, v0.8h\nret",
  "giasm": "xtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x i16> %a) {\n  %r = trunc <8 x i16> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <8 x i16> %a to <8 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i16>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i16> %a) {\n  %r = trunc <16 x i16> %a to <16 x i8>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <16 x i16> %a to <16 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i16>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.16b, v2.16b, v3.16b\nuzp1 v0.16b, v0.16b, v1.16b\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v1.16b\nuzp1 v1.16b, v2.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i16> %a) {\n  %r = trunc <32 x i16> %a to <32 x i8>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <32 x i16> %a to <32 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<4 x i32>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.4h, v0.4s\nret",
  "giasm": "xtn v0.4h, v0.4s\nret",
  "ll": "define <4 x i16> @test(<4 x i32> %a) {\n  %r = trunc <4 x i32> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <4 x i32> %a to <4 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i32>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nxtn v0.8b, v0.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nxtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x i32> %a) {\n  %r = trunc <8 x i32> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <8 x i32> %a to <8 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i32>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i32> %a) {\n  %r = trunc <8 x i32> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <8 x i32> %a to <8 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i32>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp1 v2.8h, v2.8h, v3.8h\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v0.16b, v0.16b, v2.16b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i32> %a) {\n  %r = trunc <16 x i32> %a to <16 x i8>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <16 x i32> %a to <16 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i32>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.8h, v2.8h, v3.8h\nuzp1 v0.8h, v0.8h, v1.8h\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<16 x i32> %a) {\n  %r = trunc <16 x i32> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <16 x i32> %a to <16 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i32>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "uzp1 v2.8h, v2.8h, v3.8h\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v6.8h, v7.8h\nuzp1 v3.8h, v4.8h, v5.8h\nuzp1 v0.16b, v0.16b, v2.16b\nuzp1 v1.16b, v3.16b, v1.16b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nuzp1 v0.16b, v0.16b, v1.16b\nuzp1 v1.16b, v2.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i32> %a) {\n  %r = trunc <32 x i32> %a to <32 x i8>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <32 x i32> %a to <32 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i32>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nret",
  "ll": "define <32 x i16> @test(<32 x i32> %a) {\n  %r = trunc <32 x i32> %a to <32 x i16>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <32 x i32> %a to <32 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<2 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.2s, v0.2d\nret",
  "giasm": "xtn v0.2s, v0.2d\nret",
  "ll": "define <2 x i32> @test(<2 x i64> %a) {\n  %r = trunc <2 x i64> %a to <2 x i32>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <2 x i64> %a to <2 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<4 x i64>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nxtn v0.4h, v0.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nxtn v0.4h, v0.4s\nret",
  "ll": "define <4 x i16> @test(<4 x i64> %a) {\n  %r = trunc <4 x i64> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <4 x i64> %a to <4 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<4 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x i64> %a) {\n  %r = trunc <4 x i64> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <4 x i64> %a to <4 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i64>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nuzp1 v0.8h, v0.8h, v2.8h\nxtn v0.8b, v0.8h\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v0.8h, v0.8h, v1.8h\nxtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x i64> %a) {\n  %r = trunc <8 x i64> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <8 x i64> %a to <8 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i64>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nuzp1 v0.8h, v0.8h, v2.8h\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i64> %a) {\n  %r = trunc <8 x i64> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <8 x i64> %a to <8 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nmov v1.16b, v2.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<8 x i64> %a) {\n  %r = trunc <8 x i64> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <8 x i64> %a to <8 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i64>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 7,
  "lat": 1,
  "sizelat": 1,
  "size": 7,
  "gisize": 7,
  "extrasize": 0,
  "asm": "uzp1 v6.4s, v6.4s, v7.4s\nuzp1 v4.4s, v4.4s, v5.4s\nuzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.8h, v4.8h, v6.8h\nuzp1 v0.8h, v0.8h, v2.8h\nuzp1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i64> %a) {\n  %r = trunc <16 x i64> %a to <16 x i8>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <16 x i64> %a to <16 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i64>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 6,
  "extrasize": 0,
  "asm": "uzp1 v2.4s, v2.4s, v3.4s\nuzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v6.4s, v7.4s\nuzp1 v3.4s, v4.4s, v5.4s\nuzp1 v0.8h, v0.8h, v2.8h\nuzp1 v1.8h, v3.8h, v1.8h\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<16 x i64> %a) {\n  %r = trunc <16 x i64> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <16 x i64> %a to <16 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<16 x i64> %a) {\n  %r = trunc <16 x i64> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <16 x i64> %a to <16 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i64>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 14,
  "lat": 1,
  "sizelat": 1,
  "size": 18,
  "gisize": 18,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp]\nuzp1 v6.4s, v6.4s, v7.4s\nldp q19, q18, [sp, #32]\nuzp1 v4.4s, v4.4s, v5.4s\nldp q21, q20, [sp, #96]\nuzp1 v2.4s, v2.4s, v3.4s\nldp q23, q22, [sp, #64]\nuzp1 v0.4s, v0.4s, v1.4s\nuzp1 v5.4s, v19.4s, v18.4s\nuzp1 v7.4s, v17.4s, v16.4s\nuzp1 v1.4s, v21.4s, v20.4s\nuzp1 v4.8h, v4.8h, v6.8h\nuzp1 v3.4s, v23.4s, v22.4s\nuzp1 v0.8h, v0.8h, v2.8h\nuzp1 v2.8h, v7.8h, v5.8h\nuzp1 v1.8h, v3.8h, v1.8h\nuzp1 v0.16b, v0.16b, v4.16b\nuzp1 v1.16b, v2.16b, v1.16b\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v4.4s, v16.4s, v17.4s\nuzp1 v5.4s, v18.4s, v19.4s\nuzp1 v6.4s, v20.4s, v21.4s\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v7.4s, v22.4s, v23.4s\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nuzp1 v0.16b, v0.16b, v1.16b\nuzp1 v1.16b, v2.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i64> %a) {\n  %r = trunc <32 x i64> %a to <32 x i8>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <32 x i64> %a to <32 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i64>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 16,
  "gisize": 16,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #64]\nuzp1 v2.4s, v2.4s, v3.4s\nldp q19, q18, [sp, #96]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q21, q20, [sp, #32]\nuzp1 v1.4s, v6.4s, v7.4s\nldp q23, q22, [sp]\nuzp1 v3.4s, v4.4s, v5.4s\nuzp1 v6.4s, v19.4s, v18.4s\nuzp1 v7.4s, v17.4s, v16.4s\nuzp1 v4.4s, v21.4s, v20.4s\nuzp1 v0.8h, v0.8h, v2.8h\nuzp1 v5.4s, v23.4s, v22.4s\nuzp1 v1.8h, v3.8h, v1.8h\nuzp1 v3.8h, v7.8h, v6.8h\nuzp1 v2.8h, v5.8h, v4.8h\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v4.4s, v16.4s, v17.4s\nuzp1 v5.4s, v18.4s, v19.4s\nuzp1 v6.4s, v20.4s, v21.4s\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v7.4s, v22.4s, v23.4s\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nret",
  "ll": "define <32 x i16> @test(<32 x i64> %a) {\n  %r = trunc <32 x i64> %a to <32 x i16>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <32 x i64> %a to <32 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q17, q16, [sp, #96]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q19, q18, [sp, #64]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q21, q20, [sp]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q23, q22, [sp, #32]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v6.4s, v19.4s, v18.4s\nuzp1 v7.4s, v17.4s, v16.4s\nuzp1 v4.4s, v21.4s, v20.4s\nuzp1 v5.4s, v23.4s, v22.4s\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v4.4s, v16.4s, v17.4s\nuzp1 v5.4s, v18.4s, v19.4s\nuzp1 v6.4s, v20.4s, v21.4s\nuzp1 v7.4s, v22.4s, v23.4s\nret",
  "ll": "define <32 x i32> @test(<32 x i64> %a) {\n  %r = trunc <32 x i64> %a to <32 x i32>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = trunc <32 x i64> %a to <32 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <32 x i32> %r"
 }
]