[
 {
  "instr": "fptosi",
  "ty": "half",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, h0\nret",
  "giasm": "fcvtzs w0, h0\nret",
  "ll": "define i8 @test(half %a) {\n  %r = fptosi half %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi half %a to i8\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "fptosi",
  "ty": "half",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, h0\nret",
  "giasm": "fcvtzs w0, h0\nret",
  "ll": "define i16 @test(half %a) {\n  %r = fptosi half %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi half %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "fptosi",
  "ty": "half",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, h0\nret",
  "giasm": "fcvtzs w0, h0\nret",
  "ll": "define i32 @test(half %a) {\n  %r = fptosi half %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi half %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "fptosi",
  "ty": "half",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs x0, h0\nret",
  "giasm": "fcvtzs x0, h0\nret",
  "ll": "define i64 @test(half %a) {\n  %r = fptosi half %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi half %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "fptosi",
  "ty": "float",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, s0\nret",
  "giasm": "fcvtzs w0, s0\nret",
  "ll": "define i8 @test(float %a) {\n  %r = fptosi float %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi float %a to i8\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "fptosi",
  "ty": "float",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, s0\nret",
  "giasm": "fcvtzs w0, s0\nret",
  "ll": "define i16 @test(float %a) {\n  %r = fptosi float %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi float %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "fptosi",
  "ty": "float",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, s0\nret",
  "giasm": "fcvtzs w0, s0\nret",
  "ll": "define i32 @test(float %a) {\n  %r = fptosi float %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi float %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "fptosi",
  "ty": "float",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs x0, s0\nret",
  "giasm": "fcvtzs x0, s0\nret",
  "ll": "define i64 @test(float %a) {\n  %r = fptosi float %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi float %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "fptosi",
  "ty": "double",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, d0\nret",
  "giasm": "fcvtzs w0, d0\nret",
  "ll": "define i8 @test(double %a) {\n  %r = fptosi double %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi double %a to i8\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "fptosi",
  "ty": "double",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, d0\nret",
  "giasm": "fcvtzs w0, d0\nret",
  "ll": "define i16 @test(double %a) {\n  %r = fptosi double %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi double %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "fptosi",
  "ty": "double",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, d0\nret",
  "giasm": "fcvtzs w0, d0\nret",
  "ll": "define i32 @test(double %a) {\n  %r = fptosi double %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi double %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "fptosi",
  "ty": "double",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs x0, d0\nret",
  "giasm": "fcvtzs x0, d0\nret",
  "ll": "define i64 @test(double %a) {\n  %r = fptosi double %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi double %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "fptosi",
  "ty": "<4 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs v0.4h, v0.4h\nret",
  "giasm": "fcvtzs v0.4h, v0.4h\nret",
  "ll": "define <4 x i16> @test(<4 x half> %a) {\n  %r = fptosi <4 x half> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <4 x half> %a to <4 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<4 x half>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtl v0.4s, v0.4h\nfcvtzs v0.4s, v0.4s\nret",
  "giasm": "fcvtl v0.4s, v0.4h\nfcvtzs v0.4s, v0.4s\nret",
  "ll": "define <4 x i32> @test(<4 x half> %a) {\n  %r = fptosi <4 x half> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <4 x half> %a to <4 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<4 x half>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 21,
  "lat": 1,
  "sizelat": 1,
  "size": 11,
  "gisize": 11,
  "extrasize": 0,
  "asm": "mov h1, v0.h[2]\nmov h2, v0.h[1]\nmov h3, v0.h[3]\nfcvtzs x8, h0\nfcvtzs x9, h1\nfcvtzs x10, h2\nfcvtzs x11, h3\nfmov d0, x8\nfmov d1, x9\nmov v0.d[1], x10\nmov v1.d[1], x11\nret",
  "giasm": "mov h1, v0.h[1]\nmov h2, v0.h[2]\nmov h3, v0.h[3]\nfcvt d0, h0\nfcvt d1, h1\nfcvt d2, h2\nfcvt d3, h3\nmov v0.d[1], v1.d[0]\nmov v2.d[1], v3.d[0]\nfcvtzs v0.2d, v0.2d\nfcvtzs v1.2d, v2.2d\nret",
  "ll": "define <4 x i64> @test(<4 x half> %a) {\n  %r = fptosi <4 x half> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <4 x half> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<8 x half>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzs v0.8h, v0.8h\nxtn v0.8b, v0.8h\nret",
  "giasm": "fcvtzs v0.8h, v0.8h\nxtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x half> %a) {\n  %r = fptosi <8 x half> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <8 x half> %a to <8 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<8 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs v0.8h, v0.8h\nret",
  "giasm": "fcvtzs v0.8h, v0.8h\nret",
  "ll": "define <8 x i16> @test(<8 x half> %a) {\n  %r = fptosi <8 x half> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <8 x half> %a to <8 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<8 x half>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "fcvtl2 v1.4s, v0.8h\nfcvtl v0.4s, v0.4h\nfcvtzs v1.4s, v1.4s\nfcvtzs v0.4s, v0.4s\nret",
  "giasm": "fcvtl v1.4s, v0.4h\nfcvtl2 v2.4s, v0.8h\nfcvtzs v0.4s, v1.4s\nfcvtzs v1.4s, v2.4s\nret",
  "ll": "define <8 x i32> @test(<8 x half> %a) {\n  %r = fptosi <8 x half> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <8 x half> %a to <8 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<16 x half>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "fcvtzs v1.8h, v1.8h\nfcvtzs v0.8h, v0.8h\nuzp1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "fcvtzs v0.8h, v0.8h\nfcvtzs v1.8h, v1.8h\nuzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x half> %a) {\n  %r = fptosi <16 x half> %a to <16 x i8>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <16 x half> %a to <16 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<16 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzs v0.8h, v0.8h\nfcvtzs v1.8h, v1.8h\nret",
  "giasm": "fcvtzs v0.8h, v0.8h\nfcvtzs v1.8h, v1.8h\nret",
  "ll": "define <16 x i16> @test(<16 x half> %a) {\n  %r = fptosi <16 x half> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <16 x half> %a to <16 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<2 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs v0.2s, v0.2s\nret",
  "giasm": "fcvtzs v0.2s, v0.2s\nret",
  "ll": "define <2 x i32> @test(<2 x float> %a) {\n  %r = fptosi <2 x float> %a to <2 x i32>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <2 x float> %a to <2 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<2 x float>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtl v0.2d, v0.2s\nfcvtzs v0.2d, v0.2d\nret",
  "giasm": "fcvtl v0.2d, v0.2s\nfcvtzs v0.2d, v0.2d\nret",
  "ll": "define <2 x i64> @test(<2 x float> %a) {\n  %r = fptosi <2 x float> %a to <2 x i64>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <2 x float> %a to <2 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<4 x float>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzs v0.4s, v0.4s\nxtn v0.4h, v0.4s\nret",
  "giasm": "fcvtzs v0.4s, v0.4s\nxtn v0.4h, v0.4s\nret",
  "ll": "define <4 x i16> @test(<4 x float> %a) {\n  %r = fptosi <4 x float> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <4 x float> %a to <4 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<4 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs v0.4s, v0.4s\nret",
  "giasm": "fcvtzs v0.4s, v0.4s\nret",
  "ll": "define <4 x i32> @test(<4 x float> %a) {\n  %r = fptosi <4 x float> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <4 x float> %a to <4 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<4 x float>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "fcvtl2 v1.2d, v0.4s\nfcvtl v0.2d, v0.2s\nfcvtzs v1.2d, v1.2d\nfcvtzs v0.2d, v0.2d\nret",
  "giasm": "fcvtl v1.2d, v0.2s\nfcvtl2 v2.2d, v0.4s\nfcvtzs v0.2d, v1.2d\nfcvtzs v1.2d, v2.2d\nret",
  "ll": "define <4 x i64> @test(<4 x float> %a) {\n  %r = fptosi <4 x float> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <4 x float> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<8 x float>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "fcvtzs v1.4s, v1.4s\nfcvtzs v0.4s, v0.4s\nuzp1 v0.8h, v0.8h, v1.8h\nxtn v0.8b, v0.8h\nret",
  "giasm": "fcvtzs v0.4s, v0.4s\nfcvtzs v1.4s, v1.4s\nuzp1 v0.8h, v0.8h, v1.8h\nxtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x float> %a) {\n  %r = fptosi <8 x float> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <8 x float> %a to <8 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<8 x float>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "fcvtzs v1.4s, v1.4s\nfcvtzs v0.4s, v0.4s\nuzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "fcvtzs v0.4s, v0.4s\nfcvtzs v1.4s, v1.4s\nuzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x float> %a) {\n  %r = fptosi <8 x float> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <8 x float> %a to <8 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<8 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzs v0.4s, v0.4s\nfcvtzs v1.4s, v1.4s\nret",
  "giasm": "fcvtzs v0.4s, v0.4s\nfcvtzs v1.4s, v1.4s\nret",
  "ll": "define <8 x i32> @test(<8 x float> %a) {\n  %r = fptosi <8 x float> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <8 x float> %a to <8 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<2 x double>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzs v0.2d, v0.2d\nxtn v0.2s, v0.2d\nret",
  "giasm": "fcvtzs v0.2d, v0.2d\nxtn v0.2s, v0.2d\nret",
  "ll": "define <2 x i32> @test(<2 x double> %a) {\n  %r = fptosi <2 x double> %a to <2 x i32>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <2 x double> %a to <2 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<2 x double>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs v0.2d, v0.2d\nret",
  "giasm": "fcvtzs v0.2d, v0.2d\nret",
  "ll": "define <2 x i64> @test(<2 x double> %a) {\n  %r = fptosi <2 x double> %a to <2 x i64>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <2 x double> %a to <2 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<4 x double>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "fcvtzs v1.2d, v1.2d\nfcvtzs v0.2d, v0.2d\nuzp1 v0.4s, v0.4s, v1.4s\nxtn v0.4h, v0.4s\nret",
  "giasm": "fcvtzs v0.2d, v0.2d\nfcvtzs v1.2d, v1.2d\nuzp1 v0.4s, v0.4s, v1.4s\nxtn v0.4h, v0.4s\nret",
  "ll": "define <4 x i16> @test(<4 x double> %a) {\n  %r = fptosi <4 x double> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <4 x double> %a to <4 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<4 x double>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "fcvtzs v1.2d, v1.2d\nfcvtzs v0.2d, v0.2d\nuzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "fcvtzs v0.2d, v0.2d\nfcvtzs v1.2d, v1.2d\nuzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x double> %a) {\n  %r = fptosi <4 x double> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <4 x double> %a to <4 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "fptosi",
  "ty": "<4 x double>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzs v0.2d, v0.2d\nfcvtzs v1.2d, v1.2d\nret",
  "giasm": "fcvtzs v0.2d, v0.2d\nfcvtzs v1.2d, v1.2d\nret",
  "ll": "define <4 x i64> @test(<4 x double> %a) {\n  %r = fptosi <4 x double> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptosi <4 x double> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "fptoui",
  "ty": "half",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, h0\nret",
  "giasm": "fcvtzu w0, h0\nret",
  "ll": "define i8 @test(half %a) {\n  %r = fptoui half %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui half %a to i8\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "fptoui",
  "ty": "half",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, h0\nret",
  "giasm": "fcvtzu w0, h0\nret",
  "ll": "define i16 @test(half %a) {\n  %r = fptoui half %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui half %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "fptoui",
  "ty": "half",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu w0, h0\nret",
  "giasm": "fcvtzu w0, h0\nret",
  "ll": "define i32 @test(half %a) {\n  %r = fptoui half %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui half %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "fptoui",
  "ty": "half",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu x0, h0\nret",
  "giasm": "fcvtzu x0, h0\nret",
  "ll": "define i64 @test(half %a) {\n  %r = fptoui half %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui half %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "fptoui",
  "ty": "float",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, s0\nret",
  "giasm": "fcvtzu w0, s0\nret",
  "ll": "define i8 @test(float %a) {\n  %r = fptoui float %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui float %a to i8\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "fptoui",
  "ty": "float",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, s0\nret",
  "giasm": "fcvtzu w0, s0\nret",
  "ll": "define i16 @test(float %a) {\n  %r = fptoui float %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui float %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "fptoui",
  "ty": "float",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu w0, s0\nret",
  "giasm": "fcvtzu w0, s0\nret",
  "ll": "define i32 @test(float %a) {\n  %r = fptoui float %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui float %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "fptoui",
  "ty": "float",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu x0, s0\nret",
  "giasm": "fcvtzu x0, s0\nret",
  "ll": "define i64 @test(float %a) {\n  %r = fptoui float %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui float %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "fptoui",
  "ty": "double",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, d0\nret",
  "giasm": "fcvtzu w0, d0\nret",
  "ll": "define i8 @test(double %a) {\n  %r = fptoui double %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui double %a to i8\nCost Model: Found an estimated cost of 1 for instruction:   ret i8 %r"
 },
 {
  "instr": "fptoui",
  "ty": "double",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzs w0, d0\nret",
  "giasm": "fcvtzu w0, d0\nret",
  "ll": "define i16 @test(double %a) {\n  %r = fptoui double %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui double %a to i16\nCost Model: Found an estimated cost of 1 for instruction:   ret i16 %r"
 },
 {
  "instr": "fptoui",
  "ty": "double",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu w0, d0\nret",
  "giasm": "fcvtzu w0, d0\nret",
  "ll": "define i32 @test(double %a) {\n  %r = fptoui double %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui double %a to i32\nCost Model: Found an estimated cost of 1 for instruction:   ret i32 %r"
 },
 {
  "instr": "fptoui",
  "ty": "double",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu x0, d0\nret",
  "giasm": "fcvtzu x0, d0\nret",
  "ll": "define i64 @test(double %a) {\n  %r = fptoui double %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui double %a to i64\nCost Model: Found an estimated cost of 1 for instruction:   ret i64 %r"
 },
 {
  "instr": "fptoui",
  "ty": "<4 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu v0.4h, v0.4h\nret",
  "giasm": "fcvtzu v0.4h, v0.4h\nret",
  "ll": "define <4 x i16> @test(<4 x half> %a) {\n  %r = fptoui <4 x half> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <4 x half> %a to <4 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<4 x half>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtl v0.4s, v0.4h\nfcvtzu v0.4s, v0.4s\nret",
  "giasm": "fcvtl v0.4s, v0.4h\nfcvtzu v0.4s, v0.4s\nret",
  "ll": "define <4 x i32> @test(<4 x half> %a) {\n  %r = fptoui <4 x half> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <4 x half> %a to <4 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<4 x half>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 21,
  "lat": 1,
  "sizelat": 1,
  "size": 11,
  "gisize": 11,
  "extrasize": 0,
  "asm": "mov h1, v0.h[2]\nmov h2, v0.h[1]\nmov h3, v0.h[3]\nfcvtzu x8, h0\nfcvtzu x9, h1\nfcvtzu x10, h2\nfcvtzu x11, h3\nfmov d0, x8\nfmov d1, x9\nmov v0.d[1], x10\nmov v1.d[1], x11\nret",
  "giasm": "mov h1, v0.h[1]\nmov h2, v0.h[2]\nmov h3, v0.h[3]\nfcvt d0, h0\nfcvt d1, h1\nfcvt d2, h2\nfcvt d3, h3\nmov v0.d[1], v1.d[0]\nmov v2.d[1], v3.d[0]\nfcvtzu v0.2d, v0.2d\nfcvtzu v1.2d, v2.2d\nret",
  "ll": "define <4 x i64> @test(<4 x half> %a) {\n  %r = fptoui <4 x half> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <4 x half> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<8 x half>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzu v0.8h, v0.8h\nxtn v0.8b, v0.8h\nret",
  "giasm": "fcvtzu v0.8h, v0.8h\nxtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x half> %a) {\n  %r = fptoui <8 x half> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <8 x half> %a to <8 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<8 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu v0.8h, v0.8h\nret",
  "giasm": "fcvtzu v0.8h, v0.8h\nret",
  "ll": "define <8 x i16> @test(<8 x half> %a) {\n  %r = fptoui <8 x half> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <8 x half> %a to <8 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<8 x half>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "fcvtl2 v1.4s, v0.8h\nfcvtl v0.4s, v0.4h\nfcvtzu v1.4s, v1.4s\nfcvtzu v0.4s, v0.4s\nret",
  "giasm": "fcvtl v1.4s, v0.4h\nfcvtl2 v2.4s, v0.8h\nfcvtzu v0.4s, v1.4s\nfcvtzu v1.4s, v2.4s\nret",
  "ll": "define <8 x i32> @test(<8 x half> %a) {\n  %r = fptoui <8 x half> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <8 x half> %a to <8 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<16 x half>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "fcvtzu v1.8h, v1.8h\nfcvtzu v0.8h, v0.8h\nuzp1 v0.16b, v0.16b, v1.16b\nret",
  "giasm": "fcvtzu v0.8h, v0.8h\nfcvtzu v1.8h, v1.8h\nuzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x half> %a) {\n  %r = fptoui <16 x half> %a to <16 x i8>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <16 x half> %a to <16 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i8> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<16 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzu v0.8h, v0.8h\nfcvtzu v1.8h, v1.8h\nret",
  "giasm": "fcvtzu v0.8h, v0.8h\nfcvtzu v1.8h, v1.8h\nret",
  "ll": "define <16 x i16> @test(<16 x half> %a) {\n  %r = fptoui <16 x half> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <16 x half> %a to <16 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x i16> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<2 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu v0.2s, v0.2s\nret",
  "giasm": "fcvtzu v0.2s, v0.2s\nret",
  "ll": "define <2 x i32> @test(<2 x float> %a) {\n  %r = fptoui <2 x float> %a to <2 x i32>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <2 x float> %a to <2 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<2 x float>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtl v0.2d, v0.2s\nfcvtzu v0.2d, v0.2d\nret",
  "giasm": "fcvtl v0.2d, v0.2s\nfcvtzu v0.2d, v0.2d\nret",
  "ll": "define <2 x i64> @test(<2 x float> %a) {\n  %r = fptoui <2 x float> %a to <2 x i64>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <2 x float> %a to <2 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<4 x float>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzu v0.4s, v0.4s\nxtn v0.4h, v0.4s\nret",
  "giasm": "fcvtzu v0.4s, v0.4s\nxtn v0.4h, v0.4s\nret",
  "ll": "define <4 x i16> @test(<4 x float> %a) {\n  %r = fptoui <4 x float> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <4 x float> %a to <4 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<4 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu v0.4s, v0.4s\nret",
  "giasm": "fcvtzu v0.4s, v0.4s\nret",
  "ll": "define <4 x i32> @test(<4 x float> %a) {\n  %r = fptoui <4 x float> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <4 x float> %a to <4 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<4 x float>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "fcvtl2 v1.2d, v0.4s\nfcvtl v0.2d, v0.2s\nfcvtzu v1.2d, v1.2d\nfcvtzu v0.2d, v0.2d\nret",
  "giasm": "fcvtl v1.2d, v0.2s\nfcvtl2 v2.2d, v0.4s\nfcvtzu v0.2d, v1.2d\nfcvtzu v1.2d, v2.2d\nret",
  "ll": "define <4 x i64> @test(<4 x float> %a) {\n  %r = fptoui <4 x float> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <4 x float> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<8 x float>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "fcvtzs v1.4s, v1.4s\nfcvtzs v0.4s, v0.4s\nuzp1 v0.8h, v0.8h, v1.8h\nxtn v0.8b, v0.8h\nret",
  "giasm": "fcvtzu v0.4s, v0.4s\nfcvtzu v1.4s, v1.4s\nuzp1 v0.8h, v0.8h, v1.8h\nxtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x float> %a) {\n  %r = fptoui <8 x float> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <8 x float> %a to <8 x i8>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i8> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<8 x float>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "fcvtzu v1.4s, v1.4s\nfcvtzu v0.4s, v0.4s\nuzp1 v0.8h, v0.8h, v1.8h\nret",
  "giasm": "fcvtzu v0.4s, v0.4s\nfcvtzu v1.4s, v1.4s\nuzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x float> %a) {\n  %r = fptoui <8 x float> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <8 x float> %a to <8 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i16> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<8 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzu v0.4s, v0.4s\nfcvtzu v1.4s, v1.4s\nret",
  "giasm": "fcvtzu v0.4s, v0.4s\nfcvtzu v1.4s, v1.4s\nret",
  "ll": "define <8 x i32> @test(<8 x float> %a) {\n  %r = fptoui <8 x float> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <8 x float> %a to <8 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x i32> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<2 x double>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzu v0.2d, v0.2d\nxtn v0.2s, v0.2d\nret",
  "giasm": "fcvtzu v0.2d, v0.2d\nxtn v0.2s, v0.2d\nret",
  "ll": "define <2 x i32> @test(<2 x double> %a) {\n  %r = fptoui <2 x double> %a to <2 x i32>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <2 x double> %a to <2 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i32> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<2 x double>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "fcvtzu v0.2d, v0.2d\nret",
  "giasm": "fcvtzu v0.2d, v0.2d\nret",
  "ll": "define <2 x i64> @test(<2 x double> %a) {\n  %r = fptoui <2 x double> %a to <2 x i64>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <2 x double> %a to <2 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x i64> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<4 x double>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "fcvtzs v1.2d, v1.2d\nfcvtzs v0.2d, v0.2d\nuzp1 v0.4s, v0.4s, v1.4s\nxtn v0.4h, v0.4s\nret",
  "giasm": "fcvtzu v0.2d, v0.2d\nfcvtzu v1.2d, v1.2d\nuzp1 v0.4s, v0.4s, v1.4s\nxtn v0.4h, v0.4s\nret",
  "ll": "define <4 x i16> @test(<4 x double> %a) {\n  %r = fptoui <4 x double> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <4 x double> %a to <4 x i16>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i16> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<4 x double>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 3,
  "extrasize": 0,
  "asm": "fcvtzu v1.2d, v1.2d\nfcvtzu v0.2d, v0.2d\nuzp1 v0.4s, v0.4s, v1.4s\nret",
  "giasm": "fcvtzu v0.2d, v0.2d\nfcvtzu v1.2d, v1.2d\nuzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x double> %a) {\n  %r = fptoui <4 x double> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <4 x double> %a to <4 x i32>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i32> %r"
 },
 {
  "instr": "fptoui",
  "ty": "<4 x double>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "fcvtzu v0.2d, v0.2d\nfcvtzu v1.2d, v1.2d\nret",
  "giasm": "fcvtzu v0.2d, v0.2d\nfcvtzu v1.2d, v1.2d\nret",
  "ll": "define <4 x i64> @test(<4 x double> %a) {\n  %r = fptoui <4 x double> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = fptoui <4 x double> %a to <4 x i64>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x i64> %r"
 },
 {
  "instr": "sitofp",
  "ty": "half",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sxtb w8, w0\nscvtf h0, w8\nret",
  "giasm": "sxtb w8, w0\nscvtf h0, w8\nret",
  "ll": "define half @test(i8 %a) {\n  %r = sitofp i8 %a to half\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i8 %a to half\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "sitofp",
  "ty": "half",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sxth w8, w0\nscvtf h0, w8\nret",
  "giasm": "sxth w8, w0\nscvtf h0, w8\nret",
  "ll": "define half @test(i16 %a) {\n  %r = sitofp i16 %a to half\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i16 %a to half\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "sitofp",
  "ty": "half",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf h0, w0\nret",
  "giasm": "scvtf h0, w0\nret",
  "ll": "define half @test(i32 %a) {\n  %r = sitofp i32 %a to half\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i32 %a to half\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "sitofp",
  "ty": "half",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf h0, x0\nret",
  "giasm": "scvtf h0, x0\nret",
  "ll": "define half @test(i64 %a) {\n  %r = sitofp i64 %a to half\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i64 %a to half\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "sitofp",
  "ty": "float",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sxtb w8, w0\nscvtf s0, w8\nret",
  "giasm": "sxtb w8, w0\nscvtf s0, w8\nret",
  "ll": "define float @test(i8 %a) {\n  %r = sitofp i8 %a to float\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i8 %a to float\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "sitofp",
  "ty": "float",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sxth w8, w0\nscvtf s0, w8\nret",
  "giasm": "sxth w8, w0\nscvtf s0, w8\nret",
  "ll": "define float @test(i16 %a) {\n  %r = sitofp i16 %a to float\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i16 %a to float\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "sitofp",
  "ty": "float",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf s0, w0\nret",
  "giasm": "scvtf s0, w0\nret",
  "ll": "define float @test(i32 %a) {\n  %r = sitofp i32 %a to float\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i32 %a to float\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "sitofp",
  "ty": "float",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf s0, x0\nret",
  "giasm": "scvtf s0, x0\nret",
  "ll": "define float @test(i64 %a) {\n  %r = sitofp i64 %a to float\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i64 %a to float\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "sitofp",
  "ty": "double",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sxtb w8, w0\nscvtf d0, w8\nret",
  "giasm": "sxtb w8, w0\nscvtf d0, w8\nret",
  "ll": "define double @test(i8 %a) {\n  %r = sitofp i8 %a to double\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i8 %a to double\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "sitofp",
  "ty": "double",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sxth w8, w0\nscvtf d0, w8\nret",
  "giasm": "sxth w8, w0\nscvtf d0, w8\nret",
  "ll": "define double @test(i16 %a) {\n  %r = sitofp i16 %a to double\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i16 %a to double\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "sitofp",
  "ty": "double",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf d0, w0\nret",
  "giasm": "scvtf d0, w0\nret",
  "ll": "define double @test(i32 %a) {\n  %r = sitofp i32 %a to double\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i32 %a to double\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "sitofp",
  "ty": "double",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf d0, x0\nret",
  "giasm": "scvtf d0, x0\nret",
  "ll": "define double @test(i64 %a) {\n  %r = sitofp i64 %a to double\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp i64 %a to double\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "sitofp",
  "ty": "<4 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf v0.4h, v0.4h\nret",
  "giasm": "scvtf v0.4h, v0.4h\nret",
  "ll": "define <4 x half> @test(<4 x i16> %a) {\n  %r = sitofp <4 x i16> %a to <4 x half>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <4 x i16> %a to <4 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<4 x half>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "scvtf v0.4s, v0.4s\nfcvtn v0.4h, v0.4s\nret",
  "giasm": "scvtf v0.4s, v0.4s\nfcvtn v0.4h, v0.4s\nret",
  "ll": "define <4 x half> @test(<4 x i32> %a) {\n  %r = sitofp <4 x i32> %a to <4 x half>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <4 x i32> %a to <4 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<4 x half>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 5,
  "gisize": 11,
  "extrasize": 0,
  "asm": "scvtf v0.2d, v0.2d\nscvtf v1.2d, v1.2d\nfcvtn v0.2s, v0.2d\nfcvtn2 v0.4s, v1.2d\nfcvtn v0.4h, v0.4s\nret",
  "giasm": "scvtf v0.2d, v0.2d\nscvtf v1.2d, v1.2d\nmov d2, v0.d[1]\nfcvt h0, d0\nmov d3, v1.d[1]\nfcvt h1, d1\nfcvt h2, d2\nmov v0.h[1], v2.h[0]\nfcvt h2, d3\nmov v0.h[2], v1.h[0]\nmov v0.h[3], v2.h[0]\nret",
  "ll": "define <4 x half> @test(<4 x i64> %a) {\n  %r = sitofp <4 x i64> %a to <4 x half>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <4 x i64> %a to <4 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<8 x half>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sshll v0.8h, v0.8b, #0\nscvtf v0.8h, v0.8h\nret",
  "giasm": "sshll v0.8h, v0.8b, #0\nscvtf v0.8h, v0.8h\nret",
  "ll": "define <8 x half> @test(<8 x i8> %a) {\n  %r = sitofp <8 x i8> %a to <8 x half>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <8 x i8> %a to <8 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<8 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf v0.8h, v0.8h\nret",
  "giasm": "scvtf v0.8h, v0.8h\nret",
  "ll": "define <8 x half> @test(<8 x i16> %a) {\n  %r = sitofp <8 x i16> %a to <8 x half>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <8 x i16> %a to <8 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<8 x half>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "scvtf v0.4s, v0.4s\nscvtf v1.4s, v1.4s\nfcvtn v0.4h, v0.4s\nfcvtn2 v0.8h, v1.4s\nret",
  "giasm": "scvtf v0.4s, v0.4s\nscvtf v1.4s, v1.4s\nfcvtn v0.4h, v0.4s\nfcvtn2 v0.8h, v1.4s\nret",
  "ll": "define <8 x half> @test(<8 x i32> %a) {\n  %r = sitofp <8 x i32> %a to <8 x half>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <8 x i32> %a to <8 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<16 x half>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "sshll2 v1.8h, v0.16b, #0\nsshll v0.8h, v0.8b, #0\nscvtf v1.8h, v1.8h\nscvtf v0.8h, v0.8h\nret",
  "giasm": "sshll v1.8h, v0.8b, #0\nsshll2 v2.8h, v0.16b, #0\nscvtf v0.8h, v1.8h\nscvtf v1.8h, v2.8h\nret",
  "ll": "define <16 x half> @test(<16 x i8> %a) {\n  %r = sitofp <16 x i8> %a to <16 x half>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <16 x i8> %a to <16 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<16 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "scvtf v0.8h, v0.8h\nscvtf v1.8h, v1.8h\nret",
  "giasm": "scvtf v0.8h, v0.8h\nscvtf v1.8h, v1.8h\nret",
  "ll": "define <16 x half> @test(<16 x i16> %a) {\n  %r = sitofp <16 x i16> %a to <16 x half>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <16 x i16> %a to <16 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<2 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf v0.2s, v0.2s\nret",
  "giasm": "scvtf v0.2s, v0.2s\nret",
  "ll": "define <2 x float> @test(<2 x i32> %a) {\n  %r = sitofp <2 x i32> %a to <2 x float>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <2 x i32> %a to <2 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<2 x float>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "scvtf v0.2d, v0.2d\nfcvtn v0.2s, v0.2d\nret",
  "giasm": "scvtf v0.2d, v0.2d\nfcvtn v0.2s, v0.2d\nret",
  "ll": "define <2 x float> @test(<2 x i64> %a) {\n  %r = sitofp <2 x i64> %a to <2 x float>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <2 x i64> %a to <2 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<4 x float>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sshll v0.4s, v0.4h, #0\nscvtf v0.4s, v0.4s\nret",
  "giasm": "sshll v0.4s, v0.4h, #0\nscvtf v0.4s, v0.4s\nret",
  "ll": "define <4 x float> @test(<4 x i16> %a) {\n  %r = sitofp <4 x i16> %a to <4 x float>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <4 x i16> %a to <4 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<4 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf v0.4s, v0.4s\nret",
  "giasm": "scvtf v0.4s, v0.4s\nret",
  "ll": "define <4 x float> @test(<4 x i32> %a) {\n  %r = sitofp <4 x i32> %a to <4 x float>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <4 x i32> %a to <4 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<4 x float>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "scvtf v0.2d, v0.2d\nscvtf v1.2d, v1.2d\nfcvtn v0.2s, v0.2d\nfcvtn2 v0.4s, v1.2d\nret",
  "giasm": "scvtf v0.2d, v0.2d\nscvtf v1.2d, v1.2d\nfcvtn v0.2s, v0.2d\nfcvtn2 v0.4s, v1.2d\nret",
  "ll": "define <4 x float> @test(<4 x i64> %a) {\n  %r = sitofp <4 x i64> %a to <4 x float>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <4 x i64> %a to <4 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<8 x float>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 10,
  "lat": 1,
  "sizelat": 1,
  "size": 10,
  "gisize": 5,
  "extrasize": 0,
  "asm": "zip1 v1.8b, v0.8b, v0.8b\nzip2 v0.8b, v0.8b, v0.8b\nshl v1.4h, v1.4h, #8\nshl v0.4h, v0.4h, #8\nsshr v1.4h, v1.4h, #8\nsshr v0.4h, v0.4h, #8\nsshll v1.4s, v1.4h, #0\nsshll v2.4s, v0.4h, #0\nscvtf v0.4s, v1.4s\nscvtf v1.4s, v2.4s\nret",
  "giasm": "sshll v0.8h, v0.8b, #0\nsshll v1.4s, v0.4h, #0\nsshll2 v2.4s, v0.8h, #0\nscvtf v0.4s, v1.4s\nscvtf v1.4s, v2.4s\nret",
  "ll": "define <8 x float> @test(<8 x i8> %a) {\n  %r = sitofp <8 x i8> %a to <8 x float>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <8 x i8> %a to <8 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<8 x float>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "sshll2 v1.4s, v0.8h, #0\nsshll v0.4s, v0.4h, #0\nscvtf v1.4s, v1.4s\nscvtf v0.4s, v0.4s\nret",
  "giasm": "sshll v1.4s, v0.4h, #0\nsshll2 v2.4s, v0.8h, #0\nscvtf v0.4s, v1.4s\nscvtf v1.4s, v2.4s\nret",
  "ll": "define <8 x float> @test(<8 x i16> %a) {\n  %r = sitofp <8 x i16> %a to <8 x float>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <8 x i16> %a to <8 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<8 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "scvtf v0.4s, v0.4s\nscvtf v1.4s, v1.4s\nret",
  "giasm": "scvtf v0.4s, v0.4s\nscvtf v1.4s, v1.4s\nret",
  "ll": "define <8 x float> @test(<8 x i32> %a) {\n  %r = sitofp <8 x i32> %a to <8 x float>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <8 x i32> %a to <8 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<2 x double>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sshll v0.2d, v0.2s, #0\nscvtf v0.2d, v0.2d\nret",
  "giasm": "sshll v0.2d, v0.2s, #0\nscvtf v0.2d, v0.2d\nret",
  "ll": "define <2 x double> @test(<2 x i32> %a) {\n  %r = sitofp <2 x i32> %a to <2 x double>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <2 x i32> %a to <2 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<2 x double>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "scvtf v0.2d, v0.2d\nret",
  "giasm": "scvtf v0.2d, v0.2d\nret",
  "ll": "define <2 x double> @test(<2 x i64> %a) {\n  %r = sitofp <2 x i64> %a to <2 x double>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <2 x i64> %a to <2 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<4 x double>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 9,
  "lat": 1,
  "sizelat": 1,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "sshll v0.4s, v0.4h, #0\nsshll2 v1.2d, v0.4s, #0\nsshll v0.2d, v0.2s, #0\nscvtf v1.2d, v1.2d\nscvtf v0.2d, v0.2d\nret",
  "giasm": "sshll v0.4s, v0.4h, #0\nsshll v1.2d, v0.2s, #0\nsshll2 v2.2d, v0.4s, #0\nscvtf v0.2d, v1.2d\nscvtf v1.2d, v2.2d\nret",
  "ll": "define <4 x double> @test(<4 x i16> %a) {\n  %r = sitofp <4 x i16> %a to <4 x double>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <4 x i16> %a to <4 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<4 x double>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "sshll2 v1.2d, v0.4s, #0\nsshll v0.2d, v0.2s, #0\nscvtf v1.2d, v1.2d\nscvtf v0.2d, v0.2d\nret",
  "giasm": "sshll v1.2d, v0.2s, #0\nsshll2 v2.2d, v0.4s, #0\nscvtf v0.2d, v1.2d\nscvtf v1.2d, v2.2d\nret",
  "ll": "define <4 x double> @test(<4 x i32> %a) {\n  %r = sitofp <4 x i32> %a to <4 x double>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <4 x i32> %a to <4 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "sitofp",
  "ty": "<4 x double>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "scvtf v0.2d, v0.2d\nscvtf v1.2d, v1.2d\nret",
  "giasm": "scvtf v0.2d, v0.2d\nscvtf v1.2d, v1.2d\nret",
  "ll": "define <4 x double> @test(<4 x i64> %a) {\n  %r = sitofp <4 x i64> %a to <4 x double>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = sitofp <4 x i64> %a to <4 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "uitofp",
  "ty": "half",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "and w8, w0, #0xff\nucvtf h0, w8\nret",
  "giasm": "and w8, w0, #0xff\nucvtf h0, w8\nret",
  "ll": "define half @test(i8 %a) {\n  %r = uitofp i8 %a to half\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i8 %a to half\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "uitofp",
  "ty": "half",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "and w8, w0, #0xffff\nucvtf h0, w8\nret",
  "giasm": "and w8, w0, #0xffff\nucvtf h0, w8\nret",
  "ll": "define half @test(i16 %a) {\n  %r = uitofp i16 %a to half\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i16 %a to half\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "uitofp",
  "ty": "half",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf h0, w0\nret",
  "giasm": "ucvtf h0, w0\nret",
  "ll": "define half @test(i32 %a) {\n  %r = uitofp i32 %a to half\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i32 %a to half\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "uitofp",
  "ty": "half",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf h0, x0\nret",
  "giasm": "ucvtf h0, x0\nret",
  "ll": "define half @test(i64 %a) {\n  %r = uitofp i64 %a to half\n  ret half %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i64 %a to half\nCost Model: Found an estimated cost of 1 for instruction:   ret half %r"
 },
 {
  "instr": "uitofp",
  "ty": "float",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "and w8, w0, #0xff\nucvtf s0, w8\nret",
  "giasm": "and w8, w0, #0xff\nucvtf s0, w8\nret",
  "ll": "define float @test(i8 %a) {\n  %r = uitofp i8 %a to float\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i8 %a to float\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "uitofp",
  "ty": "float",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "and w8, w0, #0xffff\nucvtf s0, w8\nret",
  "giasm": "and w8, w0, #0xffff\nucvtf s0, w8\nret",
  "ll": "define float @test(i16 %a) {\n  %r = uitofp i16 %a to float\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i16 %a to float\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "uitofp",
  "ty": "float",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf s0, w0\nret",
  "giasm": "ucvtf s0, w0\nret",
  "ll": "define float @test(i32 %a) {\n  %r = uitofp i32 %a to float\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i32 %a to float\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "uitofp",
  "ty": "float",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf s0, x0\nret",
  "giasm": "ucvtf s0, x0\nret",
  "ll": "define float @test(i64 %a) {\n  %r = uitofp i64 %a to float\n  ret float %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i64 %a to float\nCost Model: Found an estimated cost of 1 for instruction:   ret float %r"
 },
 {
  "instr": "uitofp",
  "ty": "double",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "and w8, w0, #0xff\nucvtf d0, w8\nret",
  "giasm": "and w8, w0, #0xff\nucvtf d0, w8\nret",
  "ll": "define double @test(i8 %a) {\n  %r = uitofp i8 %a to double\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i8 %a to double\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "uitofp",
  "ty": "double",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "and w8, w0, #0xffff\nucvtf d0, w8\nret",
  "giasm": "and w8, w0, #0xffff\nucvtf d0, w8\nret",
  "ll": "define double @test(i16 %a) {\n  %r = uitofp i16 %a to double\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i16 %a to double\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "uitofp",
  "ty": "double",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf d0, w0\nret",
  "giasm": "ucvtf d0, w0\nret",
  "ll": "define double @test(i32 %a) {\n  %r = uitofp i32 %a to double\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i32 %a to double\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "uitofp",
  "ty": "double",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf d0, x0\nret",
  "giasm": "ucvtf d0, x0\nret",
  "ll": "define double @test(i64 %a) {\n  %r = uitofp i64 %a to double\n  ret double %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp i64 %a to double\nCost Model: Found an estimated cost of 1 for instruction:   ret double %r"
 },
 {
  "instr": "uitofp",
  "ty": "<4 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf v0.4h, v0.4h\nret",
  "giasm": "ucvtf v0.4h, v0.4h\nret",
  "ll": "define <4 x half> @test(<4 x i16> %a) {\n  %r = uitofp <4 x i16> %a to <4 x half>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <4 x i16> %a to <4 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<4 x half>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ucvtf v0.4s, v0.4s\nfcvtn v0.4h, v0.4s\nret",
  "giasm": "ucvtf v0.4s, v0.4s\nfcvtn v0.4h, v0.4s\nret",
  "ll": "define <4 x half> @test(<4 x i32> %a) {\n  %r = uitofp <4 x i32> %a to <4 x half>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <4 x i32> %a to <4 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<4 x half>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 5,
  "gisize": 11,
  "extrasize": 0,
  "asm": "ucvtf v0.2d, v0.2d\nucvtf v1.2d, v1.2d\nfcvtn v0.2s, v0.2d\nfcvtn2 v0.4s, v1.2d\nfcvtn v0.4h, v0.4s\nret",
  "giasm": "ucvtf v0.2d, v0.2d\nucvtf v1.2d, v1.2d\nmov d2, v0.d[1]\nfcvt h0, d0\nmov d3, v1.d[1]\nfcvt h1, d1\nfcvt h2, d2\nmov v0.h[1], v2.h[0]\nfcvt h2, d3\nmov v0.h[2], v1.h[0]\nmov v0.h[3], v2.h[0]\nret",
  "ll": "define <4 x half> @test(<4 x i64> %a) {\n  %r = uitofp <4 x i64> %a to <4 x half>\n  ret <4 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <4 x i64> %a to <4 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x half> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<8 x half>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ushll v0.8h, v0.8b, #0\nucvtf v0.8h, v0.8h\nret",
  "giasm": "ushll v0.8h, v0.8b, #0\nucvtf v0.8h, v0.8h\nret",
  "ll": "define <8 x half> @test(<8 x i8> %a) {\n  %r = uitofp <8 x i8> %a to <8 x half>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <8 x i8> %a to <8 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<8 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf v0.8h, v0.8h\nret",
  "giasm": "ucvtf v0.8h, v0.8h\nret",
  "ll": "define <8 x half> @test(<8 x i16> %a) {\n  %r = uitofp <8 x i16> %a to <8 x half>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <8 x i16> %a to <8 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<8 x half>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ucvtf v0.4s, v0.4s\nucvtf v1.4s, v1.4s\nfcvtn v0.4h, v0.4s\nfcvtn2 v0.8h, v1.4s\nret",
  "giasm": "ucvtf v0.4s, v0.4s\nucvtf v1.4s, v1.4s\nfcvtn v0.4h, v0.4s\nfcvtn2 v0.8h, v1.4s\nret",
  "ll": "define <8 x half> @test(<8 x i32> %a) {\n  %r = uitofp <8 x i32> %a to <8 x half>\n  ret <8 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <8 x i32> %a to <8 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x half> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<16 x half>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ushll2 v1.8h, v0.16b, #0\nushll v0.8h, v0.8b, #0\nucvtf v1.8h, v1.8h\nucvtf v0.8h, v0.8h\nret",
  "giasm": "ushll v1.8h, v0.8b, #0\nushll2 v2.8h, v0.16b, #0\nucvtf v0.8h, v1.8h\nucvtf v1.8h, v2.8h\nret",
  "ll": "define <16 x half> @test(<16 x i8> %a) {\n  %r = uitofp <16 x i8> %a to <16 x half>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <16 x i8> %a to <16 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<16 x half>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ucvtf v0.8h, v0.8h\nucvtf v1.8h, v1.8h\nret",
  "giasm": "ucvtf v0.8h, v0.8h\nucvtf v1.8h, v1.8h\nret",
  "ll": "define <16 x half> @test(<16 x i16> %a) {\n  %r = uitofp <16 x i16> %a to <16 x half>\n  ret <16 x half> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <16 x i16> %a to <16 x half>\nCost Model: Found an estimated cost of 1 for instruction:   ret <16 x half> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<2 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf v0.2s, v0.2s\nret",
  "giasm": "ucvtf v0.2s, v0.2s\nret",
  "ll": "define <2 x float> @test(<2 x i32> %a) {\n  %r = uitofp <2 x i32> %a to <2 x float>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <2 x i32> %a to <2 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<2 x float>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ucvtf v0.2d, v0.2d\nfcvtn v0.2s, v0.2d\nret",
  "giasm": "ucvtf v0.2d, v0.2d\nfcvtn v0.2s, v0.2d\nret",
  "ll": "define <2 x float> @test(<2 x i64> %a) {\n  %r = uitofp <2 x i64> %a to <2 x float>\n  ret <2 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <2 x i64> %a to <2 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x float> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<4 x float>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ushll v0.4s, v0.4h, #0\nucvtf v0.4s, v0.4s\nret",
  "giasm": "ushll v0.4s, v0.4h, #0\nucvtf v0.4s, v0.4s\nret",
  "ll": "define <4 x float> @test(<4 x i16> %a) {\n  %r = uitofp <4 x i16> %a to <4 x float>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <4 x i16> %a to <4 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<4 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf v0.4s, v0.4s\nret",
  "giasm": "ucvtf v0.4s, v0.4s\nret",
  "ll": "define <4 x float> @test(<4 x i32> %a) {\n  %r = uitofp <4 x i32> %a to <4 x float>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <4 x i32> %a to <4 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<4 x float>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 5,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ucvtf v0.2d, v0.2d\nucvtf v1.2d, v1.2d\nfcvtn v0.2s, v0.2d\nfcvtn2 v0.4s, v1.2d\nret",
  "giasm": "ucvtf v0.2d, v0.2d\nucvtf v1.2d, v1.2d\nfcvtn v0.2s, v0.2d\nfcvtn2 v0.4s, v1.2d\nret",
  "ll": "define <4 x float> @test(<4 x i64> %a) {\n  %r = uitofp <4 x i64> %a to <4 x float>\n  ret <4 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <4 x i64> %a to <4 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x float> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<8 x float>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 10,
  "lat": 1,
  "sizelat": 1,
  "size": 8,
  "gisize": 5,
  "extrasize": 0,
  "asm": "zip1 v1.8b, v0.8b, v0.8b\nzip2 v0.8b, v0.8b, v0.8b\nbic v1.4h, #255, lsl #8\nbic v0.4h, #255, lsl #8\nushll v1.4s, v1.4h, #0\nushll v2.4s, v0.4h, #0\nucvtf v0.4s, v1.4s\nucvtf v1.4s, v2.4s\nret",
  "giasm": "ushll v0.8h, v0.8b, #0\nushll v1.4s, v0.4h, #0\nushll2 v2.4s, v0.8h, #0\nucvtf v0.4s, v1.4s\nucvtf v1.4s, v2.4s\nret",
  "ll": "define <8 x float> @test(<8 x i8> %a) {\n  %r = uitofp <8 x i8> %a to <8 x float>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <8 x i8> %a to <8 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<8 x float>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ushll2 v1.4s, v0.8h, #0\nushll v0.4s, v0.4h, #0\nucvtf v1.4s, v1.4s\nucvtf v0.4s, v0.4s\nret",
  "giasm": "ushll v1.4s, v0.4h, #0\nushll2 v2.4s, v0.8h, #0\nucvtf v0.4s, v1.4s\nucvtf v1.4s, v2.4s\nret",
  "ll": "define <8 x float> @test(<8 x i16> %a) {\n  %r = uitofp <8 x i16> %a to <8 x float>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <8 x i16> %a to <8 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<8 x float>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ucvtf v0.4s, v0.4s\nucvtf v1.4s, v1.4s\nret",
  "giasm": "ucvtf v0.4s, v0.4s\nucvtf v1.4s, v1.4s\nret",
  "ll": "define <8 x float> @test(<8 x i32> %a) {\n  %r = uitofp <8 x i32> %a to <8 x float>\n  ret <8 x float> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <8 x i32> %a to <8 x float>\nCost Model: Found an estimated cost of 1 for instruction:   ret <8 x float> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<2 x double>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ushll v0.2d, v0.2s, #0\nucvtf v0.2d, v0.2d\nret",
  "giasm": "ushll v0.2d, v0.2s, #0\nucvtf v0.2d, v0.2d\nret",
  "ll": "define <2 x double> @test(<2 x i32> %a) {\n  %r = uitofp <2 x i32> %a to <2 x double>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <2 x i32> %a to <2 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<2 x double>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ucvtf v0.2d, v0.2d\nret",
  "giasm": "ucvtf v0.2d, v0.2d\nret",
  "ll": "define <2 x double> @test(<2 x i64> %a) {\n  %r = uitofp <2 x i64> %a to <2 x double>\n  ret <2 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <2 x i64> %a to <2 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <2 x double> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<4 x double>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 9,
  "lat": 1,
  "sizelat": 1,
  "size": 5,
  "gisize": 5,
  "extrasize": 0,
  "asm": "ushll v0.4s, v0.4h, #0\nushll2 v1.2d, v0.4s, #0\nushll v0.2d, v0.2s, #0\nucvtf v1.2d, v1.2d\nucvtf v0.2d, v0.2d\nret",
  "giasm": "ushll v0.4s, v0.4h, #0\nushll v1.2d, v0.2s, #0\nushll2 v2.2d, v0.4s, #0\nucvtf v0.2d, v1.2d\nucvtf v1.2d, v2.2d\nret",
  "ll": "define <4 x double> @test(<4 x i16> %a) {\n  %r = uitofp <4 x i16> %a to <4 x double>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <4 x i16> %a to <4 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<4 x double>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ushll2 v1.2d, v0.4s, #0\nushll v0.2d, v0.2s, #0\nucvtf v1.2d, v1.2d\nucvtf v0.2d, v0.2d\nret",
  "giasm": "ushll v1.2d, v0.2s, #0\nushll2 v2.2d, v0.4s, #0\nucvtf v0.2d, v1.2d\nucvtf v1.2d, v2.2d\nret",
  "ll": "define <4 x double> @test(<4 x i32> %a) {\n  %r = uitofp <4 x i32> %a to <4 x double>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <4 x i32> %a to <4 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 },
 {
  "instr": "uitofp",
  "ty": "<4 x double>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 2,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ucvtf v0.2d, v0.2d\nucvtf v1.2d, v1.2d\nret",
  "giasm": "ucvtf v0.2d, v0.2d\nucvtf v1.2d, v1.2d\nret",
  "ll": "define <4 x double> @test(<4 x i64> %a) {\n  %r = uitofp <4 x i64> %a to <4 x double>\n  ret <4 x double> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found an estimated cost of 1 for instruction:   %r = uitofp <4 x i64> %a to <4 x double>\nCost Model: Found an estimated cost of 1 for instruction:   ret <4 x double> %r"
 }
]