[
 {
  "instr": "zext",
  "ty": "i8",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and w0, w0, #0xff\nret",
  "giasm": "and w0, w0, #0xff\nret",
  "ll": "define i16 @test(i8 %a) vscale_range(2, 2){\n  %r = zext i8 %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext i8 %a to i16\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i16 %r"
 },
 {
  "instr": "sext",
  "ty": "i8",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxtb w0, w0\nret",
  "giasm": "sxtb w0, w0\nret",
  "ll": "define i16 @test(i8 %a) vscale_range(2, 2){\n  %r = sext i8 %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext i8 %a to i16\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i16 %r"
 },
 {
  "instr": "zext",
  "ty": "i8",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and w0, w0, #0xff\nret",
  "giasm": "and w0, w0, #0xff\nret",
  "ll": "define i32 @test(i8 %a) vscale_range(2, 2){\n  %r = zext i8 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext i8 %a to i32\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i32 %r"
 },
 {
  "instr": "sext",
  "ty": "i8",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxtb w0, w0\nret",
  "giasm": "sxtb w0, w0\nret",
  "ll": "define i32 @test(i8 %a) vscale_range(2, 2){\n  %r = sext i8 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext i8 %a to i32\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i32 %r"
 },
 {
  "instr": "zext",
  "ty": "i8",
  "variant": "cast i64",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and x0, x0, #0xff\nret",
  "giasm": "and x0, x0, #0xff\nret",
  "ll": "define i64 @test(i8 %a) vscale_range(2, 2){\n  %r = zext i8 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = zext i8 %a to i64\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i64 %r"
 },
 {
  "instr": "sext",
  "ty": "i8",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxtb x0, w0\nret",
  "giasm": "sxtb x0, w0\nret",
  "ll": "define i64 @test(i8 %a) vscale_range(2, 2){\n  %r = sext i8 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext i8 %a to i64\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i64 %r"
 },
 {
  "instr": "trunc",
  "ty": "i16",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i8 @test(i16 %a) vscale_range(2, 2){\n  %r = trunc i16 %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc i16 %a to i8\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i8 %r"
 },
 {
  "instr": "zext",
  "ty": "i16",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and w0, w0, #0xffff\nret",
  "giasm": "and w0, w0, #0xffff\nret",
  "ll": "define i32 @test(i16 %a) vscale_range(2, 2){\n  %r = zext i16 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext i16 %a to i32\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i32 %r"
 },
 {
  "instr": "sext",
  "ty": "i16",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxth w0, w0\nret",
  "giasm": "sxth w0, w0\nret",
  "ll": "define i32 @test(i16 %a) vscale_range(2, 2){\n  %r = sext i16 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext i16 %a to i32\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i32 %r"
 },
 {
  "instr": "zext",
  "ty": "i16",
  "variant": "cast i64",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "and x0, x0, #0xffff\nret",
  "giasm": "and x0, x0, #0xffff\nret",
  "ll": "define i64 @test(i16 %a) vscale_range(2, 2){\n  %r = zext i16 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = zext i16 %a to i64\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i64 %r"
 },
 {
  "instr": "sext",
  "ty": "i16",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxth x0, w0\nret",
  "giasm": "sxth x0, w0\nret",
  "ll": "define i64 @test(i16 %a) vscale_range(2, 2){\n  %r = sext i16 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext i16 %a to i64\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i64 %r"
 },
 {
  "instr": "trunc",
  "ty": "i32",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i8 @test(i32 %a) vscale_range(2, 2){\n  %r = trunc i32 %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc i32 %a to i8\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i8 %r"
 },
 {
  "instr": "trunc",
  "ty": "i32",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i16 @test(i32 %a) vscale_range(2, 2){\n  %r = trunc i32 %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc i32 %a to i16\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i16 %r"
 },
 {
  "instr": "zext",
  "ty": "i32",
  "variant": "cast i64",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov w0, w0\nret",
  "giasm": "mov w0, w0\nret",
  "ll": "define i64 @test(i32 %a) vscale_range(2, 2){\n  %r = zext i32 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = zext i32 %a to i64\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i64 %r"
 },
 {
  "instr": "sext",
  "ty": "i32",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sxtw x0, w0\nret",
  "giasm": "sxtw x0, w0\nret",
  "ll": "define i64 @test(i32 %a) vscale_range(2, 2){\n  %r = sext i32 %a to i64\n  ret i64 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext i32 %a to i64\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i64 %r"
 },
 {
  "instr": "trunc",
  "ty": "i64",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i8 @test(i64 %a) vscale_range(2, 2){\n  %r = trunc i64 %a to i8\n  ret i8 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc i64 %a to i8\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i8 %r"
 },
 {
  "instr": "trunc",
  "ty": "i64",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i16 @test(i64 %a) vscale_range(2, 2){\n  %r = trunc i64 %a to i16\n  ret i16 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc i64 %a to i16\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i16 %r"
 },
 {
  "instr": "trunc",
  "ty": "i64",
  "variant": "cast i32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": 0,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "ret",
  "ll": "define i32 @test(i64 %a) vscale_range(2, 2){\n  %r = trunc i64 %a to i32\n  ret i32 %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc i64 %a to i32\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret i32 %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ushll v0.8h, v0.8b, #0\nret",
  "giasm": "ushll v0.8h, v0.8b, #0\nret",
  "ll": "define <8 x i16> @test(<8 x i8> %a) vscale_range(2, 2){\n  %r = zext <8 x i8> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <8 x i8> %a to <8 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i16> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sshll v0.8h, v0.8b, #0\nret",
  "giasm": "sshll v0.8h, v0.8b, #0\nret",
  "ll": "define <8 x i16> @test(<8 x i8> %a) vscale_range(2, 2){\n  %r = sext <8 x i8> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <8 x i8> %a to <8 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uunpklo z0.h, z0.b\nuunpklo z0.s, z0.h\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "ushll v1.8h, v0.8b, #0\nushll v0.4s, v1.4h, #0\nushll2 v1.4s, v1.8h, #0\nret",
  "ll": "define <8 x i32> @test(<8 x i8> %a) vscale_range(2, 2){\n  %r = zext <8 x i8> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <8 x i8> %a to <8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 3,
  "extrasize": 0,
  "asm": "sunpklo z0.h, z0.b\nsunpklo z0.s, z0.h\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "sshll v1.8h, v0.8b, #0\nsshll v0.4s, v1.4h, #0\nsshll2 v1.4s, v1.8h, #0\nret",
  "ll": "define <8 x i32> @test(<8 x i8> %a) vscale_range(2, 2){\n  %r = sext <8 x i8> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <8 x i8> %a to <8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 10,
  "gisize": 7,
  "extrasize": 0,
  "asm": "ushll v0.8h, v0.8b, #0\next v1.16b, v0.16b, v0.16b, #8\nuunpklo z0.s, z0.h\nuunpklo z1.s, z1.h\nuunpklo z0.d, z0.s\nuunpklo z2.d, z1.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nret",
  "giasm": "ushll v0.8h, v0.8b, #0\nushll v1.4s, v0.4h, #0\nushll2 v3.4s, v0.8h, #0\nushll v0.2d, v1.2s, #0\nushll2 v1.2d, v1.4s, #0\nushll v2.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nret",
  "ll": "define <8 x i64> @test(<8 x i8> %a) vscale_range(2, 2){\n  %r = zext <8 x i8> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <8 x i8> %a to <8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 10,
  "gisize": 7,
  "extrasize": 0,
  "asm": "sshll v0.8h, v0.8b, #0\next v1.16b, v0.16b, v0.16b, #8\nsunpklo z0.s, z0.h\nsunpklo z1.s, z1.h\nsunpklo z0.d, z0.s\nsunpklo z2.d, z1.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nret",
  "giasm": "sshll v0.8h, v0.8b, #0\nsshll v1.4s, v0.4h, #0\nsshll2 v3.4s, v0.8h, #0\nsshll v0.2d, v1.2s, #0\nsshll2 v1.2d, v1.4s, #0\nsshll v2.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nret",
  "ll": "define <8 x i64> @test(<8 x i8> %a) vscale_range(2, 2){\n  %r = sext <8 x i8> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <8 x i8> %a to <8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uunpklo z0.h, z0.b\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "ushll v2.8h, v0.8b, #0\nushll2 v1.8h, v0.16b, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x i16> @test(<16 x i8> %a) vscale_range(2, 2){\n  %r = zext <16 x i8> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <16 x i8> %a to <16 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i16> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sunpklo z0.h, z0.b\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "sshll v2.8h, v0.8b, #0\nsshll2 v1.8h, v0.16b, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <16 x i16> @test(<16 x i8> %a) vscale_range(2, 2){\n  %r = sext <16 x i8> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <16 x i8> %a to <16 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nuunpklo z0.h, z0.b\nuunpklo z1.h, z1.b\nuunpklo z0.s, z0.h\nuunpklo z2.s, z1.h\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nret",
  "giasm": "ushll v1.8h, v0.8b, #0\nushll2 v3.8h, v0.16b, #0\nushll v0.4s, v1.4h, #0\nushll2 v1.4s, v1.8h, #0\nushll v2.4s, v3.4h, #0\nushll2 v3.4s, v3.8h, #0\nret",
  "ll": "define <16 x i32> @test(<16 x i8> %a) vscale_range(2, 2){\n  %r = zext <16 x i8> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <16 x i8> %a to <16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nsunpklo z0.h, z0.b\nsunpklo z1.h, z1.b\nsunpklo z0.s, z0.h\nsunpklo z2.s, z1.h\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nret",
  "giasm": "sshll v1.8h, v0.8b, #0\nsshll2 v3.8h, v0.16b, #0\nsshll v0.4s, v1.4h, #0\nsshll2 v1.4s, v1.8h, #0\nsshll v2.4s, v3.4h, #0\nsshll2 v3.4s, v3.8h, #0\nret",
  "ll": "define <16 x i32> @test(<16 x i8> %a) vscale_range(2, 2){\n  %r = sext <16 x i8> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <16 x i8> %a to <16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 20,
  "gisize": 14,
  "extrasize": 0,
  "asm": "ushll v1.8h, v0.8b, #0\nushll2 v0.8h, v0.16b, #0\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nuunpklo z1.s, z1.h\nuunpklo z4.s, z0.h\nuunpklo z2.s, z2.h\nuunpklo z3.s, z3.h\nuunpklo z0.d, z1.s\nuunpklo z4.d, z4.s\nuunpklo z2.d, z2.s\nuunpklo z6.d, z3.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nret",
  "giasm": "ushll v1.8h, v0.8b, #0\nushll2 v0.8h, v0.16b, #0\nushll v2.4s, v1.4h, #0\nushll2 v3.4s, v1.8h, #0\nushll v5.4s, v0.4h, #0\nushll2 v7.4s, v0.8h, #0\nushll v0.2d, v2.2s, #0\nushll2 v1.2d, v2.4s, #0\nushll v2.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nushll v4.2d, v5.2s, #0\nushll2 v5.2d, v5.4s, #0\nushll v6.2d, v7.2s, #0\nushll2 v7.2d, v7.4s, #0\nret",
  "ll": "define <16 x i64> @test(<16 x i8> %a) vscale_range(2, 2){\n  %r = zext <16 x i8> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <16 x i8> %a to <16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 20,
  "gisize": 14,
  "extrasize": 0,
  "asm": "sshll v1.8h, v0.8b, #0\nsshll2 v0.8h, v0.16b, #0\next v2.16b, v1.16b, v1.16b, #8\next v3.16b, v0.16b, v0.16b, #8\nsunpklo z1.s, z1.h\nsunpklo z4.s, z0.h\nsunpklo z2.s, z2.h\nsunpklo z3.s, z3.h\nsunpklo z0.d, z1.s\nsunpklo z4.d, z4.s\nsunpklo z2.d, z2.s\nsunpklo z6.d, z3.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nret",
  "giasm": "sshll v1.8h, v0.8b, #0\nsshll2 v0.8h, v0.16b, #0\nsshll v2.4s, v1.4h, #0\nsshll2 v3.4s, v1.8h, #0\nsshll v5.4s, v0.4h, #0\nsshll2 v7.4s, v0.8h, #0\nsshll v0.2d, v2.2s, #0\nsshll2 v1.2d, v2.4s, #0\nsshll v2.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nsshll v4.2d, v5.2s, #0\nsshll2 v5.2d, v5.4s, #0\nsshll v6.2d, v7.2s, #0\nsshll2 v7.2d, v7.4s, #0\nret",
  "ll": "define <16 x i64> @test(<16 x i8> %a) vscale_range(2, 2){\n  %r = sext <16 x i8> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <16 x i8> %a to <16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<32 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uunpklo z2.h, z1.b\nuunpklo z0.h, z0.b\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "ushll v4.8h, v0.8b, #0\nushll2 v5.8h, v0.16b, #0\nushll v2.8h, v1.8b, #0\nushll2 v3.8h, v1.16b, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <32 x i16> @test(<32 x i8> %a) vscale_range(2, 2){\n  %r = zext <32 x i8> %a to <32 x i16>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <32 x i8> %a to <32 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i16> %r"
 },
 {
  "instr": "sext",
  "ty": "<32 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 4,
  "extrasize": 0,
  "asm": "sunpklo z2.h, z1.b\nsunpklo z0.h, z0.b\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "sshll v4.8h, v0.8b, #0\nsshll2 v5.8h, v0.16b, #0\nsshll v2.8h, v1.8b, #0\nsshll2 v3.8h, v1.16b, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <32 x i16> @test(<32 x i8> %a) vscale_range(2, 2){\n  %r = sext <32 x i8> %a to <32 x i16>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <32 x i8> %a to <32 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<32 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 18,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v0.16b, #8\next v3.16b, v1.16b, v1.16b, #8\nuunpklo z0.h, z0.b\nuunpklo z1.h, z1.b\nuunpklo z2.h, z2.b\nuunpklo z3.h, z3.b\nuunpklo z0.s, z0.h\nuunpklo z4.s, z1.h\nuunpklo z2.s, z2.h\nuunpklo z6.s, z3.h\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nret",
  "giasm": "ushll v2.8h, v0.8b, #0\nushll2 v3.8h, v0.16b, #0\nushll v5.8h, v1.8b, #0\nushll2 v7.8h, v1.16b, #0\nushll v0.4s, v2.4h, #0\nushll2 v1.4s, v2.8h, #0\nushll v2.4s, v3.4h, #0\nushll2 v3.4s, v3.8h, #0\nushll v4.4s, v5.4h, #0\nushll2 v5.4s, v5.8h, #0\nushll v6.4s, v7.4h, #0\nushll2 v7.4s, v7.8h, #0\nret",
  "ll": "define <32 x i32> @test(<32 x i8> %a) vscale_range(2, 2){\n  %r = zext <32 x i8> %a to <32 x i32>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <32 x i8> %a to <32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<32 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 18,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v0.16b, #8\next v3.16b, v1.16b, v1.16b, #8\nsunpklo z0.h, z0.b\nsunpklo z1.h, z1.b\nsunpklo z2.h, z2.b\nsunpklo z3.h, z3.b\nsunpklo z0.s, z0.h\nsunpklo z4.s, z1.h\nsunpklo z2.s, z2.h\nsunpklo z6.s, z3.h\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nret",
  "giasm": "sshll v2.8h, v0.8b, #0\nsshll2 v3.8h, v0.16b, #0\nsshll v5.8h, v1.8b, #0\nsshll2 v7.8h, v1.16b, #0\nsshll v0.4s, v2.4h, #0\nsshll2 v1.4s, v2.8h, #0\nsshll v2.4s, v3.4h, #0\nsshll2 v3.4s, v3.8h, #0\nsshll v4.4s, v5.4h, #0\nsshll2 v5.4s, v5.8h, #0\nsshll v6.4s, v7.4h, #0\nsshll2 v7.4s, v7.8h, #0\nret",
  "ll": "define <32 x i32> @test(<32 x i8> %a) vscale_range(2, 2){\n  %r = sext <32 x i8> %a to <32 x i32>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <32 x i8> %a to <32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<32 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 32,
  "gisize": 36,
  "extrasize": 0,
  "asm": "ushll2 v2.8h, v1.16b, #0\nushll2 v3.8h, v0.16b, #0\nushll v1.8h, v1.8b, #0\nushll v0.8h, v0.8b, #0\next v4.16b, v2.16b, v2.16b, #8\nuunpklo z2.s, z2.h\next v5.16b, v3.16b, v3.16b, #8\nuunpklo z3.s, z3.h\next v6.16b, v1.16b, v1.16b, #8\nuunpklo z1.s, z1.h\next v7.16b, v0.16b, v0.16b, #8\nuunpklo z0.s, z0.h\nuunpklo z4.s, z4.h\nuunpklo z2.d, z2.s\nuunpklo z5.s, z5.h\nuunpklo z3.d, z3.s\nuunpklo z6.s, z6.h\nuunpklo z1.d, z1.s\nuunpklo z7.s, z7.h\nuunpklo z0.d, z0.s\nuunpklo z4.d, z4.s\nstr z2, [x8, #6, mul vl]\nuunpklo z2.d, z5.s\nstr z3, [x8, #2, mul vl]\nuunpklo z3.d, z6.s\nstr z1, [x8, #4, mul vl]\nuunpklo z1.d, z7.s\nstr z0, [x8]\nstr z4, [x8, #7, mul vl]\nstr z2, [x8, #3, mul vl]\nstr z3, [x8, #5, mul vl]\nstr z1, [x8, #1, mul vl]\nret",
  "giasm": "ushll v2.8h, v0.8b, #0\nushll2 v0.8h, v0.16b, #0\nushll v6.8h, v1.8b, #0\nushll2 v1.8h, v1.16b, #0\nushll v3.4s, v2.4h, #0\nushll2 v2.4s, v2.8h, #0\nushll v5.4s, v0.4h, #0\nushll2 v0.4s, v0.8h, #0\nushll v4.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nushll v7.2d, v2.2s, #0\nushll2 v2.2d, v2.4s, #0\nstp q4, q3, [x8]\nushll v4.2d, v5.2s, #0\nushll v3.4s, v6.4h, #0\nushll2 v5.2d, v5.4s, #0\nstp q7, q2, [x8, #32]\nushll v7.2d, v0.2s, #0\nushll2 v2.4s, v6.8h, #0\nushll2 v0.2d, v0.4s, #0\nstp q4, q5, [x8, #64]\nushll v4.2d, v3.2s, #0\nushll v5.4s, v1.4h, #0\nushll2 v3.2d, v3.4s, #0\nstp q7, q0, [x8, #96]\nushll v6.2d, v2.2s, #0\nushll2 v0.2d, v2.4s, #0\nushll2 v1.4s, v1.8h, #0\nushll v2.2d, v5.2s, #0\nstp q4, q3, [x8, #128]\nushll2 v3.2d, v5.4s, #0\nstp q6, q0, [x8, #160]\nushll v4.2d, v1.2s, #0\nushll2 v0.2d, v1.4s, #0\nstp q2, q3, [x8, #192]\nstp q4, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i8> %a) vscale_range(2, 2){\n  %r = zext <32 x i8> %a to <32 x i64>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <32 x i8> %a to <32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<32 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 32,
  "gisize": 36,
  "extrasize": 0,
  "asm": "sshll2 v2.8h, v1.16b, #0\nsshll2 v3.8h, v0.16b, #0\nsshll v1.8h, v1.8b, #0\nsshll v0.8h, v0.8b, #0\next v4.16b, v2.16b, v2.16b, #8\nsunpklo z2.s, z2.h\next v5.16b, v3.16b, v3.16b, #8\nsunpklo z3.s, z3.h\next v6.16b, v1.16b, v1.16b, #8\nsunpklo z1.s, z1.h\next v7.16b, v0.16b, v0.16b, #8\nsunpklo z0.s, z0.h\nsunpklo z4.s, z4.h\nsunpklo z2.d, z2.s\nsunpklo z5.s, z5.h\nsunpklo z3.d, z3.s\nsunpklo z6.s, z6.h\nsunpklo z1.d, z1.s\nsunpklo z7.s, z7.h\nsunpklo z0.d, z0.s\nsunpklo z4.d, z4.s\nstr z2, [x8, #6, mul vl]\nsunpklo z2.d, z5.s\nstr z3, [x8, #2, mul vl]\nsunpklo z3.d, z6.s\nstr z1, [x8, #4, mul vl]\nsunpklo z1.d, z7.s\nstr z0, [x8]\nstr z4, [x8, #7, mul vl]\nstr z2, [x8, #3, mul vl]\nstr z3, [x8, #5, mul vl]\nstr z1, [x8, #1, mul vl]\nret",
  "giasm": "sshll v2.8h, v0.8b, #0\nsshll2 v0.8h, v0.16b, #0\nsshll v6.8h, v1.8b, #0\nsshll2 v1.8h, v1.16b, #0\nsshll v3.4s, v2.4h, #0\nsshll2 v2.4s, v2.8h, #0\nsshll v5.4s, v0.4h, #0\nsshll2 v0.4s, v0.8h, #0\nsshll v4.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nsshll v7.2d, v2.2s, #0\nsshll2 v2.2d, v2.4s, #0\nstp q4, q3, [x8]\nsshll v4.2d, v5.2s, #0\nsshll v3.4s, v6.4h, #0\nsshll2 v5.2d, v5.4s, #0\nstp q7, q2, [x8, #32]\nsshll v7.2d, v0.2s, #0\nsshll2 v2.4s, v6.8h, #0\nsshll2 v0.2d, v0.4s, #0\nstp q4, q5, [x8, #64]\nsshll v4.2d, v3.2s, #0\nsshll v5.4s, v1.4h, #0\nsshll2 v3.2d, v3.4s, #0\nstp q7, q0, [x8, #96]\nsshll v6.2d, v2.2s, #0\nsshll2 v0.2d, v2.4s, #0\nsshll2 v1.4s, v1.8h, #0\nsshll v2.2d, v5.2s, #0\nstp q4, q3, [x8, #128]\nsshll2 v3.2d, v5.4s, #0\nstp q6, q0, [x8, #160]\nsshll v4.2d, v1.2s, #0\nsshll2 v0.2d, v1.4s, #0\nstp q2, q3, [x8, #192]\nstp q4, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i8> %a) vscale_range(2, 2){\n  %r = sext <32 x i8> %a to <32 x i64>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <32 x i8> %a to <32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<4 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ushll v0.4s, v0.4h, #0\nret",
  "giasm": "ushll v0.4s, v0.4h, #0\nret",
  "ll": "define <4 x i32> @test(<4 x i16> %a) vscale_range(2, 2){\n  %r = zext <4 x i16> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <4 x i16> %a to <4 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <4 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<4 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sshll v0.4s, v0.4h, #0\nret",
  "giasm": "sshll v0.4s, v0.4h, #0\nret",
  "ll": "define <4 x i32> @test(<4 x i16> %a) vscale_range(2, 2){\n  %r = sext <4 x i16> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <4 x i16> %a to <4 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <4 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<4 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 3,
  "extrasize": 0,
  "asm": "uunpklo z0.s, z0.h\nuunpklo z0.d, z0.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "ushll v1.4s, v0.4h, #0\nushll v0.2d, v1.2s, #0\nushll2 v1.2d, v1.4s, #0\nret",
  "ll": "define <4 x i64> @test(<4 x i16> %a) vscale_range(2, 2){\n  %r = zext <4 x i16> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <4 x i16> %a to <4 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <4 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<4 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": 3,
  "extrasize": 0,
  "asm": "sunpklo z0.s, z0.h\nsunpklo z0.d, z0.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "sshll v1.4s, v0.4h, #0\nsshll v0.2d, v1.2s, #0\nsshll2 v1.2d, v1.4s, #0\nret",
  "ll": "define <4 x i64> @test(<4 x i16> %a) vscale_range(2, 2){\n  %r = sext <4 x i16> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <4 x i16> %a to <4 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <4 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i16>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 16,
  "gisize": 1,
  "extrasize": 0,
  "asm": "umov w8, v0.h[0]\numov w9, v0.h[1]\nfmov s1, w8\numov w8, v0.h[2]\nmov v1.b[1], w9\nmov v1.b[2], w8\numov w8, v0.h[3]\nmov v1.b[3], w8\numov w8, v0.h[4]\nmov v1.b[4], w8\numov w8, v0.h[5]\nmov v1.b[5], w8\numov w8, v0.h[6]\nmov v1.b[6], w8\numov w8, v0.h[7]\nmov v1.b[7], w8\nfmov d0, d1\nret",
  "giasm": "xtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x i16> %a) vscale_range(2, 2){\n  %r = trunc <8 x i16> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = trunc <8 x i16> %a to <8 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i8> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uunpklo z0.s, z0.h\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "ushll v2.4s, v0.4h, #0\nushll2 v1.4s, v0.8h, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x i32> @test(<8 x i16> %a) vscale_range(2, 2){\n  %r = zext <8 x i16> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <8 x i16> %a to <8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sunpklo z0.s, z0.h\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "sshll v2.4s, v0.4h, #0\nsshll2 v1.4s, v0.8h, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <8 x i32> @test(<8 x i16> %a) vscale_range(2, 2){\n  %r = sext <8 x i16> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <8 x i16> %a to <8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nuunpklo z0.s, z0.h\nuunpklo z1.s, z1.h\nuunpklo z0.d, z0.s\nuunpklo z2.d, z1.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nret",
  "giasm": "ushll v1.4s, v0.4h, #0\nushll2 v3.4s, v0.8h, #0\nushll v0.2d, v1.2s, #0\nushll2 v1.2d, v1.4s, #0\nushll v2.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nret",
  "ll": "define <8 x i64> @test(<8 x i16> %a) vscale_range(2, 2){\n  %r = zext <8 x i16> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <8 x i16> %a to <8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 9,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ext v1.16b, v0.16b, v0.16b, #8\nsunpklo z0.s, z0.h\nsunpklo z1.s, z1.h\nsunpklo z0.d, z0.s\nsunpklo z2.d, z1.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nret",
  "giasm": "sshll v1.4s, v0.4h, #0\nsshll2 v3.4s, v0.8h, #0\nsshll v0.2d, v1.2s, #0\nsshll2 v1.2d, v1.4s, #0\nsshll v2.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nret",
  "ll": "define <8 x i64> @test(<8 x i16> %a) vscale_range(2, 2){\n  %r = sext <8 x i16> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <8 x i16> %a to <8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i16>",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ptrue p0.h, vl8\nsplice z0.h, p0, { z0.h, z1.h }\nuzp1 z0.b, z0.b, z0.b\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i16> %a) vscale_range(2, 2){\n  %r = trunc <16 x i16> %a to <16 x i8>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <16 x i16> %a to <16 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i8> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uunpklo z2.s, z1.h\nuunpklo z0.s, z0.h\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "ushll v4.4s, v0.4h, #0\nushll2 v5.4s, v0.8h, #0\nushll v2.4s, v1.4h, #0\nushll2 v3.4s, v1.8h, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <16 x i32> @test(<16 x i16> %a) vscale_range(2, 2){\n  %r = zext <16 x i16> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <16 x i16> %a to <16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 4,
  "extrasize": 0,
  "asm": "sunpklo z2.s, z1.h\nsunpklo z0.s, z0.h\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "sshll v4.4s, v0.4h, #0\nsshll2 v5.4s, v0.8h, #0\nsshll v2.4s, v1.4h, #0\nsshll2 v3.4s, v1.8h, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <16 x i32> @test(<16 x i16> %a) vscale_range(2, 2){\n  %r = sext <16 x i16> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <16 x i16> %a to <16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 18,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v0.16b, #8\next v3.16b, v1.16b, v1.16b, #8\nuunpklo z0.s, z0.h\nuunpklo z1.s, z1.h\nuunpklo z2.s, z2.h\nuunpklo z3.s, z3.h\nuunpklo z0.d, z0.s\nuunpklo z4.d, z1.s\nuunpklo z2.d, z2.s\nuunpklo z6.d, z3.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nret",
  "giasm": "ushll v2.4s, v0.4h, #0\nushll2 v3.4s, v0.8h, #0\nushll v5.4s, v1.4h, #0\nushll2 v7.4s, v1.8h, #0\nushll v0.2d, v2.2s, #0\nushll2 v1.2d, v2.4s, #0\nushll v2.2d, v3.2s, #0\nushll2 v3.2d, v3.4s, #0\nushll v4.2d, v5.2s, #0\nushll2 v5.2d, v5.4s, #0\nushll v6.2d, v7.2s, #0\nushll2 v7.2d, v7.4s, #0\nret",
  "ll": "define <16 x i64> @test(<16 x i16> %a) vscale_range(2, 2){\n  %r = zext <16 x i16> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <16 x i16> %a to <16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 18,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ext v2.16b, v0.16b, v0.16b, #8\next v3.16b, v1.16b, v1.16b, #8\nsunpklo z0.s, z0.h\nsunpklo z1.s, z1.h\nsunpklo z2.s, z2.h\nsunpklo z3.s, z3.h\nsunpklo z0.d, z0.s\nsunpklo z4.d, z1.s\nsunpklo z2.d, z2.s\nsunpklo z6.d, z3.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nret",
  "giasm": "sshll v2.4s, v0.4h, #0\nsshll2 v3.4s, v0.8h, #0\nsshll v5.4s, v1.4h, #0\nsshll2 v7.4s, v1.8h, #0\nsshll v0.2d, v2.2s, #0\nsshll2 v1.2d, v2.4s, #0\nsshll v2.2d, v3.2s, #0\nsshll2 v3.2d, v3.4s, #0\nsshll v4.2d, v5.2s, #0\nsshll2 v5.2d, v5.4s, #0\nsshll v6.2d, v7.2s, #0\nsshll2 v7.2d, v7.4s, #0\nret",
  "ll": "define <16 x i64> @test(<16 x i16> %a) vscale_range(2, 2){\n  %r = sext <16 x i16> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <16 x i16> %a to <16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i16>",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 4,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ptrue p0.h, vl8\nsplice z2.h, p0, { z2.h, z3.h }\nsplice z0.h, p0, { z0.h, z1.h }\nuzp1 z0.b, z0.b, z0.b\nuzp1 z1.b, z2.b, z2.b\nret",
  "giasm": "uzp1 v0.16b, v0.16b, v1.16b\nuzp1 v1.16b, v2.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i16> %a) vscale_range(2, 2){\n  %r = trunc <32 x i16> %a to <32 x i8>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <32 x i16> %a to <32 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i8> %r"
 },
 {
  "instr": "zext",
  "ty": "<32 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": 8,
  "extrasize": 0,
  "asm": "uunpklo z16.s, z1.h\nuunpklo z6.s, z3.h\nuunpklo z4.s, z2.h\nuunpklo z0.s, z0.h\nmovprfx z3, z16\next z3.b, z3.b, z16.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmov v2.16b, v16.16b\nret",
  "giasm": "ushll v16.4s, v0.4h, #0\nushll2 v17.4s, v0.8h, #0\nushll v18.4s, v1.4h, #0\nushll2 v19.4s, v1.8h, #0\nushll v4.4s, v2.4h, #0\nushll2 v5.4s, v2.8h, #0\nushll v6.4s, v3.4h, #0\nushll2 v7.4s, v3.8h, #0\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <32 x i32> @test(<32 x i16> %a) vscale_range(2, 2){\n  %r = zext <32 x i16> %a to <32 x i32>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <32 x i16> %a to <32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<32 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": 8,
  "extrasize": 0,
  "asm": "sunpklo z16.s, z1.h\nsunpklo z6.s, z3.h\nsunpklo z4.s, z2.h\nsunpklo z0.s, z0.h\nmovprfx z3, z16\next z3.b, z3.b, z16.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmov v2.16b, v16.16b\nret",
  "giasm": "sshll v16.4s, v0.4h, #0\nsshll2 v17.4s, v0.8h, #0\nsshll v18.4s, v1.4h, #0\nsshll2 v19.4s, v1.8h, #0\nsshll v4.4s, v2.4h, #0\nsshll2 v5.4s, v2.8h, #0\nsshll v6.4s, v3.4h, #0\nsshll2 v7.4s, v3.8h, #0\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <32 x i32> @test(<32 x i16> %a) vscale_range(2, 2){\n  %r = sext <32 x i16> %a to <32 x i32>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <32 x i16> %a to <32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<32 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 28,
  "gisize": 32,
  "extrasize": 0,
  "asm": "ext v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\nuunpklo z3.s, z3.h\nuunpklo z2.s, z2.h\nuunpklo z1.s, z1.h\next v7.16b, v0.16b, v0.16b, #8\nuunpklo z0.s, z0.h\nuunpklo z4.s, z4.h\nuunpklo z5.s, z5.h\nuunpklo z6.s, z6.h\nuunpklo z3.d, z3.s\nuunpklo z2.d, z2.s\nuunpklo z1.d, z1.s\nuunpklo z7.s, z7.h\nuunpklo z0.d, z0.s\nuunpklo z4.d, z4.s\nstr z3, [x8, #6, mul vl]\nuunpklo z3.d, z5.s\nstr z2, [x8, #4, mul vl]\nuunpklo z2.d, z6.s\nstr z1, [x8, #2, mul vl]\nuunpklo z1.d, z7.s\nstr z0, [x8]\nstr z4, [x8, #7, mul vl]\nstr z3, [x8, #5, mul vl]\nstr z2, [x8, #3, mul vl]\nstr z1, [x8, #1, mul vl]\nret",
  "giasm": "ushll v4.4s, v0.4h, #0\nushll2 v0.4s, v0.8h, #0\nushll v6.4s, v1.4h, #0\nushll2 v1.4s, v1.8h, #0\nushll v5.2d, v4.2s, #0\nushll2 v4.2d, v4.4s, #0\nushll v7.2d, v0.2s, #0\nushll2 v0.2d, v0.4s, #0\nstp q5, q4, [x8]\nushll v5.2d, v6.2s, #0\nushll v4.4s, v2.4h, #0\nushll2 v6.2d, v6.4s, #0\nstp q7, q0, [x8, #32]\nushll v7.2d, v1.2s, #0\nushll2 v0.4s, v2.8h, #0\nushll2 v1.2d, v1.4s, #0\nushll v2.2d, v4.2s, #0\nushll2 v4.2d, v4.4s, #0\nstp q5, q6, [x8, #64]\nushll v5.4s, v3.4h, #0\nstp q7, q1, [x8, #96]\nushll v6.2d, v0.2s, #0\nushll2 v0.2d, v0.4s, #0\nushll2 v1.4s, v3.8h, #0\nstp q2, q4, [x8, #128]\nushll v2.2d, v5.2s, #0\nushll2 v3.2d, v5.4s, #0\nstp q6, q0, [x8, #160]\nushll v4.2d, v1.2s, #0\nushll2 v0.2d, v1.4s, #0\nstp q2, q3, [x8, #192]\nstp q4, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i16> %a) vscale_range(2, 2){\n  %r = zext <32 x i16> %a to <32 x i64>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <32 x i16> %a to <32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<32 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 28,
  "gisize": 32,
  "extrasize": 0,
  "asm": "ext v4.16b, v3.16b, v3.16b, #8\next v5.16b, v2.16b, v2.16b, #8\next v6.16b, v1.16b, v1.16b, #8\nsunpklo z3.s, z3.h\nsunpklo z2.s, z2.h\nsunpklo z1.s, z1.h\next v7.16b, v0.16b, v0.16b, #8\nsunpklo z0.s, z0.h\nsunpklo z4.s, z4.h\nsunpklo z5.s, z5.h\nsunpklo z6.s, z6.h\nsunpklo z3.d, z3.s\nsunpklo z2.d, z2.s\nsunpklo z1.d, z1.s\nsunpklo z7.s, z7.h\nsunpklo z0.d, z0.s\nsunpklo z4.d, z4.s\nstr z3, [x8, #6, mul vl]\nsunpklo z3.d, z5.s\nstr z2, [x8, #4, mul vl]\nsunpklo z2.d, z6.s\nstr z1, [x8, #2, mul vl]\nsunpklo z1.d, z7.s\nstr z0, [x8]\nstr z4, [x8, #7, mul vl]\nstr z3, [x8, #5, mul vl]\nstr z2, [x8, #3, mul vl]\nstr z1, [x8, #1, mul vl]\nret",
  "giasm": "sshll v4.4s, v0.4h, #0\nsshll2 v0.4s, v0.8h, #0\nsshll v6.4s, v1.4h, #0\nsshll2 v1.4s, v1.8h, #0\nsshll v5.2d, v4.2s, #0\nsshll2 v4.2d, v4.4s, #0\nsshll v7.2d, v0.2s, #0\nsshll2 v0.2d, v0.4s, #0\nstp q5, q4, [x8]\nsshll v5.2d, v6.2s, #0\nsshll v4.4s, v2.4h, #0\nsshll2 v6.2d, v6.4s, #0\nstp q7, q0, [x8, #32]\nsshll v7.2d, v1.2s, #0\nsshll2 v0.4s, v2.8h, #0\nsshll2 v1.2d, v1.4s, #0\nsshll v2.2d, v4.2s, #0\nsshll2 v4.2d, v4.4s, #0\nstp q5, q6, [x8, #64]\nsshll v5.4s, v3.4h, #0\nstp q7, q1, [x8, #96]\nsshll v6.2d, v0.2s, #0\nsshll2 v0.2d, v0.4s, #0\nsshll2 v1.4s, v3.8h, #0\nstp q2, q4, [x8, #128]\nsshll v2.2d, v5.2s, #0\nsshll2 v3.2d, v5.4s, #0\nstp q6, q0, [x8, #160]\nsshll v4.2d, v1.2s, #0\nsshll2 v0.2d, v1.4s, #0\nstp q2, q3, [x8, #192]\nstp q4, q0, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i16> %a) vscale_range(2, 2){\n  %r = sext <32 x i16> %a to <32 x i64>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <32 x i16> %a to <32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<2 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ushll v0.2d, v0.2s, #0\nret",
  "giasm": "ushll v0.2d, v0.2s, #0\nret",
  "ll": "define <2 x i64> @test(<2 x i32> %a) vscale_range(2, 2){\n  %r = zext <2 x i32> %a to <2 x i64>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <2 x i32> %a to <2 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <2 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<2 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "sshll v0.2d, v0.2s, #0\nret",
  "giasm": "sshll v0.2d, v0.2s, #0\nret",
  "ll": "define <2 x i64> @test(<2 x i32> %a) vscale_range(2, 2){\n  %r = sext <2 x i32> %a to <2 x i64>\n  ret <2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <2 x i32> %a to <2 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <2 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<4 x i32>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 1,
  "extrasize": 0,
  "asm": "mov w8, v0.s[1]\nmov v1.16b, v0.16b\nmov w9, v0.s[2]\nmov v1.h[1], w8\nmov w8, v0.s[3]\nmov v1.h[2], w9\nmov v1.h[3], w8\nfmov d0, d1\nret",
  "giasm": "xtn v0.4h, v0.4s\nret",
  "ll": "define <4 x i16> @test(<4 x i32> %a) vscale_range(2, 2){\n  %r = trunc <4 x i32> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = trunc <4 x i32> %a to <4 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <4 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<4 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 2,
  "extrasize": 0,
  "asm": "uunpklo z0.d, z0.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "ushll v2.2d, v0.2s, #0\nushll2 v1.2d, v0.4s, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i32> %a) vscale_range(2, 2){\n  %r = zext <4 x i32> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <4 x i32> %a to <4 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <4 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<4 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": 2,
  "extrasize": 0,
  "asm": "sunpklo z0.d, z0.s\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "sshll v2.2d, v0.2s, #0\nsshll2 v1.2d, v0.4s, #0\nmov v0.16b, v2.16b\nret",
  "ll": "define <4 x i64> @test(<4 x i32> %a) vscale_range(2, 2){\n  %r = sext <4 x i32> %a to <4 x i64>\n  ret <4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <4 x i32> %a to <4 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <4 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i32>",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 3,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl4\nsplice z0.s, p0, { z0.s, z1.s }\nuzp1 z0.h, z0.h, z0.h\nuzp1 z0.b, z0.b, z0.b\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nxtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x i32> %a) vscale_range(2, 2){\n  %r = trunc <8 x i32> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <8 x i32> %a to <8 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i32>",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl4\nsplice z0.s, p0, { z0.s, z1.s }\nuzp1 z0.h, z0.h, z0.h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i32> %a) vscale_range(2, 2){\n  %r = trunc <8 x i32> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <8 x i32> %a to <8 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<8 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 4,
  "extrasize": 0,
  "asm": "uunpklo z2.d, z1.s\nuunpklo z0.d, z0.s\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "ushll v4.2d, v0.2s, #0\nushll2 v5.2d, v0.4s, #0\nushll v2.2d, v1.2s, #0\nushll2 v3.2d, v1.4s, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i32> %a) vscale_range(2, 2){\n  %r = zext <8 x i32> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <8 x i32> %a to <8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<8 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": 4,
  "extrasize": 0,
  "asm": "sunpklo z2.d, z1.s\nsunpklo z0.d, z0.s\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "sshll v4.2d, v0.2s, #0\nsshll2 v5.2d, v0.4s, #0\nsshll v2.2d, v1.2s, #0\nsshll2 v3.2d, v1.4s, #0\nmov v0.16b, v4.16b\nmov v1.16b, v5.16b\nret",
  "ll": "define <8 x i64> @test(<8 x i32> %a) vscale_range(2, 2){\n  %r = sext <8 x i32> %a to <8 x i64>\n  ret <8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <8 x i32> %a to <8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i32>",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 7,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl4\nsplice z0.s, p0, { z0.s, z1.s }\nsplice z1.s, p0, { z2.s, z3.s }\nuzp1 z1.h, z1.h, z1.h\nuzp1 z0.h, z0.h, z0.h\nuzp1 z1.b, z1.b, z1.b\nuzp1 z0.b, z0.b, z0.b\nmov v0.d[1], v1.d[0]\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i32> %a) vscale_range(2, 2){\n  %r = trunc <16 x i32> %a to <16 x i8>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <16 x i32> %a to <16 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i32>",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 4,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl4\nsplice z2.s, p0, { z2.s, z3.s }\nsplice z0.s, p0, { z0.s, z1.s }\nuzp1 z0.h, z0.h, z0.h\nuzp1 z1.h, z2.h, z2.h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<16 x i32> %a) vscale_range(2, 2){\n  %r = trunc <16 x i32> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <16 x i32> %a to <16 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<16 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": 8,
  "extrasize": 0,
  "asm": "uunpklo z16.d, z1.s\nuunpklo z6.d, z3.s\nuunpklo z4.d, z2.s\nuunpklo z0.d, z0.s\nmovprfx z3, z16\next z3.b, z3.b, z16.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmov v2.16b, v16.16b\nret",
  "giasm": "ushll v16.2d, v0.2s, #0\nushll2 v17.2d, v0.4s, #0\nushll v18.2d, v1.2s, #0\nushll2 v19.2d, v1.4s, #0\nushll v4.2d, v2.2s, #0\nushll2 v5.2d, v2.4s, #0\nushll v6.2d, v3.2s, #0\nushll2 v7.2d, v3.4s, #0\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <16 x i64> @test(<16 x i32> %a) vscale_range(2, 2){\n  %r = zext <16 x i32> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <16 x i32> %a to <16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<16 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": 8,
  "extrasize": 0,
  "asm": "sunpklo z16.d, z1.s\nsunpklo z6.d, z3.s\nsunpklo z4.d, z2.s\nsunpklo z0.d, z0.s\nmovprfx z3, z16\next z3.b, z3.b, z16.b, #16\nmovprfx z5, z4\next z5.b, z5.b, z4.b, #16\nmovprfx z7, z6\next z7.b, z7.b, z6.b, #16\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmov v2.16b, v16.16b\nret",
  "giasm": "sshll v16.2d, v0.2s, #0\nsshll2 v17.2d, v0.4s, #0\nsshll v18.2d, v1.2s, #0\nsshll2 v19.2d, v1.4s, #0\nsshll v4.2d, v2.2s, #0\nsshll2 v5.2d, v2.4s, #0\nsshll v6.2d, v3.2s, #0\nsshll2 v7.2d, v3.4s, #0\nmov v0.16b, v16.16b\nmov v1.16b, v17.16b\nmov v2.16b, v18.16b\nmov v3.16b, v19.16b\nret",
  "ll": "define <16 x i64> @test(<16 x i32> %a) vscale_range(2, 2){\n  %r = sext <16 x i32> %a to <16 x i64>\n  ret <16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <16 x i32> %a to <16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i32>",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 17,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl4\nsplice z4.s, p0, { z4.s, z5.s }\nsplice z5.s, p0, { z6.s, z7.s }\nsplice z0.s, p0, { z0.s, z1.s }\nsplice z1.s, p0, { z2.s, z3.s }\nptrue p0.b, vl16\nuzp1 z2.h, z5.h, z5.h\nuzp1 z3.h, z4.h, z4.h\nuzp1 z0.h, z0.h, z0.h\nuzp1 z1.h, z1.h, z1.h\nuzp1 z2.b, z2.b, z2.b\nuzp1 z4.b, z3.b, z3.b\nuzp1 z1.b, z1.b, z1.b\nmov v4.d[1], v2.d[0]\nuzp1 z3.b, z0.b, z0.b\nmov v3.d[1], v1.d[0]\nsplice z0.b, p0, { z3.b, z4.b }\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nuzp1 v0.16b, v0.16b, v1.16b\nuzp1 v1.16b, v2.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i32> %a) vscale_range(2, 2){\n  %r = trunc <32 x i32> %a to <32 x i8>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <32 x i32> %a to <32 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i32>",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 8,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ptrue p0.s, vl4\nsplice z0.s, p0, { z0.s, z1.s }\nsplice z6.s, p0, { z6.s, z7.s }\nsplice z4.s, p0, { z4.s, z5.s }\nsplice z1.s, p0, { z2.s, z3.s }\nuzp1 z0.h, z0.h, z0.h\nuzp1 z2.h, z4.h, z4.h\nuzp1 z3.h, z6.h, z6.h\nuzp1 z1.h, z1.h, z1.h\nret",
  "giasm": "uzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nret",
  "ll": "define <32 x i16> @test(<32 x i32> %a) vscale_range(2, 2){\n  %r = trunc <32 x i32> %a to <32 x i16>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <32 x i32> %a to <32 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<32 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 16,
  "gisize": 24,
  "extrasize": 0,
  "asm": "uunpklo z7.d, z7.s\nuunpklo z6.d, z6.s\nuunpklo z5.d, z5.s\nuunpklo z4.d, z4.s\nuunpklo z3.d, z3.s\nuunpklo z2.d, z2.s\nuunpklo z1.d, z1.s\nuunpklo z0.d, z0.s\nstr z7, [x8, #7, mul vl]\nstr z6, [x8, #6, mul vl]\nstr z5, [x8, #5, mul vl]\nstr z4, [x8, #4, mul vl]\nstr z3, [x8, #3, mul vl]\nstr z2, [x8, #2, mul vl]\nstr z1, [x8, #1, mul vl]\nstr z0, [x8]\nret",
  "giasm": "ushll v16.2d, v0.2s, #0\nushll2 v0.2d, v0.4s, #0\nushll v17.2d, v1.2s, #0\nushll2 v1.2d, v1.4s, #0\nstp q16, q0, [x8]\nushll v16.2d, v2.2s, #0\nushll2 v0.2d, v2.4s, #0\nstp q17, q1, [x8, #32]\nushll v2.2d, v3.2s, #0\nushll2 v1.2d, v3.4s, #0\nushll v3.2d, v4.2s, #0\nstp q16, q0, [x8, #64]\nushll2 v0.2d, v4.4s, #0\nstp q2, q1, [x8, #96]\nushll v2.2d, v5.2s, #0\nushll2 v1.2d, v5.4s, #0\nstp q3, q0, [x8, #128]\nushll v3.2d, v6.2s, #0\nushll2 v0.2d, v6.4s, #0\nstp q2, q1, [x8, #160]\nushll v2.2d, v7.2s, #0\nushll2 v1.2d, v7.4s, #0\nstp q3, q0, [x8, #192]\nstp q2, q1, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i32> %a) vscale_range(2, 2){\n  %r = zext <32 x i32> %a to <32 x i64>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <32 x i32> %a to <32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<32 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 16,
  "gisize": 24,
  "extrasize": 0,
  "asm": "sunpklo z7.d, z7.s\nsunpklo z6.d, z6.s\nsunpklo z5.d, z5.s\nsunpklo z4.d, z4.s\nsunpklo z3.d, z3.s\nsunpklo z2.d, z2.s\nsunpklo z1.d, z1.s\nsunpklo z0.d, z0.s\nstr z7, [x8, #7, mul vl]\nstr z6, [x8, #6, mul vl]\nstr z5, [x8, #5, mul vl]\nstr z4, [x8, #4, mul vl]\nstr z3, [x8, #3, mul vl]\nstr z2, [x8, #2, mul vl]\nstr z1, [x8, #1, mul vl]\nstr z0, [x8]\nret",
  "giasm": "sshll v16.2d, v0.2s, #0\nsshll2 v0.2d, v0.4s, #0\nsshll v17.2d, v1.2s, #0\nsshll2 v1.2d, v1.4s, #0\nstp q16, q0, [x8]\nsshll v16.2d, v2.2s, #0\nsshll2 v0.2d, v2.4s, #0\nstp q17, q1, [x8, #32]\nsshll v2.2d, v3.2s, #0\nsshll2 v1.2d, v3.4s, #0\nsshll v3.2d, v4.2s, #0\nstp q16, q0, [x8, #64]\nsshll2 v0.2d, v4.4s, #0\nstp q2, q1, [x8, #96]\nsshll v2.2d, v5.2s, #0\nsshll2 v1.2d, v5.4s, #0\nstp q3, q0, [x8, #128]\nsshll v3.2d, v6.2s, #0\nsshll2 v0.2d, v6.4s, #0\nstp q2, q1, [x8, #160]\nsshll v2.2d, v7.2s, #0\nsshll2 v1.2d, v7.4s, #0\nstp q3, q0, [x8, #192]\nstp q2, q1, [x8, #224]\nret",
  "ll": "define <32 x i64> @test(<32 x i32> %a) vscale_range(2, 2){\n  %r = sext <32 x i32> %a to <32 x i64>\n  ret <32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <32 x i32> %a to <32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<2 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": 1,
  "extrasize": 0,
  "asm": "xtn v0.2s, v0.2d\nret",
  "giasm": "xtn v0.2s, v0.2d\nret",
  "ll": "define <2 x i32> @test(<2 x i64> %a) vscale_range(2, 2){\n  %r = trunc <2 x i64> %a to <2 x i32>\n  ret <2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = trunc <2 x i64> %a to <2 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <2 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<4 x i64>",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 3,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl2\nsplice z0.d, p0, { z0.d, z1.d }\nuzp1 z0.s, z0.s, z0.s\nuzp1 z0.h, z0.h, z0.h\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nxtn v0.4h, v0.4s\nret",
  "ll": "define <4 x i16> @test(<4 x i64> %a) vscale_range(2, 2){\n  %r = trunc <4 x i64> %a to <4 x i16>\n  ret <4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <4 x i64> %a to <4 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <4 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<4 x i64>",
  "variant": "cast i32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 2,
  "gisize": 1,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl2\nsplice z0.d, p0, { z0.d, z1.d }\nuzp1 z0.s, z0.s, z0.s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nret",
  "ll": "define <4 x i32> @test(<4 x i64> %a) vscale_range(2, 2){\n  %r = trunc <4 x i64> %a to <4 x i32>\n  ret <4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <4 x i64> %a to <4 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <4 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i64>",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 7,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl2\nsplice z2.d, p0, { z2.d, z3.d }\nsplice z0.d, p0, { z0.d, z1.d }\nptrue p0.s, vl4\nuzp1 z2.s, z2.s, z2.s\nuzp1 z1.s, z0.s, z0.s\nsplice z0.s, p0, { z1.s, z2.s }\nuzp1 z0.h, z0.h, z0.h\nuzp1 z0.b, z0.b, z0.b\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v0.8h, v0.8h, v1.8h\nxtn v0.8b, v0.8h\nret",
  "ll": "define <8 x i8> @test(<8 x i64> %a) vscale_range(2, 2){\n  %r = trunc <8 x i64> %a to <8 x i8>\n  ret <8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <8 x i64> %a to <8 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i64>",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 7,
  "gisize": 3,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl2\nsplice z0.d, p0, { z0.d, z1.d }\nsplice z1.d, p0, { z2.d, z3.d }\nuzp1 z1.s, z1.s, z1.s\nuzp1 z0.s, z0.s, z0.s\nuzp1 z1.h, z1.h, z1.h\nuzp1 z0.h, z0.h, z0.h\nmov v0.d[1], v1.d[0]\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v0.8h, v0.8h, v1.8h\nret",
  "ll": "define <8 x i16> @test(<8 x i64> %a) vscale_range(2, 2){\n  %r = trunc <8 x i64> %a to <8 x i16>\n  ret <8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <8 x i64> %a to <8 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<8 x i64>",
  "variant": "cast i32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 4,
  "gisize": 2,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl2\nsplice z2.d, p0, { z2.d, z3.d }\nsplice z0.d, p0, { z0.d, z1.d }\nuzp1 z0.s, z0.s, z0.s\nuzp1 z1.s, z2.s, z2.s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nret",
  "ll": "define <8 x i32> @test(<8 x i64> %a) vscale_range(2, 2){\n  %r = trunc <8 x i64> %a to <8 x i32>\n  ret <8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <8 x i64> %a to <8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <8 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i64>",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 15,
  "gisize": 7,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl2\nsplice z2.d, p0, { z2.d, z3.d }\nsplice z3.d, p0, { z6.d, z7.d }\nsplice z0.d, p0, { z0.d, z1.d }\nsplice z1.d, p0, { z4.d, z5.d }\nptrue p0.s, vl4\nuzp1 z4.s, z3.s, z3.s\nuzp1 z6.s, z2.s, z2.s\nuzp1 z3.s, z1.s, z1.s\nuzp1 z5.s, z0.s, z0.s\nsplice z0.s, p0, { z3.s, z4.s }\nsplice z1.s, p0, { z5.s, z6.s }\nuzp1 z0.h, z0.h, z0.h\nuzp1 z1.h, z1.h, z1.h\nuzp1 z2.b, z0.b, z0.b\nuzp1 z0.b, z1.b, z1.b\nmov v0.d[1], v2.d[0]\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v0.16b, v0.16b, v1.16b\nret",
  "ll": "define <16 x i8> @test(<16 x i64> %a) vscale_range(2, 2){\n  %r = trunc <16 x i64> %a to <16 x i8>\n  ret <16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <16 x i64> %a to <16 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i64>",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 17,
  "gisize": 6,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl2\nsplice z4.d, p0, { z4.d, z5.d }\nsplice z5.d, p0, { z6.d, z7.d }\nsplice z0.d, p0, { z0.d, z1.d }\nsplice z1.d, p0, { z2.d, z3.d }\nptrue p0.h, vl8\nuzp1 z2.s, z5.s, z5.s\nuzp1 z3.s, z4.s, z4.s\nuzp1 z0.s, z0.s, z0.s\nuzp1 z1.s, z1.s, z1.s\nuzp1 z2.h, z2.h, z2.h\nuzp1 z4.h, z3.h, z3.h\nuzp1 z1.h, z1.h, z1.h\nmov v4.d[1], v2.d[0]\nuzp1 z3.h, z0.h, z0.h\nmov v3.d[1], v1.d[0]\nsplice z0.h, p0, { z3.h, z4.h }\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v1.8h, v2.8h, v3.8h\nret",
  "ll": "define <16 x i16> @test(<16 x i64> %a) vscale_range(2, 2){\n  %r = trunc <16 x i64> %a to <16 x i16>\n  ret <16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <16 x i64> %a to <16 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<16 x i64>",
  "variant": "cast i32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 8,
  "gisize": 4,
  "extrasize": 0,
  "asm": "ptrue p0.d, vl2\nsplice z0.d, p0, { z0.d, z1.d }\nsplice z6.d, p0, { z6.d, z7.d }\nsplice z4.d, p0, { z4.d, z5.d }\nsplice z1.d, p0, { z2.d, z3.d }\nuzp1 z0.s, z0.s, z0.s\nuzp1 z2.s, z4.s, z4.s\nuzp1 z3.s, z6.s, z6.s\nuzp1 z1.s, z1.s, z1.s\nret",
  "giasm": "uzp1 v0.4s, v0.4s, v1.4s\nuzp1 v1.4s, v2.4s, v3.4s\nuzp1 v2.4s, v4.4s, v5.4s\nuzp1 v3.4s, v6.4s, v7.4s\nret",
  "ll": "define <16 x i32> @test(<16 x i64> %a) vscale_range(2, 2){\n  %r = trunc <16 x i64> %a to <16 x i32>\n  ret <16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <16 x i64> %a to <16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <16 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i64>",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 37,
  "gisize": 18,
  "extrasize": 0,
  "asm": "ldp q16, q17, [sp, #96]\nptrue p0.d, vl2\nldp q20, q21, [sp, #32]\nldp q18, q19, [sp, #64]\nldp q22, q23, [sp]\nsplice z16.d, p0, { z16.d, z17.d }\nsplice z17.d, p0, { z20.d, z21.d }\nsplice z0.d, p0, { z0.d, z1.d }\nsplice z1.d, p0, { z2.d, z3.d }\nsplice z18.d, p0, { z18.d, z19.d }\nsplice z6.d, p0, { z6.d, z7.d }\nsplice z4.d, p0, { z4.d, z5.d }\nsplice z19.d, p0, { z22.d, z23.d }\nptrue p0.s, vl4\nuzp1 z3.s, z16.s, z16.s\nuzp1 z17.s, z17.s, z17.s\nuzp1 z2.s, z18.s, z18.s\nuzp1 z6.s, z6.s, z6.s\nuzp1 z16.s, z19.s, z19.s\nuzp1 z19.s, z1.s, z1.s\nuzp1 z5.s, z4.s, z4.s\nuzp1 z18.s, z0.s, z0.s\nsplice z2.s, p0, { z2.s, z3.s }\nsplice z1.s, p0, { z16.s, z17.s }\nsplice z3.s, p0, { z18.s, z19.s }\nuzp1 z0.h, z2.h, z2.h\nsplice z2.s, p0, { z5.s, z6.s }\nptrue p0.b, vl16\nuzp1 z1.h, z1.h, z1.h\nuzp1 z0.b, z0.b, z0.b\nuzp1 z5.b, z1.b, z1.b\nuzp1 z1.h, z2.h, z2.h\nuzp1 z2.h, z3.h, z3.h\nmov v5.d[1], v0.d[0]\nuzp1 z0.b, z1.b, z1.b\nuzp1 z4.b, z2.b, z2.b\nmov v4.d[1], v0.d[0]\nsplice z0.b, p0, { z4.b, z5.b }\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v4.4s, v16.4s, v17.4s\nuzp1 v5.4s, v18.4s, v19.4s\nuzp1 v6.4s, v20.4s, v21.4s\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v7.4s, v22.4s, v23.4s\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nuzp1 v0.16b, v0.16b, v1.16b\nuzp1 v1.16b, v2.16b, v3.16b\nret",
  "ll": "define <32 x i8> @test(<32 x i64> %a) vscale_range(2, 2){\n  %r = trunc <32 x i64> %a to <32 x i8>\n  ret <32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <32 x i64> %a to <32 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i64>",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 39,
  "gisize": 16,
  "extrasize": 0,
  "asm": "ldr q19, [sp, #112]\nptrue p0.d, vl2\nldp q17, q18, [sp, #80]\nldr q16, [sp, #64]\nsplice z4.d, p0, { z4.d, z5.d }\nsplice z5.d, p0, { z6.d, z7.d }\nldp q6, q7, [sp]\nsplice z0.d, p0, { z0.d, z1.d }\nsplice z16.d, p0, { z16.d, z17.d }\nsplice z17.d, p0, { z18.d, z19.d }\nsplice z1.d, p0, { z2.d, z3.d }\nldp q18, q19, [sp, #32]\nsplice z6.d, p0, { z6.d, z7.d }\nuzp1 z5.s, z5.s, z5.s\nuzp1 z4.s, z4.s, z4.s\nuzp1 z0.s, z0.s, z0.s\nsplice z2.d, p0, { z18.d, z19.d }\nuzp1 z3.s, z17.s, z17.s\nuzp1 z16.s, z16.s, z16.s\nuzp1 z5.h, z5.h, z5.h\nuzp1 z19.h, z4.h, z4.h\nuzp1 z1.s, z1.s, z1.s\nuzp1 z4.s, z6.s, z6.s\nptrue p0.h, vl8\nuzp1 z3.h, z3.h, z3.h\nuzp1 z17.h, z16.h, z16.h\nuzp1 z2.s, z2.s, z2.s\nmov v19.d[1], v5.d[0]\nuzp1 z1.h, z1.h, z1.h\nuzp1 z18.h, z0.h, z0.h\nmov v17.d[1], v3.d[0]\nuzp1 z2.h, z2.h, z2.h\nuzp1 z16.h, z4.h, z4.h\nmov v18.d[1], v1.d[0]\nmov v16.d[1], v2.d[0]\nsplice z0.h, p0, { z18.h, z19.h }\nsplice z2.h, p0, { z16.h, z17.h }\nmovprfx z1, z0\next z1.b, z1.b, z0.b, #16\nmovprfx z3, z2\next z3.b, z3.b, z2.b, #16\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v4.4s, v16.4s, v17.4s\nuzp1 v5.4s, v18.4s, v19.4s\nuzp1 v6.4s, v20.4s, v21.4s\nuzp1 v0.8h, v0.8h, v1.8h\nuzp1 v7.4s, v22.4s, v23.4s\nuzp1 v1.8h, v2.8h, v3.8h\nuzp1 v2.8h, v4.8h, v5.8h\nuzp1 v3.8h, v6.8h, v7.8h\nret",
  "ll": "define <32 x i16> @test(<32 x i64> %a) vscale_range(2, 2){\n  %r = trunc <32 x i64> %a to <32 x i16>\n  ret <32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <32 x i64> %a to <32 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<32 x i64>",
  "variant": "cast i32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 20,
  "gisize": 12,
  "extrasize": 0,
  "asm": "ldp q16, q17, [sp, #96]\nptrue p0.d, vl2\nldp q18, q19, [sp, #64]\nldp q20, q21, [sp]\nsplice z2.d, p0, { z2.d, z3.d }\nldp q22, q23, [sp, #32]\nsplice z0.d, p0, { z0.d, z1.d }\nsplice z3.d, p0, { z6.d, z7.d }\nsplice z4.d, p0, { z4.d, z5.d }\nsplice z5.d, p0, { z16.d, z17.d }\nsplice z6.d, p0, { z20.d, z21.d }\nsplice z16.d, p0, { z18.d, z19.d }\nsplice z17.d, p0, { z22.d, z23.d }\nuzp1 z1.s, z2.s, z2.s\nuzp1 z0.s, z0.s, z0.s\nuzp1 z2.s, z4.s, z4.s\nuzp1 z3.s, z3.s, z3.s\nuzp1 z7.s, z5.s, z5.s\nuzp1 z4.s, z6.s, z6.s\nuzp1 z6.s, z16.s, z16.s\nuzp1 z5.s, z17.s, z17.s\nret",
  "giasm": "ldp q16, q17, [sp]\nuzp1 v0.4s, v0.4s, v1.4s\nldp q18, q19, [sp, #32]\nuzp1 v1.4s, v2.4s, v3.4s\nldp q20, q21, [sp, #64]\nuzp1 v2.4s, v4.4s, v5.4s\nldp q22, q23, [sp, #96]\nuzp1 v3.4s, v6.4s, v7.4s\nuzp1 v4.4s, v16.4s, v17.4s\nuzp1 v5.4s, v18.4s, v19.4s\nuzp1 v6.4s, v20.4s, v21.4s\nuzp1 v7.4s, v22.4s, v23.4s\nret",
  "ll": "define <32 x i32> @test(<32 x i64> %a) vscale_range(2, 2){\n  %r = trunc <32 x i64> %a to <32 x i32>\n  ret <32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <32 x i64> %a to <32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <32 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 8 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "and z0.h, z0.h, #0xff\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i16> (<vscale x 8 x i8>) (in function: test)",
  "ll": "define <vscale x 8 x i16> @test(<vscale x 8 x i8> %a) vscale_range(2, 2){\n  %r = zext <vscale x 8 x i8> %a to <vscale x 8 x i16>\n  ret <vscale x 8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <vscale x 8 x i8> %a to <vscale x 8 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i16> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 8 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.h\nsxtb z0.h, p0/m, z0.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i16> (<vscale x 8 x i8>) (in function: test)",
  "ll": "define <vscale x 8 x i16> @test(<vscale x 8 x i8> %a) vscale_range(2, 2){\n  %r = sext <vscale x 8 x i8> %a to <vscale x 8 x i16>\n  ret <vscale x 8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <vscale x 8 x i8> %a to <vscale x 8 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 8 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": -1,
  "extrasize": 0,
  "asm": "and z0.h, z0.h, #0xff\nuunpklo z2.s, z0.h\nuunpkhi z1.s, z0.h\nmov z0.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i32> (<vscale x 8 x i8>) (in function: test)",
  "ll": "define <vscale x 8 x i32> @test(<vscale x 8 x i8> %a) vscale_range(2, 2){\n  %r = zext <vscale x 8 x i8> %a to <vscale x 8 x i32>\n  ret <vscale x 8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:3 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 8 x i8> %a to <vscale x 8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 8 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.h\nmovprfx z1, z0\nsxtb z1.h, p0/m, z0.h\nsunpklo z0.s, z1.h\nsunpkhi z1.s, z1.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i32> (<vscale x 8 x i8>) (in function: test)",
  "ll": "define <vscale x 8 x i32> @test(<vscale x 8 x i8> %a) vscale_range(2, 2){\n  %r = sext <vscale x 8 x i8> %a to <vscale x 8 x i32>\n  ret <vscale x 8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:3 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 8 x i8> %a to <vscale x 8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 8 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 7,
  "lat": 1,
  "sizelat": 1,
  "size": 7,
  "gisize": -1,
  "extrasize": 0,
  "asm": "and z0.h, z0.h, #0xff\nuunpklo z1.s, z0.h\nuunpkhi z3.s, z0.h\nuunpklo z0.d, z1.s\nuunpkhi z1.d, z1.s\nuunpklo z2.d, z3.s\nuunpkhi z3.d, z3.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i64> (<vscale x 8 x i8>) (in function: test)",
  "ll": "define <vscale x 8 x i64> @test(<vscale x 8 x i8> %a) vscale_range(2, 2){\n  %r = zext <vscale x 8 x i8> %a to <vscale x 8 x i64>\n  ret <vscale x 8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:7 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 8 x i8> %a to <vscale x 8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 8 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 7,
  "lat": 1,
  "sizelat": 1,
  "size": 7,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.h\nsxtb z0.h, p0/m, z0.h\nsunpklo z1.s, z0.h\nsunpkhi z3.s, z0.h\nsunpklo z0.d, z1.s\nsunpkhi z1.d, z1.s\nsunpklo z2.d, z3.s\nsunpkhi z3.d, z3.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i64> (<vscale x 8 x i8>) (in function: test)",
  "ll": "define <vscale x 8 x i64> @test(<vscale x 8 x i8> %a) vscale_range(2, 2){\n  %r = sext <vscale x 8 x i8> %a to <vscale x 8 x i64>\n  ret <vscale x 8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:7 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 8 x i8> %a to <vscale x 8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 16 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z2.h, z0.b\nuunpkhi z1.h, z0.b\nmov z0.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i16> (<vscale x 16 x i8>) (in function: test)",
  "ll": "define <vscale x 16 x i16> @test(<vscale x 16 x i8> %a) vscale_range(2, 2){\n  %r = zext <vscale x 16 x i8> %a to <vscale x 16 x i16>\n  ret <vscale x 16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 16 x i8> %a to <vscale x 16 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i16> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 16 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z2.h, z0.b\nsunpkhi z1.h, z0.b\nmov z0.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i16> (<vscale x 16 x i8>) (in function: test)",
  "ll": "define <vscale x 16 x i16> @test(<vscale x 16 x i8> %a) vscale_range(2, 2){\n  %r = sext <vscale x 16 x i8> %a to <vscale x 16 x i16>\n  ret <vscale x 16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 16 x i8> %a to <vscale x 16 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 16 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z1.h, z0.b\nuunpkhi z3.h, z0.b\nuunpklo z0.s, z1.h\nuunpkhi z1.s, z1.h\nuunpklo z2.s, z3.h\nuunpkhi z3.s, z3.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i32> (<vscale x 16 x i8>) (in function: test)",
  "ll": "define <vscale x 16 x i32> @test(<vscale x 16 x i8> %a) vscale_range(2, 2){\n  %r = zext <vscale x 16 x i8> %a to <vscale x 16 x i32>\n  ret <vscale x 16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:6 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 16 x i8> %a to <vscale x 16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 16 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z1.h, z0.b\nsunpkhi z3.h, z0.b\nsunpklo z0.s, z1.h\nsunpkhi z1.s, z1.h\nsunpklo z2.s, z3.h\nsunpkhi z3.s, z3.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i32> (<vscale x 16 x i8>) (in function: test)",
  "ll": "define <vscale x 16 x i32> @test(<vscale x 16 x i8> %a) vscale_range(2, 2){\n  %r = sext <vscale x 16 x i8> %a to <vscale x 16 x i32>\n  ret <vscale x 16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:6 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 16 x i8> %a to <vscale x 16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 16 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 14,
  "lat": 1,
  "sizelat": 1,
  "size": 14,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z1.h, z0.b\nuunpkhi z0.h, z0.b\nuunpklo z2.s, z1.h\nuunpkhi z3.s, z1.h\nuunpklo z5.s, z0.h\nuunpkhi z7.s, z0.h\nuunpklo z0.d, z2.s\nuunpkhi z1.d, z2.s\nuunpklo z2.d, z3.s\nuunpkhi z3.d, z3.s\nuunpklo z4.d, z5.s\nuunpkhi z5.d, z5.s\nuunpklo z6.d, z7.s\nuunpkhi z7.d, z7.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i64> (<vscale x 16 x i8>) (in function: test)",
  "ll": "define <vscale x 16 x i64> @test(<vscale x 16 x i8> %a) vscale_range(2, 2){\n  %r = zext <vscale x 16 x i8> %a to <vscale x 16 x i64>\n  ret <vscale x 16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:14 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 16 x i8> %a to <vscale x 16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 16 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 14,
  "lat": 1,
  "sizelat": 1,
  "size": 14,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z1.h, z0.b\nsunpkhi z0.h, z0.b\nsunpklo z2.s, z1.h\nsunpkhi z3.s, z1.h\nsunpklo z5.s, z0.h\nsunpkhi z7.s, z0.h\nsunpklo z0.d, z2.s\nsunpkhi z1.d, z2.s\nsunpklo z2.d, z3.s\nsunpkhi z3.d, z3.s\nsunpklo z4.d, z5.s\nsunpkhi z5.d, z5.s\nsunpklo z6.d, z7.s\nsunpkhi z7.d, z7.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i64> (<vscale x 16 x i8>) (in function: test)",
  "ll": "define <vscale x 16 x i64> @test(<vscale x 16 x i8> %a) vscale_range(2, 2){\n  %r = sext <vscale x 16 x i8> %a to <vscale x 16 x i64>\n  ret <vscale x 16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:14 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 16 x i8> %a to <vscale x 16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 32 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z4.h, z0.b\nuunpkhi z5.h, z0.b\nuunpklo z2.h, z1.b\nuunpkhi z3.h, z1.b\nmov z0.d, z4.d\nmov z1.d, z5.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i16> (<vscale x 32 x i8>) (in function: test)",
  "ll": "define <vscale x 32 x i16> @test(<vscale x 32 x i8> %a) vscale_range(2, 2){\n  %r = zext <vscale x 32 x i8> %a to <vscale x 32 x i16>\n  ret <vscale x 32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 32 x i8> %a to <vscale x 32 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i16> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 32 x i8>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z4.h, z0.b\nsunpkhi z5.h, z0.b\nsunpklo z2.h, z1.b\nsunpkhi z3.h, z1.b\nmov z0.d, z4.d\nmov z1.d, z5.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i16> (<vscale x 32 x i8>) (in function: test)",
  "ll": "define <vscale x 32 x i16> @test(<vscale x 32 x i8> %a) vscale_range(2, 2){\n  %r = sext <vscale x 32 x i8> %a to <vscale x 32 x i16>\n  ret <vscale x 32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 32 x i8> %a to <vscale x 32 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 32 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z2.h, z0.b\nuunpkhi z3.h, z0.b\nuunpklo z5.h, z1.b\nuunpkhi z7.h, z1.b\nuunpklo z0.s, z2.h\nuunpkhi z1.s, z2.h\nuunpklo z2.s, z3.h\nuunpkhi z3.s, z3.h\nuunpklo z4.s, z5.h\nuunpkhi z5.s, z5.h\nuunpklo z6.s, z7.h\nuunpkhi z7.s, z7.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i32> (<vscale x 32 x i8>) (in function: test)",
  "ll": "define <vscale x 32 x i32> @test(<vscale x 32 x i8> %a) vscale_range(2, 2){\n  %r = zext <vscale x 32 x i8> %a to <vscale x 32 x i32>\n  ret <vscale x 32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:12 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 32 x i8> %a to <vscale x 32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 32 x i8>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z2.h, z0.b\nsunpkhi z3.h, z0.b\nsunpklo z5.h, z1.b\nsunpkhi z7.h, z1.b\nsunpklo z0.s, z2.h\nsunpkhi z1.s, z2.h\nsunpklo z2.s, z3.h\nsunpkhi z3.s, z3.h\nsunpklo z4.s, z5.h\nsunpkhi z5.s, z5.h\nsunpklo z6.s, z7.h\nsunpkhi z7.s, z7.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i32> (<vscale x 32 x i8>) (in function: test)",
  "ll": "define <vscale x 32 x i32> @test(<vscale x 32 x i8> %a) vscale_range(2, 2){\n  %r = sext <vscale x 32 x i8> %a to <vscale x 32 x i32>\n  ret <vscale x 32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:12 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 32 x i8> %a to <vscale x 32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 32 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 28,
  "lat": 1,
  "sizelat": 1,
  "size": 44,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpkhi z2.h, z1.b\nuunpklo z1.h, z1.b\nuunpkhi z4.h, z0.b\nuunpklo z0.h, z0.b\nuunpkhi z3.s, z2.h\nuunpklo z2.s, z2.h\nuunpkhi z5.s, z1.h\nuunpklo z1.s, z1.h\nuunpkhi z24.s, z4.h\nuunpkhi z6.d, z3.s\nuunpklo z3.d, z3.s\nuunpkhi z7.d, z2.s\nuunpklo z2.d, z2.s\nuunpkhi z25.d, z5.s\nuunpklo z5.d, z5.s\nstr z3, [x8, #14, mul vl]\nuunpklo z3.s, z4.h\nuunpkhi z4.d, z1.s\nuunpklo z1.d, z1.s\nstr z2, [x8, #12, mul vl]\nuunpkhi z2.s, z0.h\nuunpklo z0.s, z0.h\nstr z6, [x8, #15, mul vl]\nuunpkhi z6.d, z24.s\nstr z7, [x8, #13, mul vl]\nuunpklo z7.d, z24.s\nstr z5, [x8, #10, mul vl]\nuunpkhi z5.d, z3.s\nuunpklo z3.d, z3.s\nstr z4, [x8, #9, mul vl]\nstr z1, [x8, #8, mul vl]\nuunpkhi z1.d, z2.s\nuunpklo z2.d, z2.s\nuunpkhi z4.d, z0.s\nuunpklo z0.d, z0.s\nstr z25, [x8, #11, mul vl]\nstr z6, [x8, #7, mul vl]\nstr z7, [x8, #6, mul vl]\nstr z5, [x8, #5, mul vl]\nstr z3, [x8, #4, mul vl]\nstr z1, [x8, #3, mul vl]\nstr z2, [x8, #2, mul vl]\nstr z4, [x8, #1, mul vl]\nstr z0, [x8]\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i64> (<vscale x 32 x i8>) (in function: test)",
  "ll": "define <vscale x 32 x i64> @test(<vscale x 32 x i8> %a) vscale_range(2, 2){\n  %r = zext <vscale x 32 x i8> %a to <vscale x 32 x i64>\n  ret <vscale x 32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:28 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 32 x i8> %a to <vscale x 32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 32 x i8>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 28,
  "lat": 1,
  "sizelat": 1,
  "size": 44,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpkhi z2.h, z1.b\nsunpklo z1.h, z1.b\nsunpkhi z4.h, z0.b\nsunpklo z0.h, z0.b\nsunpkhi z3.s, z2.h\nsunpklo z2.s, z2.h\nsunpkhi z5.s, z1.h\nsunpklo z1.s, z1.h\nsunpkhi z24.s, z4.h\nsunpkhi z6.d, z3.s\nsunpklo z3.d, z3.s\nsunpkhi z7.d, z2.s\nsunpklo z2.d, z2.s\nsunpkhi z25.d, z5.s\nsunpklo z5.d, z5.s\nstr z3, [x8, #14, mul vl]\nsunpklo z3.s, z4.h\nsunpkhi z4.d, z1.s\nsunpklo z1.d, z1.s\nstr z2, [x8, #12, mul vl]\nsunpkhi z2.s, z0.h\nsunpklo z0.s, z0.h\nstr z6, [x8, #15, mul vl]\nsunpkhi z6.d, z24.s\nstr z7, [x8, #13, mul vl]\nsunpklo z7.d, z24.s\nstr z5, [x8, #10, mul vl]\nsunpkhi z5.d, z3.s\nsunpklo z3.d, z3.s\nstr z4, [x8, #9, mul vl]\nstr z1, [x8, #8, mul vl]\nsunpkhi z1.d, z2.s\nsunpklo z2.d, z2.s\nsunpkhi z4.d, z0.s\nsunpklo z0.d, z0.s\nstr z25, [x8, #11, mul vl]\nstr z6, [x8, #7, mul vl]\nstr z7, [x8, #6, mul vl]\nstr z5, [x8, #5, mul vl]\nstr z3, [x8, #4, mul vl]\nstr z1, [x8, #3, mul vl]\nstr z2, [x8, #2, mul vl]\nstr z4, [x8, #1, mul vl]\nstr z0, [x8]\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i64> (<vscale x 32 x i8>) (in function: test)",
  "ll": "define <vscale x 32 x i64> @test(<vscale x 32 x i8> %a) vscale_range(2, 2){\n  %r = sext <vscale x 32 x i8> %a to <vscale x 32 x i64>\n  ret <vscale x 32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:28 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 32 x i8> %a to <vscale x 32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 4 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "and z0.s, z0.s, #0xffff\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i32> (<vscale x 4 x i16>) (in function: test)",
  "ll": "define <vscale x 4 x i32> @test(<vscale x 4 x i16> %a) vscale_range(2, 2){\n  %r = zext <vscale x 4 x i16> %a to <vscale x 4 x i32>\n  ret <vscale x 4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <vscale x 4 x i16> %a to <vscale x 4 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 4 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 4 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.s\nsxth z0.s, p0/m, z0.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i32> (<vscale x 4 x i16>) (in function: test)",
  "ll": "define <vscale x 4 x i32> @test(<vscale x 4 x i16> %a) vscale_range(2, 2){\n  %r = sext <vscale x 4 x i16> %a to <vscale x 4 x i32>\n  ret <vscale x 4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <vscale x 4 x i16> %a to <vscale x 4 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 4 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 4 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": -1,
  "extrasize": 0,
  "asm": "and z0.s, z0.s, #0xffff\nuunpklo z2.d, z0.s\nuunpkhi z1.d, z0.s\nmov z0.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i64> (<vscale x 4 x i16>) (in function: test)",
  "ll": "define <vscale x 4 x i64> @test(<vscale x 4 x i16> %a) vscale_range(2, 2){\n  %r = zext <vscale x 4 x i16> %a to <vscale x 4 x i64>\n  ret <vscale x 4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:3 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 4 x i16> %a to <vscale x 4 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 4 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 4 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.s\nmovprfx z1, z0\nsxth z1.s, p0/m, z0.s\nsunpklo z0.d, z1.s\nsunpkhi z1.d, z1.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i64> (<vscale x 4 x i16>) (in function: test)",
  "ll": "define <vscale x 4 x i64> @test(<vscale x 4 x i16> %a) vscale_range(2, 2){\n  %r = sext <vscale x 4 x i16> %a to <vscale x 4 x i64>\n  ret <vscale x 4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:3 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 4 x i16> %a to <vscale x 4 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 4 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 8 x i16>",
  "variant": "cast i8",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i8> (<vscale x 8 x i16>) (in function: test)",
  "ll": "define <vscale x 8 x i8> @test(<vscale x 8 x i16> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 8 x i16> %a to <vscale x 8 x i8>\n  ret <vscale x 8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <vscale x 8 x i16> %a to <vscale x 8 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i8> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 8 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z2.s, z0.h\nuunpkhi z1.s, z0.h\nmov z0.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i32> (<vscale x 8 x i16>) (in function: test)",
  "ll": "define <vscale x 8 x i32> @test(<vscale x 8 x i16> %a) vscale_range(2, 2){\n  %r = zext <vscale x 8 x i16> %a to <vscale x 8 x i32>\n  ret <vscale x 8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 8 x i16> %a to <vscale x 8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 8 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z2.s, z0.h\nsunpkhi z1.s, z0.h\nmov z0.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i32> (<vscale x 8 x i16>) (in function: test)",
  "ll": "define <vscale x 8 x i32> @test(<vscale x 8 x i16> %a) vscale_range(2, 2){\n  %r = sext <vscale x 8 x i16> %a to <vscale x 8 x i32>\n  ret <vscale x 8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 8 x i16> %a to <vscale x 8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 8 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z1.s, z0.h\nuunpkhi z3.s, z0.h\nuunpklo z0.d, z1.s\nuunpkhi z1.d, z1.s\nuunpklo z2.d, z3.s\nuunpkhi z3.d, z3.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i64> (<vscale x 8 x i16>) (in function: test)",
  "ll": "define <vscale x 8 x i64> @test(<vscale x 8 x i16> %a) vscale_range(2, 2){\n  %r = zext <vscale x 8 x i16> %a to <vscale x 8 x i64>\n  ret <vscale x 8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:6 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 8 x i16> %a to <vscale x 8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 8 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z1.s, z0.h\nsunpkhi z3.s, z0.h\nsunpklo z0.d, z1.s\nsunpkhi z1.d, z1.s\nsunpklo z2.d, z3.s\nsunpkhi z3.d, z3.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i64> (<vscale x 8 x i16>) (in function: test)",
  "ll": "define <vscale x 8 x i64> @test(<vscale x 8 x i16> %a) vscale_range(2, 2){\n  %r = sext <vscale x 8 x i16> %a to <vscale x 8 x i64>\n  ret <vscale x 8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:6 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 8 x i16> %a to <vscale x 8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 16 x i16>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z0.b, z0.b, z1.b\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i8> (<vscale x 16 x i16>) (in function: test)",
  "ll": "define <vscale x 16 x i8> @test(<vscale x 16 x i16> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 16 x i16> %a to <vscale x 16 x i8>\n  ret <vscale x 16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = trunc <vscale x 16 x i16> %a to <vscale x 16 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i8> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 16 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z4.s, z0.h\nuunpkhi z5.s, z0.h\nuunpklo z2.s, z1.h\nuunpkhi z3.s, z1.h\nmov z0.d, z4.d\nmov z1.d, z5.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i32> (<vscale x 16 x i16>) (in function: test)",
  "ll": "define <vscale x 16 x i32> @test(<vscale x 16 x i16> %a) vscale_range(2, 2){\n  %r = zext <vscale x 16 x i16> %a to <vscale x 16 x i32>\n  ret <vscale x 16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 16 x i16> %a to <vscale x 16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 16 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z4.s, z0.h\nsunpkhi z5.s, z0.h\nsunpklo z2.s, z1.h\nsunpkhi z3.s, z1.h\nmov z0.d, z4.d\nmov z1.d, z5.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i32> (<vscale x 16 x i16>) (in function: test)",
  "ll": "define <vscale x 16 x i32> @test(<vscale x 16 x i16> %a) vscale_range(2, 2){\n  %r = sext <vscale x 16 x i16> %a to <vscale x 16 x i32>\n  ret <vscale x 16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 16 x i16> %a to <vscale x 16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 16 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z2.s, z0.h\nuunpkhi z3.s, z0.h\nuunpklo z5.s, z1.h\nuunpkhi z7.s, z1.h\nuunpklo z0.d, z2.s\nuunpkhi z1.d, z2.s\nuunpklo z2.d, z3.s\nuunpkhi z3.d, z3.s\nuunpklo z4.d, z5.s\nuunpkhi z5.d, z5.s\nuunpklo z6.d, z7.s\nuunpkhi z7.d, z7.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i64> (<vscale x 16 x i16>) (in function: test)",
  "ll": "define <vscale x 16 x i64> @test(<vscale x 16 x i16> %a) vscale_range(2, 2){\n  %r = zext <vscale x 16 x i16> %a to <vscale x 16 x i64>\n  ret <vscale x 16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:12 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 16 x i16> %a to <vscale x 16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 16 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z2.s, z0.h\nsunpkhi z3.s, z0.h\nsunpklo z5.s, z1.h\nsunpkhi z7.s, z1.h\nsunpklo z0.d, z2.s\nsunpkhi z1.d, z2.s\nsunpklo z2.d, z3.s\nsunpkhi z3.d, z3.s\nsunpklo z4.d, z5.s\nsunpkhi z5.d, z5.s\nsunpklo z6.d, z7.s\nsunpkhi z7.d, z7.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i64> (<vscale x 16 x i16>) (in function: test)",
  "ll": "define <vscale x 16 x i64> @test(<vscale x 16 x i16> %a) vscale_range(2, 2){\n  %r = sext <vscale x 16 x i16> %a to <vscale x 16 x i64>\n  ret <vscale x 16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:12 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 16 x i16> %a to <vscale x 16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 32 x i16>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z2.b, z2.b, z3.b\nuzp1 z0.b, z0.b, z1.b\nmov z1.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i8> (<vscale x 32 x i16>) (in function: test)",
  "ll": "define <vscale x 32 x i8> @test(<vscale x 32 x i16> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 32 x i16> %a to <vscale x 32 x i8>\n  ret <vscale x 32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 32 x i16> %a to <vscale x 32 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i8> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 32 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z24.s, z0.h\nuunpkhi z25.s, z0.h\nuunpklo z26.s, z1.h\nuunpkhi z27.s, z1.h\nuunpklo z4.s, z2.h\nuunpkhi z5.s, z2.h\nuunpklo z6.s, z3.h\nuunpkhi z7.s, z3.h\nmov z0.d, z24.d\nmov z1.d, z25.d\nmov z2.d, z26.d\nmov z3.d, z27.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i32> (<vscale x 32 x i16>) (in function: test)",
  "ll": "define <vscale x 32 x i32> @test(<vscale x 32 x i16> %a) vscale_range(2, 2){\n  %r = zext <vscale x 32 x i16> %a to <vscale x 32 x i32>\n  ret <vscale x 32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 32 x i16> %a to <vscale x 32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i32> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 32 x i16>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z24.s, z0.h\nsunpkhi z25.s, z0.h\nsunpklo z26.s, z1.h\nsunpkhi z27.s, z1.h\nsunpklo z4.s, z2.h\nsunpkhi z5.s, z2.h\nsunpklo z6.s, z3.h\nsunpkhi z7.s, z3.h\nmov z0.d, z24.d\nmov z1.d, z25.d\nmov z2.d, z26.d\nmov z3.d, z27.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i32> (<vscale x 32 x i16>) (in function: test)",
  "ll": "define <vscale x 32 x i32> @test(<vscale x 32 x i16> %a) vscale_range(2, 2){\n  %r = sext <vscale x 32 x i16> %a to <vscale x 32 x i32>\n  ret <vscale x 32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 32 x i16> %a to <vscale x 32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i32> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 32 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 24,
  "lat": 1,
  "sizelat": 1,
  "size": 40,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpkhi z4.s, z3.h\nuunpklo z3.s, z3.h\nuunpkhi z5.s, z2.h\nuunpklo z2.s, z2.h\nuunpkhi z24.s, z1.h\nuunpklo z1.s, z1.h\nuunpkhi z6.d, z4.s\nuunpklo z4.d, z4.s\nuunpkhi z7.d, z3.s\nuunpklo z3.d, z3.s\nuunpkhi z25.d, z5.s\nuunpklo z5.d, z5.s\nstr z4, [x8, #14, mul vl]\nuunpkhi z4.d, z2.s\nuunpklo z2.d, z2.s\nstr z3, [x8, #12, mul vl]\nuunpkhi z3.s, z0.h\nuunpklo z0.s, z0.h\nstr z6, [x8, #15, mul vl]\nuunpkhi z6.d, z24.s\nstr z7, [x8, #13, mul vl]\nuunpklo z7.d, z24.s\nstr z5, [x8, #10, mul vl]\nuunpkhi z5.d, z1.s\nuunpklo z1.d, z1.s\nstr z4, [x8, #9, mul vl]\nuunpkhi z4.d, z0.s\nuunpklo z0.d, z0.s\nstr z2, [x8, #8, mul vl]\nuunpkhi z2.d, z3.s\nuunpklo z3.d, z3.s\nstr z25, [x8, #11, mul vl]\nstr z6, [x8, #7, mul vl]\nstr z7, [x8, #6, mul vl]\nstr z5, [x8, #5, mul vl]\nstr z1, [x8, #4, mul vl]\nstr z2, [x8, #3, mul vl]\nstr z3, [x8, #2, mul vl]\nstr z4, [x8, #1, mul vl]\nstr z0, [x8]\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i64> (<vscale x 32 x i16>) (in function: test)",
  "ll": "define <vscale x 32 x i64> @test(<vscale x 32 x i16> %a) vscale_range(2, 2){\n  %r = zext <vscale x 32 x i16> %a to <vscale x 32 x i64>\n  ret <vscale x 32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:24 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 32 x i16> %a to <vscale x 32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 32 x i16>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 24,
  "lat": 1,
  "sizelat": 1,
  "size": 40,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpkhi z4.s, z3.h\nsunpklo z3.s, z3.h\nsunpkhi z5.s, z2.h\nsunpklo z2.s, z2.h\nsunpkhi z24.s, z1.h\nsunpklo z1.s, z1.h\nsunpkhi z6.d, z4.s\nsunpklo z4.d, z4.s\nsunpkhi z7.d, z3.s\nsunpklo z3.d, z3.s\nsunpkhi z25.d, z5.s\nsunpklo z5.d, z5.s\nstr z4, [x8, #14, mul vl]\nsunpkhi z4.d, z2.s\nsunpklo z2.d, z2.s\nstr z3, [x8, #12, mul vl]\nsunpkhi z3.s, z0.h\nsunpklo z0.s, z0.h\nstr z6, [x8, #15, mul vl]\nsunpkhi z6.d, z24.s\nstr z7, [x8, #13, mul vl]\nsunpklo z7.d, z24.s\nstr z5, [x8, #10, mul vl]\nsunpkhi z5.d, z1.s\nsunpklo z1.d, z1.s\nstr z4, [x8, #9, mul vl]\nsunpkhi z4.d, z0.s\nsunpklo z0.d, z0.s\nstr z2, [x8, #8, mul vl]\nsunpkhi z2.d, z3.s\nsunpklo z3.d, z3.s\nstr z25, [x8, #11, mul vl]\nstr z6, [x8, #7, mul vl]\nstr z7, [x8, #6, mul vl]\nstr z5, [x8, #5, mul vl]\nstr z1, [x8, #4, mul vl]\nstr z2, [x8, #3, mul vl]\nstr z3, [x8, #2, mul vl]\nstr z4, [x8, #1, mul vl]\nstr z0, [x8]\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i64> (<vscale x 32 x i16>) (in function: test)",
  "ll": "define <vscale x 32 x i64> @test(<vscale x 32 x i16> %a) vscale_range(2, 2){\n  %r = sext <vscale x 32 x i16> %a to <vscale x 32 x i64>\n  ret <vscale x 32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:24 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 32 x i16> %a to <vscale x 32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i64> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 2 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "and z0.d, z0.d, #0xffffffff\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x i64> (<vscale x 2 x i32>) (in function: test)",
  "ll": "define <vscale x 2 x i64> @test(<vscale x 2 x i32> %a) vscale_range(2, 2){\n  %r = zext <vscale x 2 x i32> %a to <vscale x 2 x i64>\n  ret <vscale x 2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = zext <vscale x 2 x i32> %a to <vscale x 2 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 2 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 2 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ptrue p0.d\nsxtw z0.d, p0/m, z0.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x i64> (<vscale x 2 x i32>) (in function: test)",
  "ll": "define <vscale x 2 x i64> @test(<vscale x 2 x i32> %a) vscale_range(2, 2){\n  %r = sext <vscale x 2 x i32> %a to <vscale x 2 x i64>\n  ret <vscale x 2 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = sext <vscale x 2 x i32> %a to <vscale x 2 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 2 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 4 x i32>",
  "variant": "cast i16",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i16> (<vscale x 4 x i32>) (in function: test)",
  "ll": "define <vscale x 4 x i16> @test(<vscale x 4 x i32> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 4 x i32> %a to <vscale x 4 x i16>\n  ret <vscale x 4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <vscale x 4 x i32> %a to <vscale x 4 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 4 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 4 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z2.d, z0.s\nuunpkhi z1.d, z0.s\nmov z0.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i64> (<vscale x 4 x i32>) (in function: test)",
  "ll": "define <vscale x 4 x i64> @test(<vscale x 4 x i32> %a) vscale_range(2, 2){\n  %r = zext <vscale x 4 x i32> %a to <vscale x 4 x i64>\n  ret <vscale x 4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 4 x i32> %a to <vscale x 4 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 4 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 4 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z2.d, z0.s\nsunpkhi z1.d, z0.s\nmov z0.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i64> (<vscale x 4 x i32>) (in function: test)",
  "ll": "define <vscale x 4 x i64> @test(<vscale x 4 x i32> %a) vscale_range(2, 2){\n  %r = sext <vscale x 4 x i32> %a to <vscale x 4 x i64>\n  ret <vscale x 4 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 4 x i32> %a to <vscale x 4 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 4 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 8 x i32>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z0.h, z0.h, z1.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i8> (<vscale x 8 x i32>) (in function: test)",
  "ll": "define <vscale x 8 x i8> @test(<vscale x 8 x i32> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 8 x i32> %a to <vscale x 8 x i8>\n  ret <vscale x 8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = trunc <vscale x 8 x i32> %a to <vscale x 8 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 8 x i32>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z0.h, z0.h, z1.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i16> (<vscale x 8 x i32>) (in function: test)",
  "ll": "define <vscale x 8 x i16> @test(<vscale x 8 x i32> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 8 x i32> %a to <vscale x 8 x i16>\n  ret <vscale x 8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = trunc <vscale x 8 x i32> %a to <vscale x 8 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 8 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z4.d, z0.s\nuunpkhi z5.d, z0.s\nuunpklo z2.d, z1.s\nuunpkhi z3.d, z1.s\nmov z0.d, z4.d\nmov z1.d, z5.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i64> (<vscale x 8 x i32>) (in function: test)",
  "ll": "define <vscale x 8 x i64> @test(<vscale x 8 x i32> %a) vscale_range(2, 2){\n  %r = zext <vscale x 8 x i32> %a to <vscale x 8 x i64>\n  ret <vscale x 8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 8 x i32> %a to <vscale x 8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 8 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z4.d, z0.s\nsunpkhi z5.d, z0.s\nsunpklo z2.d, z1.s\nsunpkhi z3.d, z1.s\nmov z0.d, z4.d\nmov z1.d, z5.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i64> (<vscale x 8 x i32>) (in function: test)",
  "ll": "define <vscale x 8 x i64> @test(<vscale x 8 x i32> %a) vscale_range(2, 2){\n  %r = sext <vscale x 8 x i32> %a to <vscale x 8 x i64>\n  ret <vscale x 8 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 8 x i32> %a to <vscale x 8 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 16 x i32>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z2.h, z2.h, z3.h\nuzp1 z0.h, z0.h, z1.h\nuzp1 z0.b, z0.b, z2.b\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i8> (<vscale x 16 x i32>) (in function: test)",
  "ll": "define <vscale x 16 x i8> @test(<vscale x 16 x i32> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 16 x i32> %a to <vscale x 16 x i8>\n  ret <vscale x 16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:3 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 16 x i32> %a to <vscale x 16 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 16 x i32>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z2.h, z2.h, z3.h\nuzp1 z0.h, z0.h, z1.h\nmov z1.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i16> (<vscale x 16 x i32>) (in function: test)",
  "ll": "define <vscale x 16 x i16> @test(<vscale x 16 x i32> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 16 x i32> %a to <vscale x 16 x i16>\n  ret <vscale x 16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 16 x i32> %a to <vscale x 16 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 16 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpklo z24.d, z0.s\nuunpkhi z25.d, z0.s\nuunpklo z26.d, z1.s\nuunpkhi z27.d, z1.s\nuunpklo z4.d, z2.s\nuunpkhi z5.d, z2.s\nuunpklo z6.d, z3.s\nuunpkhi z7.d, z3.s\nmov z0.d, z24.d\nmov z1.d, z25.d\nmov z2.d, z26.d\nmov z3.d, z27.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i64> (<vscale x 16 x i32>) (in function: test)",
  "ll": "define <vscale x 16 x i64> @test(<vscale x 16 x i32> %a) vscale_range(2, 2){\n  %r = zext <vscale x 16 x i32> %a to <vscale x 16 x i64>\n  ret <vscale x 16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 16 x i32> %a to <vscale x 16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 16 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 12,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpklo z24.d, z0.s\nsunpkhi z25.d, z0.s\nsunpklo z26.d, z1.s\nsunpkhi z27.d, z1.s\nsunpklo z4.d, z2.s\nsunpkhi z5.d, z2.s\nsunpklo z6.d, z3.s\nsunpkhi z7.d, z3.s\nmov z0.d, z24.d\nmov z1.d, z25.d\nmov z2.d, z26.d\nmov z3.d, z27.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i64> (<vscale x 16 x i32>) (in function: test)",
  "ll": "define <vscale x 16 x i64> @test(<vscale x 16 x i32> %a) vscale_range(2, 2){\n  %r = sext <vscale x 16 x i32> %a to <vscale x 16 x i64>\n  ret <vscale x 16 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 16 x i32> %a to <vscale x 16 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 32 x i32>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z2.h, z2.h, z3.h\nuzp1 z0.h, z0.h, z1.h\nuzp1 z1.h, z6.h, z7.h\nuzp1 z3.h, z4.h, z5.h\nuzp1 z0.b, z0.b, z2.b\nuzp1 z1.b, z3.b, z1.b\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i8> (<vscale x 32 x i32>) (in function: test)",
  "ll": "define <vscale x 32 x i8> @test(<vscale x 32 x i32> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 32 x i32> %a to <vscale x 32 x i8>\n  ret <vscale x 32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:6 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 32 x i32> %a to <vscale x 32 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 32 x i32>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z0.h, z0.h, z1.h\nuzp1 z1.h, z2.h, z3.h\nuzp1 z2.h, z4.h, z5.h\nuzp1 z3.h, z6.h, z7.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i16> (<vscale x 32 x i32>) (in function: test)",
  "ll": "define <vscale x 32 x i16> @test(<vscale x 32 x i32> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 32 x i32> %a to <vscale x 32 x i16>\n  ret <vscale x 32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 32 x i32> %a to <vscale x 32 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i16> %r"
 },
 {
  "instr": "zext",
  "ty": "<vscale x 32 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 16,
  "lat": 1,
  "sizelat": 1,
  "size": 32,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uunpkhi z24.d, z7.s\nuunpklo z7.d, z7.s\nuunpkhi z25.d, z6.s\nuunpklo z6.d, z6.s\nuunpkhi z26.d, z5.s\nuunpklo z5.d, z5.s\nstr z7, [x8, #14, mul vl]\nuunpkhi z7.d, z4.s\nuunpklo z4.d, z4.s\nstr z6, [x8, #12, mul vl]\nuunpkhi z6.d, z3.s\nuunpklo z3.d, z3.s\nstr z5, [x8, #10, mul vl]\nuunpkhi z5.d, z2.s\nuunpklo z2.d, z2.s\nstr z24, [x8, #15, mul vl]\nstr z4, [x8, #8, mul vl]\nuunpkhi z4.d, z1.s\nuunpklo z1.d, z1.s\nstr z3, [x8, #6, mul vl]\nuunpkhi z3.d, z0.s\nuunpklo z0.d, z0.s\nstr z25, [x8, #13, mul vl]\nstr z26, [x8, #11, mul vl]\nstr z7, [x8, #9, mul vl]\nstr z6, [x8, #7, mul vl]\nstr z5, [x8, #5, mul vl]\nstr z2, [x8, #4, mul vl]\nstr z4, [x8, #3, mul vl]\nstr z1, [x8, #2, mul vl]\nstr z3, [x8, #1, mul vl]\nstr z0, [x8]\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i64> (<vscale x 32 x i32>) (in function: test)",
  "ll": "define <vscale x 32 x i64> @test(<vscale x 32 x i32> %a) vscale_range(2, 2){\n  %r = zext <vscale x 32 x i32> %a to <vscale x 32 x i64>\n  ret <vscale x 32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:16 CodeSize:1 Lat:1 SizeLat:1 for:   %r = zext <vscale x 32 x i32> %a to <vscale x 32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i64> %r"
 },
 {
  "instr": "sext",
  "ty": "<vscale x 32 x i32>",
  "variant": "cast i64",
  "codesize": 1,
  "thru": 16,
  "lat": 1,
  "sizelat": 1,
  "size": 32,
  "gisize": -1,
  "extrasize": 0,
  "asm": "sunpkhi z24.d, z7.s\nsunpklo z7.d, z7.s\nsunpkhi z25.d, z6.s\nsunpklo z6.d, z6.s\nsunpkhi z26.d, z5.s\nsunpklo z5.d, z5.s\nstr z7, [x8, #14, mul vl]\nsunpkhi z7.d, z4.s\nsunpklo z4.d, z4.s\nstr z6, [x8, #12, mul vl]\nsunpkhi z6.d, z3.s\nsunpklo z3.d, z3.s\nstr z5, [x8, #10, mul vl]\nsunpkhi z5.d, z2.s\nsunpklo z2.d, z2.s\nstr z24, [x8, #15, mul vl]\nstr z4, [x8, #8, mul vl]\nsunpkhi z4.d, z1.s\nsunpklo z1.d, z1.s\nstr z3, [x8, #6, mul vl]\nsunpkhi z3.d, z0.s\nsunpklo z0.d, z0.s\nstr z25, [x8, #13, mul vl]\nstr z26, [x8, #11, mul vl]\nstr z7, [x8, #9, mul vl]\nstr z6, [x8, #7, mul vl]\nstr z5, [x8, #5, mul vl]\nstr z2, [x8, #4, mul vl]\nstr z4, [x8, #3, mul vl]\nstr z1, [x8, #2, mul vl]\nstr z3, [x8, #1, mul vl]\nstr z0, [x8]\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i64> (<vscale x 32 x i32>) (in function: test)",
  "ll": "define <vscale x 32 x i64> @test(<vscale x 32 x i32> %a) vscale_range(2, 2){\n  %r = sext <vscale x 32 x i32> %a to <vscale x 32 x i64>\n  ret <vscale x 32 x i64> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:16 CodeSize:1 Lat:1 SizeLat:1 for:   %r = sext <vscale x 32 x i32> %a to <vscale x 32 x i64>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i64> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 2 x i64>",
  "variant": "cast i32",
  "codesize": 0,
  "thru": 0,
  "lat": 0,
  "sizelat": 0,
  "size": 0,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 2 x i32> (<vscale x 2 x i64>) (in function: test)",
  "ll": "define <vscale x 2 x i32> @test(<vscale x 2 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 2 x i64> %a to <vscale x 2 x i32>\n  ret <vscale x 2 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 0 for:   %r = trunc <vscale x 2 x i64> %a to <vscale x 2 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 2 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 4 x i64>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z0.s, z0.s, z1.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i16> (<vscale x 4 x i64>) (in function: test)",
  "ll": "define <vscale x 4 x i16> @test(<vscale x 4 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 4 x i64> %a to <vscale x 4 x i16>\n  ret <vscale x 4 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = trunc <vscale x 4 x i64> %a to <vscale x 4 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 4 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 4 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 1,
  "lat": 1,
  "sizelat": 1,
  "size": 1,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z0.s, z0.s, z1.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 4 x i32> (<vscale x 4 x i64>) (in function: test)",
  "ll": "define <vscale x 4 x i32> @test(<vscale x 4 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 4 x i64> %a to <vscale x 4 x i32>\n  ret <vscale x 4 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of 1 for:   %r = trunc <vscale x 4 x i64> %a to <vscale x 4 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 4 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 8 x i64>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z2.s, z2.s, z3.s\nuzp1 z0.s, z0.s, z1.s\nuzp1 z0.h, z0.h, z2.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i8> (<vscale x 8 x i64>) (in function: test)",
  "ll": "define <vscale x 8 x i8> @test(<vscale x 8 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 8 x i64> %a to <vscale x 8 x i8>\n  ret <vscale x 8 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:3 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 8 x i64> %a to <vscale x 8 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 8 x i64>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 3,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z2.s, z2.s, z3.s\nuzp1 z0.s, z0.s, z1.s\nuzp1 z0.h, z0.h, z2.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i16> (<vscale x 8 x i64>) (in function: test)",
  "ll": "define <vscale x 8 x i16> @test(<vscale x 8 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 8 x i64> %a to <vscale x 8 x i16>\n  ret <vscale x 8 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:3 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 8 x i64> %a to <vscale x 8 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 8 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 2,
  "lat": 1,
  "sizelat": 1,
  "size": 3,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z2.s, z2.s, z3.s\nuzp1 z0.s, z0.s, z1.s\nmov z1.d, z2.d\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 8 x i32> (<vscale x 8 x i64>) (in function: test)",
  "ll": "define <vscale x 8 x i32> @test(<vscale x 8 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 8 x i64> %a to <vscale x 8 x i32>\n  ret <vscale x 8 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:2 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 8 x i64> %a to <vscale x 8 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 8 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 16 x i64>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 7,
  "lat": 1,
  "sizelat": 1,
  "size": 7,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z6.s, z6.s, z7.s\nuzp1 z4.s, z4.s, z5.s\nuzp1 z2.s, z2.s, z3.s\nuzp1 z0.s, z0.s, z1.s\nuzp1 z1.h, z4.h, z6.h\nuzp1 z0.h, z0.h, z2.h\nuzp1 z0.b, z0.b, z1.b\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i8> (<vscale x 16 x i64>) (in function: test)",
  "ll": "define <vscale x 16 x i8> @test(<vscale x 16 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 16 x i64> %a to <vscale x 16 x i8>\n  ret <vscale x 16 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:7 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 16 x i64> %a to <vscale x 16 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 16 x i64>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 6,
  "lat": 1,
  "sizelat": 1,
  "size": 6,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z2.s, z2.s, z3.s\nuzp1 z0.s, z0.s, z1.s\nuzp1 z1.s, z6.s, z7.s\nuzp1 z3.s, z4.s, z5.s\nuzp1 z0.h, z0.h, z2.h\nuzp1 z1.h, z3.h, z1.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i16> (<vscale x 16 x i64>) (in function: test)",
  "ll": "define <vscale x 16 x i16> @test(<vscale x 16 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 16 x i64> %a to <vscale x 16 x i16>\n  ret <vscale x 16 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:6 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 16 x i64> %a to <vscale x 16 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 16 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 4,
  "lat": 1,
  "sizelat": 1,
  "size": 4,
  "gisize": -1,
  "extrasize": 0,
  "asm": "uzp1 z0.s, z0.s, z1.s\nuzp1 z1.s, z2.s, z3.s\nuzp1 z2.s, z4.s, z5.s\nuzp1 z3.s, z6.s, z7.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 16 x i32> (<vscale x 16 x i64>) (in function: test)",
  "ll": "define <vscale x 16 x i32> @test(<vscale x 16 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 16 x i64> %a to <vscale x 16 x i32>\n  ret <vscale x 16 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:4 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 16 x i64> %a to <vscale x 16 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 16 x i32> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 32 x i64>",
  "variant": "cast i8",
  "codesize": 1,
  "thru": 14,
  "lat": 1,
  "sizelat": 1,
  "size": 30,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ldr z0, [x0, #9, mul vl]\nldr z1, [x0, #8, mul vl]\nldr z2, [x0, #11, mul vl]\nldr z3, [x0, #15, mul vl]\nldr z4, [x0, #14, mul vl]\nldr z5, [x0, #1, mul vl]\nldr z6, [x0, #5, mul vl]\nldr z7, [x0, #4, mul vl]\nldr z24, [x0, #7, mul vl]\nuzp1 z0.s, z1.s, z0.s\nldr z25, [x0, #6, mul vl]\nldr z26, [x0]\nuzp1 z3.s, z4.s, z3.s\nldr z27, [x0, #3, mul vl]\nldr z28, [x0, #2, mul vl]\nuzp1 z6.s, z7.s, z6.s\nldr z29, [x0, #10, mul vl]\nldr z30, [x0, #13, mul vl]\nuzp1 z24.s, z25.s, z24.s\nuzp1 z5.s, z26.s, z5.s\nldr z31, [x0, #12, mul vl]\nuzp1 z7.s, z28.s, z27.s\nuzp1 z2.s, z29.s, z2.s\nuzp1 z4.s, z31.s, z30.s\nuzp1 z1.h, z6.h, z24.h\nuzp1 z5.h, z5.h, z7.h\nuzp1 z2.h, z0.h, z2.h\nuzp1 z3.h, z4.h, z3.h\nuzp1 z0.b, z5.b, z1.b\nuzp1 z1.b, z2.b, z3.b\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i8> (<vscale x 32 x i64>) (in function: test)",
  "ll": "define <vscale x 32 x i8> @test(<vscale x 32 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 32 x i64> %a to <vscale x 32 x i8>\n  ret <vscale x 32 x i8> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:14 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 32 x i64> %a to <vscale x 32 x i8>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i8> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 32 x i64>",
  "variant": "cast i16",
  "codesize": 1,
  "thru": 12,
  "lat": 1,
  "sizelat": 1,
  "size": 28,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ldr z0, [x0, #13, mul vl]\nldr z1, [x0, #12, mul vl]\nldr z2, [x0, #15, mul vl]\nldr z3, [x0, #11, mul vl]\nldr z4, [x0, #10, mul vl]\nldr z5, [x0, #5, mul vl]\nldr z6, [x0, #1, mul vl]\nldr z7, [x0]\nldr z24, [x0, #3, mul vl]\nldr z25, [x0, #2, mul vl]\nldr z26, [x0, #4, mul vl]\nldr z27, [x0, #7, mul vl]\nuzp1 z3.s, z4.s, z3.s\nldr z28, [x0, #6, mul vl]\nldr z29, [x0, #14, mul vl]\nuzp1 z6.s, z7.s, z6.s\nldr z30, [x0, #9, mul vl]\nldr z31, [x0, #8, mul vl]\nuzp1 z24.s, z25.s, z24.s\nuzp1 z5.s, z26.s, z5.s\nuzp1 z26.s, z1.s, z0.s\nuzp1 z7.s, z28.s, z27.s\nuzp1 z25.s, z29.s, z2.s\nuzp1 z4.s, z31.s, z30.s\nuzp1 z0.h, z6.h, z24.h\nuzp1 z1.h, z5.h, z7.h\nuzp1 z2.h, z4.h, z3.h\nuzp1 z3.h, z26.h, z25.h\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i16> (<vscale x 32 x i64>) (in function: test)",
  "ll": "define <vscale x 32 x i16> @test(<vscale x 32 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 32 x i64> %a to <vscale x 32 x i16>\n  ret <vscale x 32 x i16> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:12 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 32 x i64> %a to <vscale x 32 x i16>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i16> %r"
 },
 {
  "instr": "trunc",
  "ty": "<vscale x 32 x i64>",
  "variant": "cast i32",
  "codesize": 1,
  "thru": 8,
  "lat": 1,
  "sizelat": 1,
  "size": 24,
  "gisize": -1,
  "extrasize": 0,
  "asm": "ldr z7, [x0, #15, mul vl]\nldr z24, [x0, #14, mul vl]\nldr z6, [x0, #13, mul vl]\nldr z4, [x0, #9, mul vl]\nldr z5, [x0, #8, mul vl]\nldr z3, [x0, #7, mul vl]\nldr z1, [x0, #3, mul vl]\nldr z2, [x0, #2, mul vl]\nldr z0, [x0, #1, mul vl]\nuzp1 z7.s, z24.s, z7.s\nldr z25, [x0]\nldr z26, [x0, #6, mul vl]\nuzp1 z4.s, z5.s, z4.s\nldr z27, [x0, #5, mul vl]\nldr z28, [x0, #4, mul vl]\nuzp1 z1.s, z2.s, z1.s\nldr z29, [x0, #12, mul vl]\nldr z30, [x0, #11, mul vl]\nuzp1 z0.s, z25.s, z0.s\nuzp1 z3.s, z26.s, z3.s\nldr z31, [x0, #10, mul vl]\nuzp1 z2.s, z28.s, z27.s\nuzp1 z6.s, z29.s, z6.s\nuzp1 z5.s, z31.s, z30.s\nret",
  "giasm": "LLVM ERROR: unable to lower function: <vscale x 32 x i32> (<vscale x 32 x i64>) (in function: test)",
  "ll": "define <vscale x 32 x i32> @test(<vscale x 32 x i64> %a) vscale_range(2, 2){\n  %r = trunc <vscale x 32 x i64> %a to <vscale x 32 x i32>\n  ret <vscale x 32 x i32> %r\n}",
  "costoutput": "Printing analysis 'Cost Model Analysis' for function 'test':\nCost Model: Found costs of RThru:8 CodeSize:1 Lat:1 SizeLat:1 for:   %r = trunc <vscale x 32 x i64> %a to <vscale x 32 x i32>\nCost Model: Found costs of RThru:0 CodeSize:1 Lat:1 SizeLat:1 for:   ret <vscale x 32 x i32> %r"
 }
]